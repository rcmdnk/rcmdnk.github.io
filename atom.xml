<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[rcmdnk's blog]]></title>
  <link href="http://rcmdnk.github.io/atom.xml" rel="self"/>
  <link href="http://rcmdnk.github.io/"/>
  <link href="http://rcmdnk.superfeedr.com/" rel="hub"/>
  <updated>2013-09-01T03:10:33+02:00</updated>
  <id>http://rcmdnk.github.io/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rdmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Octopress]ブログに置く便利なウィジェット]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/31/blog-octopress/"/>
    <updated>2013-08-31T23:47:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/31/blog-octopress</id>
    <content type="html"><![CDATA[<p>Octopress上で追加したWidgetについてのまとめ。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#はてブ人気エントリー">はてブ人気エントリー</a> </li>
 <li><a href="#Twitterタイムライン">Twitterタイムライン</a> </li>
 <li><a href="#Zenback">Zenback</a> </li>
 <li><a href="#LinkWithin">LinkWithin</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="はてブ人気エントリー">はてブ人気エントリー</h1>

<p><img src="http://rcmdnk.github.io/images/post/20130831_hatebu.jpg" "" ""></p>

<p>はてブの人気エントリーのウィジェットは
はてなの<a href="http://b.hatena.ne.jp/guide/blogparts.select?type=widget">ブログパーツの設定</a>
から作ることが出来ます(はてなアカウントが必要)。</p>

<p>自分のURLを入れるとコードを作ってくれるのでそれを貼り付けるだけで出来ます。
Octopressでは
これを<code>source/_includes/custom/asides/hatebu.html</code>としてコードを保存して
おきます。(<code>section</code>タグを追加)</p>

<figure class='code'><figcaption><span>source/_includes/custom/asides/hatebu.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">&quot;javascript&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://b.hatena.ne.jp/js/widget.js&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">&quot;javascript&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">url</span>   <span class="o">=</span> <span class="s2">&quot;http://rcmdnk.github.io/&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="s2">&quot;人気エントリー&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">sort</span>  <span class="o">=</span> <span class="s2">&quot;count&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="mi">250</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">num</span>   <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">theme</span> <span class="o">=</span> <span class="s2">&quot;default&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">Hatena</span><span class="p">.</span><span class="nx">BookmarkWidget</span><span class="p">.</span><span class="nx">load</span><span class="p">();</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じ。作成ページでもオプションを選べますが、
必要に応じてコードの値を変更することも出来ます。
Octopressのサイドバーに合うように<code>width</code>は<code>250</code>にしました。
<code>sort</code>の値が<code>count</code>だと全ページからはてブの多い順、
<code>Hot</code>にすると新着エントリーになります。
載せる数や名前なども後から調整できます。</p>

<p>これで<code>_config.yml</code>の<code>default_asides</code>へ<code>custom/asides/hatebu.html</code>
を加えることでサイドバーへ表示することが出来ます。
(まだ少ないものばかりで敢えて載せるのは微妙。。。)</p>

<h1 id="Twitterタイムライン">Twitterタイムライン</h1>

<p><img src="http://rcmdnk.github.io/images/post/20130831_twitter.jpg" "" ""></p>

<p>Twitterの<a href="https://twitter.com/settings/widgets">ウィジェット</a>(Twitterのアカウントが必要)から好きなウィジェットを作れます<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<p>今、サイドバーでは<code>検索</code>でアカウント名(<code>rcmdnk</code>)を検索したものを使っています(エゴサーチ。。。)。</p>

<p>ウィジェットを作成すると、そのウィジェットはTwitter内でID管理される様で、
出来上がったウィジェットのコードを直接書き換えて変更できることは
限られているようです。
(カスタマイズをすべて出来なくする設定もあります。)</p>

<p>上のページから作ったコードを下の様に
<code>source_includes/custom/asides/twitter_search.html</code>へ保存。
(<code>section</code>と<code>h1</code>も追加)</p>

<figure class='code'><figcaption><span>source/_includes/custom/asides/twitter_search.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Tweets about rcmdnk <span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;twitter-timeline&quot;</span> <span class="na">data-chrome=</span><span class="s">&quot;transparent&quot;</span> <span class="na">width=</span><span class="s">&quot;280&quot;</span> <span class="na">height=</span><span class="s">&quot;400&quot;</span>  <span class="na">href=</span><span class="s">&quot;https://twitter.com/search?q=rcmdnk&quot;</span>  <span class="na">data-widget-id=</span><span class="s">&quot;373008330047770624&quot;</span><span class="nt">&gt;</span>Tweet about rcmdnk<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;script&gt;</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">id</span><span class="p">){</span><span class="kd">var</span> <span class="nx">js</span><span class="p">,</span><span class="nx">fjs</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">s</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="sr">/^http:/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">location</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;http&#39;</span><span class="o">:</span><span class="s1">&#39;https&#39;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="nx">js</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="nx">js</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">id</span><span class="p">;</span><span class="nx">js</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;://platform.twitter.com/widgets.js&quot;</span><span class="p">;</span><span class="nx">fjs</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">js</span><span class="p">,</span><span class="nx">fjs</span><span class="p">);}}(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;script&quot;</span><span class="p">,</span><span class="s2">&quot;twitter-wjs&quot;</span><span class="p">);</span><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>data-chrome</code>を追加することで見た目を変えられます。</p>

<ul>
<li>noheader: ヘッダー無し</li>
<li>nofooter: フッター及びツイートボックス無し</li>
<li>nobarders: 境界線無し</li>
<li>noscrollbar: スクロールバー無し</li>
<li>transparent: 背景を透過</li>
</ul>


<p>のオプションがあります。
また、<code>width</code>、<code>height</code>で大きさを変えることも出来ます。</p>

<p>その他検索ワードなどを変更したい場合はTwitterのウィジェット管理のページから
ウィジェットの設定を変更する必要があります。</p>

<p>できたら、
<code>_config.yml</code>の<code>default_asides</code>へ<code>custom/asides/twitter_search.html</code>
を加えればOK。</p>

<h1 id="Zenback">Zenback</h1>

<p><img src="http://rcmdnk.github.io/images/post/20130831_zenback.jpg" "" ""></p>

<p><a href="http://zenback.jp/">Zenback</a>は色々な形式のフィードバックを
表示してくれるウィジェットを提供してくれます。</p>

<p>上のページからアカウントを作り、自分のブログ用のコードを作ります。
表示できるのは</p>

<ul>
<li>ソーシャルボタンセット</li>
<li>関連する記事</li>
<li>関連するみんなの記事・キーワード (必須)</li>
<li>おしらせ欄 (必須)</li>
<li>Twitterでの反応</li>
<li>はてなブックマークでの反応</li>
<li>Facebook コメント</li>
</ul>


<p>このページでは必須のものと、Twitter/はてブ/Facebookについて使っています。</p>

<p>設定を行いコードを取得したらコードを
<code>source_includes/custom/zenback.html</code>として保存。</p>

<figure class='code'><figcaption><span>source/_includes/custom/zenback.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- X:S ZenBackWidget --&gt;</span><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">unescape</span><span class="p">(</span><span class="s2">&quot;%3Cscript&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; src=&#39;http://widget.zenback.jp/?base_uri=http%3A//rcmdnk.github.io/&amp;nsid=112714283011311473%3A%3A112714293211884381&amp;rand=&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">((</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()</span><span class="o">*</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;&#39; type=&#39;text/javascript&#39;&quot;</span><span class="o">+</span><span class="nx">unescape</span><span class="p">(</span><span class="s2">&quot;%3E%3C/script%3E&quot;</span><span class="p">));</span><span class="nt">&lt;/script&gt;</span><span class="c">&lt;!-- X:E ZenBackWidget --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>さらに<code>source/_layouts/post.html</code>へ</p>

<figure class='code'><figcaption><span>source/_layouts/post.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>...
</span><span class='line'><span class="nt">&lt;/article&gt;</span>
</span><span class='line'>{% if site.zenback_show == true and page.comments == true %}
</span><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  {% include custom/zenback.html %}
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span><span class='line'>{% if site.disqus_short_name and page.comments == true %}
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>の様にDisqusの上に設置。
Disqus同様、<code>article</code>タグの外側に<code>section</code>タグの中に入れて
設定すると綺麗に納まります。
<code>page</code>にも必要な場合、<code>source/_layouts/page.html</code>へも<code>&lt;/article&gt;</code>の下へ設置します。</p>

<p>さらに有効化するために<code>_config.yml</code>へ</p>

<figure class='code'><figcaption><span>_config.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># Zenback</span>
</span><span class='line'><span class="l-Scalar-Plain">zenback_show</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>を加えておきます。<code>page.comments</code>については、デフォルト状態だと
<code>rake new_post</code>で記事を作った場合にymlブロックに</p>

<pre><code>comments: true
</code></pre>

<p>があるはずです。ページ単位で向こうにしたいときはこれを<code>false</code>へ。</p>

<p>これだけで上の設定についてはOKですが、もし関連ページも表示させたいときは
その精度を上げるためにいくつかタグを追加します。</p>

<div><script src='https://gist.github.com/6401330.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>この様に、記事のタイトル前後に<code>zenback_title_begin/end</code>タグ、
記事部分に<code>zenback_body_begin/end</code>タグを入れるとより正確に関連記事と
そのタイトルを表示してくれる様になります<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。</p>

<p><code>page</code>の方では、直接<code>source/_layouts/page.html</code>の<code>page.title</code>の行の前後と、
<code>content</code>行の前後に上の<code>article.html</code>にあるように
<code>zenback</code>タグ達を入れておきます。</p>

<h1 id="LinkWithin">LinkWithin</h1>

<p><img src="http://rcmdnk.github.io/images/post/20130831_linkwithin.jpg" "" ""></p>

<p><a href="http://www.linkwithin.com/">LinkWitin</a>はブログ内の関連ページを
画像つきでリストするウィジェットを提供してくれます。
Zenbackにも同じ機能があるのですが、
Zenbackの場合は反映されるまでに暫く時間がかかるのと、
ページの画像が上手く取れなかったので<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>、LinkWithinを試してみました。
今のところ、画像もきちんととてくれるし、即座に反映されています。</p>

<p>上のページから自分のページについてのウィジェットを作成
(<code>Platform</code>は<code>Other</code>で)。
得られたコードを<code>source/_include/custom/after_footer.html</code>に追加。</p>

<figure class='code'><figcaption><span>source/_include/custom/after_footer.html  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.linkwithin_show == true %}
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">linkwithin_site_id</span> <span class="o">=</span> <span class="mi">1795279</span><span class="p">;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://www.linkwithin.com/widget.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.linkwithin.com/&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;http://www.linkwithin.com/pixel.png&quot;</span> <span class="na">alt=</span><span class="s">&quot;Related Posts Plugin for WordPress, Blogger...&quot;</span> <span class="na">style=</span><span class="s">&quot;border: 0&quot;</span> <span class="nt">/&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;script&gt;</span><span class="nx">linkwithin_text</span><span class="o">=</span><span class="s1">&#39;You might also like...&#39;</span><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>最後の<code>linkwithin_text</code>はLinkWithinのタイトルを変更するための値です。</p>

<p>Zenback同様<code>linkwithin_show</code>で<code>_config.yml</code>から表示/非表示を変更出来るようにします。</p>

<p>表示するために、<code>_config.yml</code></p>

<figure class='code'><figcaption><span>_config.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># LinkWithin</span>
</span><span class='line'><span class="l-Scalar-Plain">linkwithin_show</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>を追加</p>

<p>この状態でもページの適当な部分に表示してくれるみたいですが、</p>

<pre><code>&lt;div class="linkwithin_div"&gt;&lt;/div&gt;
</code></pre>

<p>を置くと、この位置に表示場所を指定することが出来ます。</p>

<p>これを<code>source/_include/custom/linkwitin.html</code>というファイルを作って記入。</p>

<figure class='code'><figcaption><span>source/_include/custom/linkwitin.html  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;linkwithin_div&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>さらに<code>source/_layout/post.html</code>へ</p>

<figure class='code'><figcaption><span>source/_layouts/post.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>...
</span><span class='line'><span class="nt">&lt;/article&gt;</span>
</span><span class='line'>{% if site.linkwithin_show == true %}
</span><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  {% include linkwithin.html %}
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span><span class='line'>{% if site.zenback_show == true and page.comments == true %}
</span><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  {% include custom/zenback.html %}
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span><span class='line'>{% if site.disqus_short_name and page.comments == true %}
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>の様にZenbackの上に設置。</p>

<p>また、初期状態のままだと5つとか表示していると、
ブラウザの表示幅が狭くなった時、サイドバーに被ってしまいます。
これを回避するために、次の様な<code>sass/custom/_linkwithin.scss</code>を追加。</p>

<figure class='code'><figcaption><span>sass/custom/_linkwithin.scss  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.linkwithin_inner</span> <span class="p">{</span>
</span><span class='line'>    <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>sass/custom/_styles.scss</code>でインクルード</p>

<pre><code>@import "_linkwithin.scss";
</code></pre>

<p>で狭い時は2段組になってくれます。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="https://dev.twitter.com/ja/docs/embedded-timelines">埋め込みタイムライン</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><code>&lt;/div&gt;&lt;footer&gt;</code>の部分は、この直後に<code>_post.html</code>の中で<code>&lt;footer&gt;</code>があるのですが、
  このつながりをみてOctopressが記事部分を抜き出すフィルターをかけてる
  部分があるので、間に<code>zenback_body_end</code>が入るとこのフィルターが上手く行かず、
  結果的にdescription等に影響が出ます。
  ので、無理矢理コメントでこのつながりを追加してあります。
  (<code>post_filters.rb-&gt;raw_content()</code>)
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p>Zenbackのページを見ると、<code>og:image</code>を指定するとZenbackもそれを参照する、
  ということが書いてありますが、以前から<code>og:image</code>を追加(<a href="http://rcmdnk.github.io/blog/2013/05/21/blog-octopress/">OctopressのIndexページの変更</a>)
  して居るにも関わらず余り上手く行きませんでした(何故かアイコンロゴになることが多い)。
<a href='#fnref:3' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windowsでのショートカットの起動オプション for MagicFormation]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/30/computer-windows/"/>
    <updated>2013-08-30T00:02:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/30/computer-windows</id>
    <content type="html"><![CDATA[<p><a href="http://rcmdnk.github.io/2013/07/20/computer-windows/">MagicFormation: Windowsで使っているランチャー</a>
でMagicFormationを紹介しましたが、
ソフトを登録する際に注意する点等。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#起動オプション">起動オプション</a> </li>
 <li><a href="#直接登録出来ないフォルダ等の登録方法">直接登録出来ないフォルダ等の登録方法</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="起動オプション">起動オプション</h1>

<p>Windowsのスタートメニューに登録されてるソフトの中には、
ショートカットで起動オプション付きで登録されているものがあります<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<p>設定で<code>ショートカットはリンク元の実ファイルを登録</code>(その他の設定内)を選んでると
これらをMagicFormationにドロップして登録しようとする時、
<code>起動パス</code>にソフト実体がが登録されて、オプションは省かれてしまいます<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。</p>

<p>この場合は必要に応じて、アイコンの設定から<code>起動引数</code>の欄があるので、
ここにオプションを記入します。</p>

<p>以下、起動引数付きで登録してあるソフトです。</p>

<ul>
<li>XWin Server

<ul>
<li>起動パス: <code>C:\cygwin\bin\run.exe</code></li>
<li>起動引数: <code>/usr/bin/bash.exe -l -c</code></li>
<li>アイコン: <code>C:\cygwin\bin\XWin.exe</code></li>
</ul>
</li>
<li>Cygwin-Terminal

<ul>
<li>起動パス: <code>C:\cygwin\bin\mintty.exe</code></li>
<li>起動引数: <code>-i /Cygwin-Terminal.ico -</code></li>
<li>アイコン: <code>C:\cygwin\Cygwin-Terminal.ico</code></li>
</ul>
</li>
<li>Putty: セッション毎に作成、coLinuxの例

<ul>
<li>表示名: coLinux</li>
<li>起動パス: <code>C:\Program Files\PuTTY\putty.exe</code></li>
<li>起動引数: <code>-load coLinux -l user -pw password</code></li>
<li>アイコン: <code>C:\Program Files\coLinux\colinux-daemon.exe</code></li>
</ul>
</li>
</ul>


<p>アイコンは<code>ico</code>ファイルでも<code>exe</code>でも画像ファイルでもOKです。
Puttyの場合、<code>-load</code>でセッション名、<code>-l</code>でユーザー名、
<code>-pw</code>でパスワードが指定出来ます。
パスワードは直ぐ見れる状態になるので、
自分専用のPCでも取られても余り問題ない
(上のようにcoLinuxで外からはssh出来ないような)
様な場合に限った方が良いです。</p>

<h1 id="直接登録出来ないフォルダ等の登録方法">直接登録出来ないフォルダ等の登録方法</h1>

<p><code>コンピューター</code>や<code>ゴミ箱</code>等、デスクトップにある
アイコンを直接登録しようとすると弾かれて登録出来ません。</p>

<p>これらを登録するには、一度自分のDocumentsディレクトリ等にショートカットを作り、そのショートカットを登録します。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p>右クリックからプロパティで<code>リンク先</code>を確認。
  ソフト名の後にオプションがある場合があります。
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p>このオプションが選ばれて無いときはショートカット自体(<code>.lnk</code>)が登録され、
  従って起動オプション毎登録されます。
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Group Policy Clientサービスに接続できませんでした。]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/27/computer-windows/"/>
    <updated>2013-08-27T21:55:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/27/computer-windows</id>
    <content type="html"><![CDATA[<p>Windows Update後、題名の様なエラーがでてログイン出来ず。</p>

<!-- more -->


<p>Windows7でWindows Updateした後、再起動した時、
ログイン画面までは普通に行ったのに、
ログインしようとしたら</p>

<pre><code>Group Policy Clientサービスに接続できませんでした。
システム管理者に連絡してください。
</code></pre>

<p>と出て、強制ログアウトする状態に。
この際ログインしようとしたのは、管理者権限が無いユーザーでした。</p>

<p>試しにセーフモードで立ち上げてみたら</p>

<pre><code>The user name or password is incorrect.
</code></pre>

<p>というエラーが途中で出ましたが、その後ログイン画面に行き、
普通のログインの様な画面に移行後ログインするような状態に。</p>

<p>取り敢えず一旦再起動しなおして、管理者アカウントでログインすると、
ログインは出来たのですが、</p>

<pre><code>Windowsサービスに接続できませんでした。
Group Policy Clientサービスに接続できませんでした。
このため、標準ユーザーはこのシステムにログオンできません。
管理者ユーザーは、システムイベントログを参照して、このサービスが応答しなかった原因を確認できます。
</code></pre>

<p>というエラーメッセージが。
Windows全般的にそうですが、(知識がないので。。。)エラーログを見ても余りよく分からないので、適当にググってみると</p>

<blockquote><p><a href="http://bit.ly/16ODJZ6">レジストリの修正する</a></p></blockquote>

<p>とか</p>

<blockquote><p><a href="http://bit.ly/1fhbhRb">ユーザープロファイルを削除してみるとか</a></p></blockquote>

<p>とかありましたが、ちょっと大変そうなので、取り敢えず
システムの復元を試すことに。</p>

<p>で、結果的にはUpdate前の復元ポイントまで戻したら問題なく治りました。
その後Updateを適用しても大丈夫そうです。</p>

<p>何が問題だったんだろうか。。。？</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KDriveのサービス終了でオンラインストレージ使用について考えてみる]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/23/computer/"/>
    <updated>2013-08-23T09:43:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/23/computer</id>
    <content type="html"><![CDATA[<p>オンラインストレージサービスのKDriveが個人向けサービスを終了するようです。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#KDrive終了">KDrive終了</a> </li>
 <li><a href="#乗り換え先">乗り換え先</a> </li>
 <li><a href="#メインで使っているオンラインストレージ">メインで使っているオンラインストレージ</a> </li>
 <li><a href="#人のサーバーを通さないオンライン共有">人のサーバーを通さないオンライン共有</a>
  <ul>
  <li><a href="#AeroFS">AeroFS</a>  </li>
  <li><a href="#ownCloud">ownCloud</a>  </li>
  </ul>
 </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="KDrive終了">KDrive終了</h1>

<p>KDriveはアカウント作るだけで40GB無料で使え、さらにログイン等の簡単な作業だけで
50GBまで増えるオンラインストレージサービスなので、
一応アカウント作って、あまり重要でないけど
外から見たくなったら見えたら嬉しい、的な物を
メインのPCのみでバックアップも兼ねて同期して使ってました。</p>

<p>それがサービスを終了するようです。
<a href="http://info.kingsoft.jp/company/information/2013/08/20130823.html">キングソフトからのお知らせ</a>
によると、2013/9/2に新規アカウント停止、9/25日には無料版はアップロード停止、
さらに2014/2/28にはログインもできなくなる模様。
有料版でも2014/8/29で全て終了するみたいです。</p>

<p>法人向けサービスは続くみたいですが、やはり、50GBを簡単に無料で提供する、と言うのは
なかなか成り立つものではないのでしょうかね。
今やオンラインストレージサービスはいたるところにあるので、
有料で使うくらいなら他を使うし、無料で取り敢えず50GBだけ使ってるって人が
多かったんでしょうか？
ちょっと前に30GB無料とかやってたNドライブも<a href="http://ndrive.naver.jp/notice?page=1&amp;docId=4005">終了のアナウンス</a>出してましたが。</p>

<h1 id="乗り換え先">乗り換え先</h1>

<p>乗り換え先としては時々キャンペーンで50GBの振る舞いをしてた時に取った
Boxかな、と思って久々に開いてみたら削除された。。。
<a href="https://app.box.com/legal_text/tos">120日間ノーアクセスだと消されるようですね</a>。
いずれにしろ無料だと最大ファイルサイズが250MBなので使い道が限られるため、
あまり使い勝手が良くないかもしれません。</p>

<p>探してみたら色々ありすぎて大変な状況ですが、同じくらいの量を無料で、となると
<a href="http://www.adrive.com/">ADrive</a>辺りですが、無料だとデスクトップクライアントも
使えないので自動で同期したりすることは出来なそうです。</p>

<p>それであれば、同様にMEAGAUPLOADの後継？の<a href="https://mega.co.nz/">Mega</a>
なんかも50GB使えますが、流石に微妙な所。</p>

<p>差し当たり同じ様な量を同じように使える感じの所はない感じです。
ので、ちょっと別の方向で考えようかな、と。</p>

<h1 id="メインで使っているオンラインストレージ">メインで使っているオンラインストレージ</h1>

<div class="nailthumb-container title-thumb">
  <a href="https://www.dropbox.com/" rel="nofollow" target="_blank" >
    <img src="http://rcmdnk.github.io/images/WinApp/Dropbox.png" alt="" title="" >
  </a>
</div>


<p>今、オンラインストレージはDropboxをメインに使っていて、これは大分無料でも
容量が増えたので手持ちのマシンで色々共有するのに使っています。
20GB程度まで増えてるので、それなりに必要な物は充分共有できてます。</p>

<p>ですがそれでも20GB程度なので、ちょっと大きな物を取り敢えず入れておこう、というわけにはいきません。</p>

<p>SugerSyncやGoogle Drive等色々使えば増えますが、細切れで入れてくのも
管理が面倒になるので避けたいところです。(SugerSyncはあまり容量が増えてないので。。。)</p>

<h1 id="人のサーバーを通さないオンライン共有">人のサーバーを通さないオンライン共有</h1>

<p>上に挙げた物は<code>オンラインストレージ</code>で、サーバーを借りて
ファイルを入れておき、そこと手元のマシンで同期したりダウンロードしたり
する感じですが、最近、そのような環境をオンラインサーバーを通さず
に作れる様な物も出てきました。</p>

<h2 id="AeroFS">AeroFS</h2>

<div class="nailthumb-container title-thumb">
  <a href="https://www.aerofs.com/" rel="nofollow" target="_blank" >
   <img class="left" src="http://rcmdnk.github.io/images/WinApp/AeroFS.png" >
  </a>
</div>


<p><a href="https://aerofs.com/">AeroFS</a>はDropboxの様なファイル同期を
サーバーを通さず行います。
前にあったWindows Live Meshみたいなものです。
ちょっと前までベータ版で招待制でしたが、今は正式版ですぐに登録できます。</p>

<p>登録すると、各マシンからのアクセス等、ユーザー管理はAeroFSで行いますが、
ファイル自体はP2Pで受け渡しが行われるので完全にPrivateです。
サーバーに置いておくわけではないので、Google Driveで騒ぎになった
所有権の問題も全く関係ありえません。</p>

<p>一方、サーバー通さないので、例えば2つのマシンで共有したい時は
両方が同時に起動してないと同期できません。
一台ファイルサーバー的に常時起動しておくマシンがあればDropboxに限りなく近く
使えると思います。</p>

<p>サーバーを通さないので、基本的に自分の持っているディスク分だけいくらでも
共有可能で制限はありません。</p>

<p>履歴などの機能もありますが、これもローカルディスクに作るので、その分
ディスクは圧迫しますが、逆にディスクさえ充分あればいくらでもできます。</p>

<p>また、Share機能もあって、ファイルをShare設定しておけば
他の人ともAeroFSでフォルダを共有できる用にもなります。</p>

<p>今は一部のPCで比較的大きなファイルの共有をするのに使っています。</p>

<p>ただ、これだとWebインターフェースからファイルにはアクセス出来ないので、
AeroFSのアプリケーションを入れてないとファイルにアクセス出来ません。
それからiOS用のアプリがないので、現状iPhone等からアクセスする手段はありません。
Android版はあるみたいです。</p>

<p>ですので、完全に同期、共有化のためのシステムな感じです。</p>

<h2 id="ownCloud">ownCloud</h2>

<div class="nailthumb-container title-thumb">
  <a href="https://www.aerofs.com/" rel="nofollow" target="_blank" >
    <img class="left" src="http://rcmdnk.github.io/images/WinApp/owncloud.png" >
  </a>
</div>


<p><a href="http://owncloud.org/">ownCloud</a>はAeroFSと違いDropboxのような環境を
自前で作ってしまおう、と言った形のシステムです。
サーバーを自分で作って、そこにクライアントからアクセスします。</p>

<p>ですので、この場合には1台常時起動しているシステムが必須です。
AeroFSの場合は、例えば3台持ってたらそのうち2台ずつでも起動していれば
結果的に全て同期できますが、ownCloudではサーバーを動かしておくための
マシンが必要です。</p>

<p>その代わり、webサーバーを立ち上げて、Dropboxの様にWebアクセスも出来る様になります。
なので、完全にDropboxのようなオンラインストレージサービスを自分で
持つことが出来ます。ユーザー管理等も勿論自前なので、
完全に独立したPrivateな環境を作ることが出来ます。</p>

<p>前に見た時はサーバーがLinux専用で、自分で常時起動しておけるLinuxマシンが無かったので
試してませんでしたが、今はWindowsやMac用もあるみたいなので、そのうち試して見たいと思ってます。</p>

<p>サーバーにするのに固定IPが必要ですが、<a href="http://www.noip.com/">No-IP</a>
の様なサービスを使えば、ドメインを貰えて、そのドメインとマシンのIP
を定期的に同期し続ける事が出来るので、 擬似的に固定IPを使える様な形になり、
無理に固定IPサービスをプロバイダに頼まなくても使えます。(でないと無駄に1000円くらいするので…)</p>

<p>ownCloudで検索した時に<a href="http://owncloud.com/">http://owncloud.com/</a>も出てきましたが、
orgの方が元々立ち上げられたコミュニティのためのページで、
comの方はowonCloudを使ったサービスを提供する企業のページ、ということみたいです<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup><sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。</p>

<p>ちなみに日本でもビーグッド・テクノロジーと言う会社が<a href="http://owncloud.jp/">http://owncloud.jp/</a>というドメインを取得してサポート等を提供しているみたいです。</p>

<p>ownCloudはかなり活発に開発が行われてて大分使いやすそうなので、
DropboxやAeroFSで使ってる部分はそのままにして、
KDriveで行っていた作業的なものは、1台古いPCをファイルサーバーにしてしまって
ownCloudで行おうかな、と思ってます。
速度の問題さえ無ければDropbox分も移行しても良いかもしれません。
ハードディスクも大分安くなったので、そのサーバーで適当にバックアップを
取っておけば便利ですし。
完全にサーバー化するならLinuxにしておいた方が便利かな、とも思います。
そのうちやろう…</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://forum.owncloud.org/viewtopic.php?f=17&amp;t=8594">Difference .ORG and .COM</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="http://sourceforge.jp/magazine/11/12/15/0513233">オンラインストレージソフトウェアの商用サービスを提供する「ownCloud.com」設立。サービス開始は3か月後を予定</a>
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneでMailboxとDropboxを連携して1GBゲット]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/18/computer-ios-dropbox/"/>
    <updated>2013-08-18T15:49:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/18/computer-ios-dropbox</id>
    <content type="html"><![CDATA[<p><a href="https://www.dropbox.com/">Dropbox</a>の新たなキャンペーンとして、
<a href="https://itunes.apple.com/jp/app/mailbox/id576502633?mt=8">Mailbox</a>
と連携することで1GBゲットできるキャンペーンが始まったようなので<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>
Mailboxを入れてゲットしていみました。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#Dropboxの容量増加ページを見てみると">Dropboxの容量増加ページを見てみると</a> </li>
 <li><a href="#Mailboxをインストールしてみる">Mailboxをインストールしてみる</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="Dropboxの容量増加ページを見てみると">Dropboxの容量増加ページを見てみると</h1>

<p>Web上のDropboxの自分のホームから上にある<code>無料で容量アップ</code>の項目に行くと、
次の様な項目が追加されています。</p>

<p><img src="http://rcmdnk.github.io/images/post/20130818_dropbox_mailbox.png" "" ""></p>

<p>iPhoneなどiOSでMailboxを連携させると1GB貰えるようです。
(Androidは今のところ話無しの様。)</p>

<h1 id="Mailboxをインストールしてみる">Mailboxをインストールしてみる</h1>

<p>一時期Gmailの新しいメールクライアントとして登録することに行列を作るという
様なことをやっていたMailboxですが、
基本的な思想はInboxにあるメールに手動で簡単にいつ読むか、重要度などを設定出来るのが
強みだと思いますが、
Gmailだけ対応なのと、手動で振り分けする前にラベルで振り分けで充分
(逆に手動でやってられない)ので使ってませんでした。</p>

<p>ということで、無料なので取り敢えずApple StoreからiPhoneにインストール。</p>

<p>Googleアカウントと紐付けようとした所、Gmailとの連携時に
<code>IMAP Folders Disabled    Mailbox needs access to your IMAP folders in order to sync your data. Please enable your AllMail, Snet, Trash and [Mailbox] folders in Gmail settings and try again.</code>と言ったエラーが出て進めない。</p>

<p>Gmailの設定を見てみると<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>、IMAPは有効にしてあったのですが、
<code>すべてのメール</code>(<code>AllMail</code>)で<code>IMAPで表示</code>のチェックが外れてました。
基本、すべてのメールにラベル付けしているので、
普段、PCのメールクライアントで見るときに、すべてのメールも同期すると
余計に未読数が増えて見えたり、すべてローカルに取ってくる設定だと
重複してしまうのでこの設定は外してました。</p>

<p>ので、一時的にここにチェックを入れてiPhoneでMailboxを再び試してみると
上手く行きました。
後は、設定からDropboxとの連携をポチッとするだけ。(Dropboxは当然インストールされてるとして。)</p>

<p>これで、Dropboxのページを見ると、
獲得したボーナス容量のページに<code>Linking with the Mailbox app</code>として1GB追加されてました。</p>

<p>ちなみに、Mailboxで最初連携ができなかった時、<code>[Mailbox]</code>というラベルを
Gmail側に作れば良い、という様なのをいくつか見かけましたが、
現在はこれは作らなくて良いようです。(MailboxとGmailを連携した後このラベルは自動で作られる様。)</p>

<p>試しにちょっとMailboxを使ってみましたが、一度手動でいつ見るか振り分ける、
という作業をGmailだけでそれもiPhone上でやる気にならないのでやはり使わないかな、と。
GmailだけじゃなくてIMAPやExchange等全般的に対応してデスクトップクライアントも
あればその機能そのものは割と使いこなせば便利だとは思うのですが。。。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://lifehacker.com/mailbox-users-can-get-a-free-gigabyte-of-dropbox-space-1159534393">Get 1GB of Free Dropbox Space with Mailbox for iOS</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p>Gmailページの左のラベル一覧の一番下にある<code>ラベルの管理</code>からチェック。
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim 7.4をCygwinへインストール]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/17/computer-windows-cygwin-vim/"/>
    <updated>2013-08-17T00:44:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/17/computer-windows-cygwin-vim</id>
    <content type="html"><![CDATA[<p>Vim 7.4の正式版がリリースされたので、
Cygwinへもインストールしました。
現在のCygwinで配布されてるバイナリは7.3+patch 1-1110, 1112-1152
なので、ソースからビルドしてインストールです<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#Mercurielをインストール">Mercurielをインストール</a> </li>
 <li><a href="#Vimをインストール">Vimをインストール</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="Mercurielをインストール">Mercurielをインストール</h1>

<p>Mercurielをまだインストールしてなかったので
<a href="http://rcmdnk.github.io/blog/2013/08/08/computer-windows-cygwin/">apt-cyg</a>で</p>

<pre><code>apt-cyg -u install mercurial
</code></pre>

<p>最初大文字で<code>Mercurial</code>やコマンドの<code>hg</code>で探しても見つからなかったので
ソースからインストールしなきゃいけないのかと思いましたが、
普通に<code>mercurial</code>でありました。。。</p>

<h1 id="Vimをインストール">Vimをインストール</h1>

<p><a href="http://rcmdnk.github.io/blog/2013/08/11/computer-linux-windows-cygwin/">Stow</a>を使って管理するようにします。
オプションはマルチバイト対応とLuaやPythonなどいくつかのインタプリタを有効に。以前までの色々のオプションはざっくり落としてみました。(要らないものをdisableしてもあまり意味が無い感じがしてきたので。)</p>

<pre><code>$ cd ~/tmp/
$ hg clone https://vim.googlecode.com/hg/ vim
$ ./configure  --prefix=$HOME/usr/local/stow/vim-7.4  --enable-multibyte  --enable-luainterp=yes  --enable-perlinterp=no --enable-pythoninterp=yes --enable-python3interp=yes --enable-tclinterp --enable-rubyinterp=yes
$ make &amp;&amp; make install
$ cd ~/usr/local/stow
$ stow vim-7.4
</code></pre>

<p>こんな感じで<code>~/usr/local/</code>へ。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p>MacではHomebrew版のHEADが7.4になってますのでHomebrewで入れればOK。
  (<a href="http://rcmdnk.github.io/blog/2013/08/07/computer-vim">Lua対応Vimをインストール</a>)
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stowでmake installしたパッケージを管理]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/11/computer-linux-windows-cygwin/"/>
    <updated>2013-08-11T03:53:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/11/computer-linux-windows-cygwin</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B003KOAR0G/rcmdnk0c-22/ref=nosim/" rel="nofollow" target="_blank" ><img class="left" src="http://ecx.images-amazon.com/images/I/41PYjDYaZvL._SL160_.jpg" border="0"></a></p>

<p><a href="http://rcmdnk.github.io/blog/2013/08/04/computer-linux-mac/">pacoでmake installしたパッケージを管理</a>
で書いた様に、Linux(WindowsのcoLinuxも含む)で
make installしたパッケージも管理出来る様にしましたが、
Cygwinにもpacoを入れようとした所コンパイル出来なかったので
代わりにstowと言うインストーラーを入れました。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#Cygwinではpacoをコンパイル出来ない">Cygwinではpacoをコンパイル出来ない</a> </li>
 <li><a href="#stow">stow</a>
  <ul>
  <li><a href="#paco+v.s.+stow">paco v.s. stow</a>  </li>
  <li><a href="#stowインストール">stowインストール</a>  </li>
  <li><a href="#stowの使い方">stowの使い方</a>  </li>
  <li><a href="#すでにインストールしてあるパッケージに対してstowで再インストールする場合">すでにインストールしてあるパッケージに対してstowで再インストールする場合</a>  </li>
 </ul>
 <li><a href="#まとめ">まとめ</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="Cygwinではpacoをコンパイル出来ない">Cygwinではpacoをコンパイル出来ない</h1>

<p>pacoのパッケージを取ってきてCygwinでコンパイルしようとすると</p>

<pre><code>log.c:67:20: error: ‘RTLD_NEXT’ undeclared (first use in this function)
</code></pre>

<p>と言った様なエラーが出てコンパイル出来ないのですが、これはglibcが入ってないからですが、
Cygwinではglibcは入れられない様です<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<p>いくつかそれっぽいものはありましたが<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup><sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>、素直に入れることは
出来なそうなのでpacoは辞めておくことに。</p>

<h1 id="stow">stow</h1>

<p><a href="http://www.gnu.org/software/stow/">stow</a>はpacoと同じ様な<code>make install</code>などで
<code>apt-get</code>などを通さず直接インストールするパッケージを管理する
インストーラーです。</p>

<h2 id="paco+v.s.+stow">paco v.s. stow</h2>

<p>pacoとstowの違いは</p>

<ul>
<li>paco: <code>/usr/local/var/log/paco</code>等のディレクトリ以下にパッケージ名情報ファイルを作り、
その情報を元にインストールされたファイルを管理する。</li>
<li>stow: <code>/usr/local/stow/</code>等のディレクトリ以下にパッケージ名ディレクトリを作り、
その中にパッケージをインストールする。
そこから<code>/usr/local/</code>などへリンクを張る。</li>
</ul>


<p>pacoでインストールした場合は、パッケージ自体は通常通りインストールされるので、<code>/usr/local/var/log/paco</code>自体を削除しても問題有りません。</p>

<p>stowの場合は<code>/usr/local/</code>へはリンクが貼られるだけなので
通常インストールとは形が変わります。
一方、stowは<code>/usr/local/stow/</code>からのリンクを管理するので、
例えば1つのパッケージでバージョンの違う物を両方インストールしておいて、
一時的に切り替える事が簡単に出来ます。
新しいバージョンを入れて取り敢えず試してみる、と言うことができるので、
その点でstowが結構便利かもしれません。</p>

<h2 id="stowインストール">stowインストール</h2>

<ul>
<li>Cygwin</li>
</ul>


<p><a href="http://rcmdnk.github.io/blog/2013/06/24/computer-windows-git-cygwin/">apt-cyg</a>で</p>

<pre><code>$ apt-cyg install stow
</code></pre>

<ul>
<li>Mac</li>
</ul>


<p><a href="http://rcmdnk.github.io/blog/2013/06/21/computer-mac/">Homebrew</a>で</p>

<pre><code>$ brew install stow
</code></pre>

<ul>
<li>Linux</li>
</ul>


<p>apt-getなど。root権限がないところでローカルに入れる場合は自分もstowで管理。</p>

<pre><code>$ cd ~/tmp/
$ wget http://ftp.gnu.org/gnu/stow/stow-2.2.0.tar.gz
$ tar xzf stow-2.2.0.tar.gz
$ cd stow-2.2.0
$ ./configure --prefix=$HOME/usr/local/stow/stow-2.2.0
$ make &amp;&amp; make install
$ cd ~/usr/local/stow
$ ./stow-2.2.0/bin/stow stow-2.2.0
</code></pre>

<h2 id="stowの使い方">stowの使い方</h2>

<p>まず、stowで管理するパッケージをインストールするディレクトリを決めておきます。
通常は最終的にインストールするディレクトリ下にstowというディレクトリを作ります。
(上の場合は<code>$HOME/usr/local/</code>に<code>bin/stow</code>などをインストールするので
<code>$HOME/usr/local/stow</code>ディレクトリを作って入れています。)</p>

<p>パッケージをインストールする際は、prefix等でインストール先を
<code>$HOME/usr/local/stow</code>+<code>パッケージ名</code>に指定して後は通常通りインストールします。</p>

<p>インストール後、stowディレクトリへ行き、</p>

<pre><code>$ stow package
</code></pre>

<p>とすることで、package内から<code>../</code>の<code>/bin/</code>等へリンクが張られます。</p>

<p>アンインストールは</p>

<pre><code>$ stow -D package
</code></pre>

<p>とするとリンクが削除されます。パッケージがその後必要なければ
stowディレクトリから実体も削除すればOK。</p>

<p>バージョンの違う同じパッケージをインストールしてる場合は</p>

<pre><code>$ stow -D package-1.0
$ stow package-2.0
</code></pre>

<p>の様にすれば1.0から2.0へ切り替える事が出来、
実体は残ったままなので、同じ様に1.0に戻る事もすぐ出来ます。</p>

<pre><code>$ stow -n package-2.0
</code></pre>

<p>とすると、ドライランすることが出来ます。</p>

<p>通常は、カレントディレクトリがstowディレクトリ、親ディレクトリが
リンクを作るインストール先ですが、これを変えたい場合は</p>

<ul>
<li><code>-d stow_dir</code>、<code>--dir=stow_dir</code>でstowディレクトリを指定。</li>
<li><code>-t target_dir</code>、<code>--target=target_dir</code>でインストール先ディレクトリを指定。</li>
</ul>


<p>します。ただ、pacoの場合と違い、これらの情報は残らないので、
特別指定した場合はアンインストールする場合も指定する必要があるので、
管理上、最終的なインストール先の下にstowディレクトリを作るのが良いかと思います。</p>

<h2 id="すでにインストールしてあるパッケージに対してstowで再インストールする場合">すでにインストールしてあるパッケージに対してstowで再インストールする場合</h2>

<p>すでにパッケージがインストールしてあると、
リンクでなく実体が存在するのでstowでリンクを作ろうとすると
エラーが出ます。
(<code>-D</code>で削除しようとするとリンクじゃない、と言って削除してくれない。)
一旦それらのファイルを削除しないとstowで管理しようがないみたいで、
結構面倒です。</p>

<p>そこで<a href="https://github.com/rcmdnk/scripts/blob/master/stowReset.sh">stowReset.sh</a>
と言うスクリプトを作りました。</p>

<p>使い方は、まず、インストールしたいパッケージをstowディレクトリに
インストールした後、
stowディレクトリに行き、</p>

<pre><code>$ stowReset.sh package
</code></pre>

<p>とすると、packageに関連するファイルが親ディレクトリから削除されます。
stow同様に<code>-d</code>、<code>-t</code>、<code>-n</code>のオプションが使えます(<code>--dir</code>等2重ハイフンオプションは未対応)。</p>

<p>その後、通常通り、</p>

<pre><code>$ stow package
</code></pre>

<p>とすればリンクを作れる様になります。</p>

<h1 id="まとめ">まとめ</h1>

<p>pacoに比べて、新しいバージョンのテスト等にも便利に使えそうなので、
MacやLinuxでもpacoからstowへ移行しようと思います。</p>

<p>pacoだとconfigureの引数等の情報がそのまま残るのでちょっと便利ですが、
その点はちゃんとメモするようにしておけばOKかな、と。</p>

<hr />

<p>追記 2013/08/28</p>

<p><strike>暫く使ってみて問題発見。stowだと、<code>~/usr/local/stow</code>の下にパッケージディレクトリを置いて、
そこから<code>~/usr/local/</code>へリンクを張るわけですが、その際、例えば
<code>~/usr/local/bin</code>がある場合はその下からリンクを作り始め、一方<code>bin</code>ディレクトリが
ない場合は<code>bin</code>自体がリンクになってしまうみたいです。</p>

<p>つまり、最初に何も<code>~/usr/local/</code>にない状態で<code>vim</code>などをインストールすると、
<code>~/usr/local/bin</code>が<code>~/usr/local/stow/vim/bin</code>などへのシンボリックリンクになってしまいます。
こうなると、次に別のソフトをインストールするときに実質的に<code>~/usr/local/stow/vim/bin</code>内に
シンボリックリンクを置くことになってしまうので<code>~/usr/local/stow/vim/</code>を削除してしまうと
<code>~/usr/local/bin</code>自体がリンク切れになってしまいますし、vimをアップデートすると他のソフトのインストールが消えます。</p>

<p>stowのインストールでディレクトリはリンクでなく必ず掘る様にして、
また、アンインストール時はディレクトリ内に何も無いときに限り消す、みたいなラッパーを作れば良いのだと思うのですが。。。
(sourceコード直接いじった方が楽かな。。。？)そのうちなんとかしたい所。
できればpacoみたいにconfigureオプションを保存出来る様になればなおもよしですが。。。
</strike></p>

<hr />

<hr />

<p>さらに追記 2013/08/29</p>

<p>stowは意外と賢かったです。マニュアルを見たらこの辺をきちんと処理する様になってることが
分かりました。</p>

<p>最初にインストールする時は最も上位のディレクトリだけのリンクを作ろうとして
これを<code>folding</code>と呼んでいます。</p>

<p>で、<code>~/usr/local/bin</code>等が<code>~/usr/local/stow/vim/bin</code>などへのシンボリックリンクの
状態で、次にgit等をインストールすると、<code>bin</code>がシンボリックだと言う事を理解して、
まず、vimへのリンクを消し、新たにディレクトリを作り、
その中にvimとgitの<code>bin</code>内のコンテンツへのリンクを作りなおしてくれます。</p>

<p>逆に、<code>stow -D</code>で削除していく時も、中身が1つのパッケージだけになったディレクトリは
まとめてシンボリックリンクに変えられます。</p>

<p>自分でディレクトリを作ってしまったりするとこのアンインストール時に
無駄にディレクトリを残してしまうことが有ります。
(2つ以上のパッケージが同じディレクトリを使っていると、アンインストールしていって
最後の1つになった時にそのディレクトリをシンボリックリンクにしてくれますが、
最初から1つしか無いとそのディレクトリはパッケージをアンインストールしても残ってしまいます。)</p>

<p>なので、基本的に<code>bin</code>等を自分で作るべきではないです。</p>

<p>これに関連するオプションで<code>--no-folding</code>というオプションが有ります(<code>stow -h</code>では記述を忘れてるのか出て来ない)。
このオプションをインストール時につけると、所謂上で間違って指摘していたような、
各ディレクトリをシンボリックリンクでなく全て掘り下げる様に作ってくれます。
ただ、これをしてしまうとアンインストール時にからディレクトリのゴミが残ります。</p>

<p>また、<code>--no-folding</code>をアンインストール時に使うと、仮にそのディレクトリ内が
1つのパッケージだけになるような場合でもシンボリックリンクに変えたりしないで
そのまま残します。
この場合も後々アンインストールするときにゴミが残るような状態になります。</p>

<p>ので、特別理由がない限りあまり使うことはなさそうです。</p>

<p>他に、<code>--adopt</code>というオプションもあり、ちょっと特殊な動きをします。
通常、stowでインストールするとき、上に書いたように、先にシンボリックリンクでない
普通のファイルがインストールされていると上書きできずにエラーとなります。
しかし、このオプションを使うと、もし、通常ファイルがある場合、
<code>そのファイルをstowディレクトリにあるパッケージにコピーした上でシンボリックリンクを作る</code>、という動きをします。</p>

<p>ここで注意しなければいけないのは、もともとパッケージに入っているファイルが上書きされることです。
つまり、古いファイルが残っていて、それを上書きできる様なオプションではありません。</p>

<p>このオプションの使い道としては、上で作っった<code>stowReset.sh</code>を使わなくてはいけない様な状況で、
パッケージをstowディレクトリにインストール後、一度そのコピーを作り、
そのコピーパッケージでadoptし、その後、オリジナルのパッケージをrestowする、とかでしょうか？</p>

<pre><code>$ pwd
~/usr/local/stow
$ ls
vim
$ cp -r vim vim.tmp
$ stow --adopt vim.tmp &amp;&amp; stow -D vim.tmp &amp;&amp; rm -rf stow.tmp
$ stow vim
</code></pre>

<p>これで、<code>stowReset.sh</code>でやってることとだいたい同じことが出来ます。</p>

<p>ただし、パッケージ内にシンボリックリンクが元々入ってる場合があり
(ライブラリーや実行ファイルの別名など)それらは<code>--adopt</code>しようとすると
他のパッケージに管理されてるとみなされて無視されます。
従ってそのまま残り新しくインストール出来ません。その場合には<code>stowRest.sh</code>を
使ってみてください。
(数ファイルだけだと思うので、その際には手作業でもいいかもしれませんが。)</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://cygwin.com/faq.html#faq.programming.glibc">Where is glibc?</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="http://www.gurucoding.com/en/pc_cross_compiler/building_glibc_cygwin_vm.php">Building GLibc in the Cygwin VM</a>
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p><a href="http://artfiles.org/cygwin.org/pub/glibc/releases/">Index of /cygwin.org/pub/glibc/releases</a>
<a href='#fnref:3' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apt-cygでsetup.iniが404 Not Foundになった]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/08/computer-windows-cygwin/"/>
    <updated>2013-08-08T22:10:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/08/computer-windows-cygwin</id>
    <content type="html"><![CDATA[<p><a href="http://rcmdnk.github.io/blog/2013/06/24/computer-windows-git-cygwin/">Cygwinでコマンドラインからパッケージ管理をする</a>で紹介した<code>apt-cyg</code>ですが、
久しぶりに使ったらミラーサイトで必要なsetupファイルが
見つからないと言ったエラーが出たのでその対処について。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#apt-cygの修正">apt-cygの修正</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="apt-cygの修正">apt-cygの修正</h1>

<p>以前設定したまま<code>apt-cyg</code>してみると</p>

<pre><code>$ apt-cyg find vim
Working directory is /setup
Mirror is http://ftp.jaist.ac.jp/pub/cygwin/
--2013-08-08 xx:xx:xx--  http://ftp.jaist.ac.jp/pub/cygwin//setup.bz2
Resolving ftp.jaist.ac.jp (ftp.jaist.ac.jp)... 150.65.7.130
Connecting to ftp.jaist.ac.jp (ftp.jaist.ac.jp)|150.65.7.130|:80... connected.
HTTP request sent, awaiting response... 404 Not Found
2013-08-08 xx:xx:xx-- ERROR 404: Not Found.

--2013-08-08 xx:xx:xx--  http://ftp.jaist.ac.jp/pub/cygwin//setup.ini
Resolving ftp.jaist.ac.jp (ftp.jaist.ac.jp)... 150.65.7.130
Connecting to ftp.jaist.ac.jp (ftp.jaist.ac.jp)|150.65.7.130|:80... connected.
HTTP request sent, awaiting response... 404 Not Found
2013-08-08 xx:xx:xx ERROR 404: Not Found.

Error updating setup.ini, reverting
...
</code></pre>

<p>のようにsetupファイルが無いと言われて情報が更新出来ません。</p>

<pre><code>$ apt-cyg update -m http://ftp.jaist.ac.jp/pub/cygwin/
</code></pre>

<p>の様にしてみても同じ。</p>

<p><a href="http://ftp.jaist.ac.jp/pub/cygwin/">http://ftp.jaist.ac.jp/pub/cygwin/</a>
のサイトをブラウザで見てみると、<code>x86</code>、<code>x86_64</code>と言うディレクトリがあり、
それぞれの下にsetupファイルがあることがわかります。</p>

<p>手元にある32bit Windowsマシンで試しに</p>

<pre><code>$ apt-cyg update -m http://ftp.jaist.ac.jp/pub/cygwin/x86
</code></pre>

<p>としてみるとちゃんと設定出来た様子。
ただ、この状態で</p>

<pre><code>$ apt-cyg -u remove git
$ apt-cyg -u install git
</code></pre>

<p>等としてみると、</p>

<pre><code>$ apt-cyg -u install git
...
--2013-xx-xx xx:xx:xx--  http://ftp.jaist.ac.jp/pub/cygwin/x86/x86/release/git/git-1.7.9-1.tar.bz2
...
HTTP request sent, awaiting response... 404 Not Found
...
MD5 sum did not match, exiting
</code></pre>

<p>となり失敗します。
setup.ini等から得る各パッケージパス情報の中に、<code>x86</code>の部分が入ってしまっているため、
ミラーサイト名に<code>x86</code>までいれてしまうと余計に入ってしまてパッケージへのパスが間違ってる様。</p>

<p>仕方ないので<code>apt-cyg</code>自体を書き換えてみました。</p>

<hr />

<p>2013/08/12 追記</p>

<p>修正版をGitHubにUpしました。</p>

<p><a href="https://github.com/rcmdnk/apt-cyg">https://github.com/rcmdnk/apt-cyg</a></p>

<hr />

<hr />

<p>2013/08/13 追記</p>

<p>上のGitHubの修正版をにアップデートしました。
新しいものでは最後にx86等指定する必要がありませんので、
今までのapt-cygと完全に同じ様に使えます。</p>

<p>ちなみに、apt-cygのページをもう一度良く見てみたら、
gitHubにレポジトリが作られた様です
:<a href="https://github.com/tnscode-openranscode-open">transcode-open/apt-cyg</a>。
16日程前なので、恐らくその頃にこの問題が起こって指摘されて、
勝手に改造して使って、となったのでしょうか？
せっかく見つけたので、何も考えずにpull requestしてみましたが、
数日前にすでに他の人が出してたので取り下げました。(ちゃんと見ないと駄目ですね :sweat: )
数日放置されてるので、どうなるんでしょう？(pull requestされてる内容自体は指摘されてる様にもう1つ書き換える必要がありますが。)
正直に、これ見て、<code>uname</code>で自動で決めちゃえば良いか、と気づいてのアップデートです。</p>

<hr />

<div><script src='https://gist.github.com/6189422.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>ミラーサイトの情報が<code>/etc/setup/last-mirror</code>に書かれている様なので、
これに加えて<code>/etc/setup/last-arch</code>でアーキテクチャ情報を管理するようにしています。</p>

<p>ひと通りミラーサイトを見たところ、見た限りすべて<code>x86</code>、<code>x86_64</code>というディレクトリを
持っているので、<code>-m</code>でミラーサイトを指定するときに、最後にかならず
<code>x86</code>か<code>x86_64</code>を入れるようにし、
それらの情報をサイト情報とは分けて保存しておくようにしてあります。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lua対応Vimをインストール]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/07/computer-vim/"/>
    <updated>2013-08-07T20:36:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/07/computer-vim</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4048677977/rcmdnk0c-22/ref=nosim/" rel="nofollow" target="_blank" ><img class="left" src="http://ecx.images-amazon.com/images/I/41otNZcUklL._SL160_.jpg" border="0"></a></p>

<p>Vimでの補完機能のプラグインである<a href="https://github.com/Shougo/neocomplcache.vim">neocompletecache</a>
の後継版<a href="https://github.com/Shougo/neocomplete.vim">neocomplete</a>
を使うためにVimを再インストールした際の手順。
<a href="http://www.lua.org/home.html">Lua</a>自体がない環境もあったので、
Luaのインストールからです。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#Linux">Linux</a> </li>
 <li><a href="#Windows+(Cygwin)">Windows (Cygwin)</a> </li>
 <li><a href="#Mac">Mac</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="Linux">Linux</h1>

<ul>
<li>su権限持っていないのでローカルにluaをインストール:</li>
</ul>


<p><a href="http://www.lua.org/ftp/">luaのダウンロードページ</a>より最新のを取ってきてインストール。
取り敢えずmakeしてみるとエラーがでた。</p>

<pre><code>$ cd ~/tmp/
$ wget http://www.lua.org/ftp/lua-5.2.2.tar.gz
$ tar xzf lua-5.2.2.tar.gz
$ cd lua-5.2.2
$ make linux
...
make[1]: Entering directory `/home/user/tmp/lua-5.2.2/src'
make all SYSCFLAGS="-DLUA_USE_LINUX" SYSLIBS="-Wl,-E -ldl -lreadline"
make[2]: Entering directory `/home/user/tmp/lua-5.2.2/src'
gcc -o lua   lua.o liblua.a -lm -Wl,-E -ldl -lreadline-
/usr/lib/../lib64/libreadline.so: undefined reference to `PC'
/usr/lib/../lib64/libreadline.so: undefined reference to `tgetflag'
/usr/lib/../lib64/libreadline.so: undefined reference to `tgetent'
/usr/lib/../lib64/libreadline.so: undefined reference to `UP'
/usr/lib/../lib64/libreadline.so: undefined reference to `tputs'
/usr/lib/../lib64/libreadline.so: undefined reference to `tgoto'
/usr/lib/../lib64/libreadline.so: undefined reference to `tgetnum'
/usr/lib/../lib64/libreadline.so: undefined reference to `BC'
/usr/lib/../lib64/libreadline.so: undefined reference to `tgetstr'
collect2: ld returned 1 exit status
make[2]: *** [lua] Error 1
make[2]: Leaving directory `/home/user/tmp/lua-5.2.2/src'
make[1]: *** [linux] Error 2
make[1]: Leaving directory `/home/user/tmp/lua-5.2.2/src'
make: *** [linux] Error 2
</code></pre>

<p>libreadlineを調べてみると</p>

<pre><code>$ ldd -r /usr/lib64/libreadline.so
        linux-vdso.so.1 =&gt;  (0x00007fffbe3aa000)
        /$LIB/snoopy.so =&gt; /lib64/snoopy.so (0x00002b2a6a387000)
        libc.so.6 =&gt; /lib64/libc.so.6 (0x00002b2a6a5af000)
        libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00002b2a6a907000)
        /lib64/ld-linux-x86-64.so.2 (0x00002b2a69f29000)
undefined symbol: PC    (/usr/lib64/libreadline.so)
undefined symbol: UP    (/usr/lib64/libreadline.so)
undefined symbol: BC    (/usr/lib64/libreadline.so)
undefined symbol: tgetflag      (/usr/lib64/libreadline.so)
undefined symbol: tgetent       (/usr/lib64/libreadline.so)
undefined symbol: tputs (/usr/lib64/libreadline.so)
undefined symbol: tgoto (/usr/lib64/libreadline.so)
undefined symbol: tgetnum       (/usr/lib64/libreadline.so)
undefined symbol: tgetstr       (/usr/lib64/libreadline.so)
</code></pre>

<p>こんな感じ。
これに関することが
<a href="http://lua.2524044.n2.nabble.com/ANN-Lua-5-2-2-rc1-now-available-td7646399i20.html">このthread</a>
にあったので、個々にある通り<code>-ltermcap</code>を加えてみる。</p>

<pre><code>$ make linux MYLIBS=-ltermcap
</code></pre>

<p>OK。<code>$HOME/usr/local</code>に<a href="http://rcmdnk.github.io/blog/2013/08/04/computer-linux-mac/">paco</a>に登録しつつインストール。</p>

<pre><code>$ paco -D "make install INSTALL_TOP=$HOME/usr/local"
</code></pre>

<ul>
<li>Vimをインストール</li>
</ul>


<p>ソースからコンパイルしてインストール。</p>

<pre><code>$ cd ~/tmp/
$ hg clone https://vim.googlecode.com/hg/ vim
$ cd vim/src
$ LDFLAGS="-L$HOME/usr/local/lib/" ./configure --with-lua-prefix=$HOME/usr/local --prefix=$HOME/usr/local --with-local-dir=$HOME/usr/local --disable-selinux --disable-xim --disable-darwin --disable-xsmp --disable-xsmp-interact --enable-netbeans --enable-multibyte --enable-gui=no --enable-gtk2-check=no --enable-gnome-check=no --enable-motif-check=no --enable-athena-check=no --enable-nextaw-check=no --enable-carbon-check=no --disable-gtktest --disable-acl --disable-gpm --disable-sysmouse --enable-luainterp=yes --enable-mzschemeinterp=no --enable-perlinterp=no --enable-pythoninterp=yes --enable-python3interp=yes --enable-tclinterp --enable-rubyinterp=yes --enable-cscope --disable-workshop --disable-sniff --enable-hangulinput --enable-fontset --enable-largefile --enable-nls
</code></pre>

<p><code>--enable-luainterp=yes</code>でluaオプションを有効にします。
他は適宣自分に合わせて設定。</p>

<p><code>LDFLAGS</code>や<code>--with-local-dir</code>で<code>$HOME/usr/local</code>にあるライブラリー等を使う様に
指定してますが、lua用に
<code>--with-lua-prefix=$HOME/usr/local</code>が別途必要の様。</p>

<p>ちゃんとluaが見つかれば、<code>./configure</code>時に、</p>

<pre><code>...
checking if link with -L/home/user/usr/local/lib -llua is sane... yes
...
</code></pre>

<p>の様に見つかった、と言ってくれます。
<code>--with-lua-prefix</code>を指定しないと<code>/usr/</code>を見に行き、</p>

<pre><code>checking --with-lua-prefix argument... no
checking LUA_PREFIX environment var... not set, default to /usr
checking --with-luajit... no
checking for lua... (cached) /usr/bin/lua
checking Lua version... (cached) 5.1
checking if lua.h can be found in /usr/include... no
checking if lua.h can be found in /usr/include/lua5.1... no
</code></pre>

<p>な感じで失敗します。</p>

<p>configureが成功したら</p>

<pre><code>$ make &amp;&amp; make install
</code></pre>

<ul>
<li>PATHの設定</li>
</ul>


<p><code>$HOME/usr/local</code>にPATHが通ってない場合は以下の設定を<code>~/.bashrc</code>に加えておきます。</p>

<figure class='code'><figcaption><span>.bashrc  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>    <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$HOME</span>/usr/local/bin:<span class="nv">$PATH</span>
</span></code></pre></td></tr></table></div></figure>


<h1 id="Windows+(Cygwin)">Windows (Cygwin)</h1>

<ul>
<li>setup.exeを使うか<a href="http://rcmdnk.github.io/blog/2013/06/24/computer-windows-git-cygwin/">apt-cyg</a>
でluaをインストール:</li>
</ul>


<p>apt-cygで</p>

<pre><code>$ apt-cyg install lua
</code></pre>

<ul>
<li>Vimのインストール</li>
</ul>


<p>現状のCygwinで配布されてるバイナリが1-1110, 1112-1152のパッチが当たっていて、
さらにLua対応でビルドされてるので、
最近インストールしたなら対応しているはずです。</p>

<p>もし対応してなかったり古い場合は取り直し。</p>

<p>apt-cygには<code>update</code>と言ったコマンドが無いので、一度削除してから入れなおします。</p>

<pre><code>$ apt-cyg remove vim
</code></pre>

<p>そして新たにインストール:</p>

<pre><code>$ apt-cyg install vim
</code></pre>

<h1 id="Mac">Mac</h1>

<ul>
<li><a href="http://rcmdnk.github.io/blog/2013/06/21/computer-mac/">Homebrew</a>を使ってLuaをインストール:</li>
</ul>


<p>Homebrewでluaを</p>

<pre><code>$ brew install lua
</code></pre>

<ul>
<li>HomebrewでMacVimのHEADバージョンをインストール<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>:</li>
</ul>


<p>さらにvimも</p>

<pre><code>$ brew install macvim --with-cscope --with-lua --HEAD
$ sudo ln -s /usr/local/Cellar/macvim/HEAD/MacVim.app /Applications/
</code></pre>

<ul>
<li>ターミナル等から使うため<code>~/.bashrc</code>に次を追加:</li>
</ul>


<figure class='code'><figcaption><span>.bashrc  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#For MacVim</span>
</span><span class='line'><span class="k">if</span> <span class="o">[[</span> <span class="s2">&quot;$OSTYPE&quot;</span> <span class="o">=</span>~ <span class="s2">&quot;darwin&quot;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> -d /Applications/MacVim.app/Contents/MacOS <span class="o">]</span>;<span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>/Applications/MacVim.app/Contents/MacOS:<span class="nv">$PATH</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ソースから直接コンパイルしてインストール</li>
</ul>


<p>Homebrew版でも現状7.4b版がHEADで使えて、さらに<code>--with-lua</code>オプションで
luaを有効に出来るので充分ですが、もしソースから直接コンパイルして
インストールしたい場合は</p>

<pre><code>$ brew install mercurial
</code></pre>

<p>でMercurial(hg)をインストールしてから上のLinuxとかの様に<code>hg</code>でソースを取ってきて
インストール。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://supermomonga.com/2013/07/03/macvim-with-lua-features/">最新パッチ＆if_luaなMacVimで高速検索＆補完！</a>
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pacoでmake installしたパッケージを管理]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/04/computer-linux-mac/"/>
    <updated>2013-08-04T09:00:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/04/computer-linux-mac</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/8484640825/rcmdnk0c-22/ref=nosim/" rel="nofollow" target="_blank" ><img class="left" src="http://ecx.images-amazon.com/images/I/61moyMmCoxL._SL160_.jpg" border="0"></a></p>

<p>Linuxでapt-get、Macで<a href="http://rcmdnk.github.io/blog/2013/06/21/computer-mac/">Homebrew</a>、
Cygwinで<a href="http://rcmdnk.github.io/blog/2013/06/24/computer-windows-git-cygwin/">apt-cyg</a>
などでパッケージ管理出来ますが、
ソースからコンパイルして入れる場合やroot権限を持ってない環境で
<code>make install</code>して入れているパッケージが結構あります。</p>

<p>これら、適当なログはのこしてありますが、実際どのファイルが
どのパッケージに対応しているのかまでは分からなかったりします。</p>

<p>そんな中で<code>make install</code>で入れるパッケージを管理するための
<a href="http://paco.sourceforge.net/">paco</a>と言うソフトを見つけたで入れてみました。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#pacoのインストール">pacoのインストール</a>
  <ul>
  <li><a href="#pacoの使い方">pacoの使い方</a>  </li>
  <li><a href="#すでにインストールされたパッケージについて">すでにインストールされたパッケージについて</a>  </li>
  </ul>
 </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="pacoのインストール">pacoのインストール</h1>

<p>pacoの<a href="http://paco.sourceforge.net/downloads.html">Downloads</a>
ページから最新版のバージョンを確認してダウンロードしてインストールします。</p>

<pre><code>$ wget -O paco-2.0.9.tar.gz http://sourceforge.net/projects/paco/files/paco/2.0.9/paco-2.0.9.tar.gz/download
$ tar xzf paco-2.0.9.tar.gz
$ cd paco-2.0.9
$ ./configure --prefix=$HOME/usr/local --disable-gpaco --with-paco-logdir=$HOME/usr/local/var/log/paco
</code></pre>

<p>ここで、<code>--disable-gpaco</code>はGUI版のpacoを無効にしています。
GUI版をインストールするためには
gtkmmが必要で、インストールされてない状態で<code>--disbale-gpaco</code>オプションを
入れないと</p>

<pre><code>...
No package 'gtkmm-2.4' found 
...
</code></pre>

<p>等と怒られます。<code>gtkmm</code>を入れても良いのですが、
GUI版を使う予定がないのでオプションで外しておきます。</p>

<p><code>--with-paco-logdir</code>はpacoでインストールされたパッケージ情報を管理するファイルの場所で、
初期値が<code>/var/log/paco</code>になっていて、root権限が無いと書き込めないので、
変更しておきます。</p>

<p>この変更をしておかないと、root権限以外で<code>make install</code>した時に</p>

<pre><code>mkdir: /var/log/paco: Permission denied
</code></pre>

<p>と怒られます。</p>

<p>configureできたら</p>

<pre><code>$ make &amp;&amp; make install
</code></pre>

<p>でインストール完了。</p>

<p>Macで使えない、と言った話もいくつか見かけましたが、Macでも問題なく使えます。</p>

<p>pacoのページを見ると</p>

<pre><code>Note:
Paco does not work on systems in which the executables involved in the installation of the packages (mv, cp, install...) are statically linked against libc, like FreeBSD and OpenBSD.
</code></pre>

<p>とありますが、その上の表で<code>NetBSD</code>では使える様になっています。</p>

<p>OS Xのベースの<a href="http://ja.wikipedia.org/wiki/Darwin_(%e3%82%aa%e3%83%9a%e3%83%ac%e3%83%bc%e3%83%86%e3%82%a3%e3%83%b3%e3%82%b0%e3%82%b7%e3%82%b9%e3%83%86%e3%83%a0)">Darwin</a>はFreeBSDベース、となってますが、
NetBSDからも受け継いでる部分はあり<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup><sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>、
そもそもシステムとして別物の様な物みたいですが
取り敢えず手元のLionでは問題なく動いてます。</p>

<p>Macでmvを調べてみると</p>

<pre><code>$ otool -L /bin/mv
/bin/mv:
        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)
</code></pre>

<p>と言った感じでlibSystemという名の共有ライブラリ<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>だけにリンクしています。
(ので、上の注意にあるFreeBSDの様な状況には当たらない。)</p>

<p>Linuxだと(Debianなど)、</p>

<pre><code>$ ldd /bin/mv
...
libc.so.6 =&gt; /lib/libc.so.6 (0xb7746000)
...
</code></pre>

<p>と言った感じでlibcの共有ライブラリにリンクしていて、
Cygwinなんかはまた別ですが、libcの静的ライブラリにはリンクしてません。</p>

<p>FreeBSDが手元にないのでわかりませんがMacとはmvの状況が少し違うみたいです。</p>

<h2 id="pacoの使い方">pacoの使い方</h2>

<p>ここで、まず自分自身をパッケージコントロールするため、
pacoのインストール用パッケージディレクトリ(makeした場所)で</p>

<pre><code>$ make logme
</code></pre>

<p>を実行します。これでpaco自身が登録されます。</p>

<p>他のパッケージを登録するには<code>make install</code>する代わりに</p>

<pre><code>$ paco -lp vim-7.4b "make install"
</code></pre>

<p>など。
もし、Makefileがあるディレクトリがpacoの様にパッケージ名だったりする場合、</p>

<pre><code>$ paco -lD "make install"
</code></pre>

<p>の様に<code>D</code>オプションを使うと、ディレクトリ名がパッケージ名として登録されます。
version情報もここでの<code>-</code>以降になるので、
ディレクトリにバージョン情報がない場合でバージョンを把握してる場合は
<code>p</code>オプションで正しく指定して置いた方が良いかもしれません。</p>

<p>Vimなどは<code>src</code>以下にMakefileがあるので<code>D</code>オプションでやってしまうと
<code>src</code>と言うなのパッケージで登録されてしまうので注意です。
もし、間違って登録したら、
<code>$HOME/usr/local/var/log/paco/src</code>と言うファイルが出来て居るはずなので、
このファイルを<code>vim-7.4b</code>に名前を変えて、
中身の<code>Name</code>と<code>Version</code>項目を</p>

<pre><code>#:Name:     vim
#:Version:  7.4b
</code></pre>

<p>と変更しておきます。</p>

<p>登録されたパッケージ一覧を表示するには</p>

<pre><code>$ paco -a
paco-2.0.9 vim-7.4b
</code></pre>

<p>各パッケージの情報を見るには
<code>paco -i &lt;package&gt;</code>:</p>

<pre><code>$ paco -i paco
------------
paco-2.0.9
------------

Name:     paco
Version:  2.0.9
Summary:  Source code package organizer
</code></pre>

<p><code>&lt;package&gt;</code>に関してはversion入(<code>paco-2.0.9</code>)でもversion無し(<code>paco</code>)でもOK。
ここで出てくる情報の</p>

<p>インストール時に使ったconfigureのオプションを表示するには
<code>paco -o &lt;package&gt;</code>:</p>

<pre><code>$ paco -o paco
--prefix=/home/user/usr/local --disable-gpaco --with-paco-logdir=/home/user/usr/local/var/log/paco
</code></pre>

<p>インストールされたファイル一覧とファイルサイズ等を見るには</p>

<pre><code>$ paco -fst paco
paco-2.0.9:
  8k  /home/user/usr/local/share/paco/README
 40k  /home/user/usr/local/lib/libpaco-log.a
  4k  /home/user/usr/local/lib/libpaco-log.la
...
1.3M  Total
</code></pre>

<p>とします。</p>

<pre><code>$ paco -r paco
</code></pre>

<p>とすれば、上で表示されたファイル全部を消去するパッケージのアンインストールを行います。
(多分これが一番嬉しい機能。)</p>

<p>その他詳しくは<a href="http://paco.sourceforge.net/doc/paco.8.txt">pacoのmanページ</a>で。</p>

<h2 id="すでにインストールされたパッケージについて">すでにインストールされたパッケージについて</h2>

<p>pacoは<code>make install</code>時の情報を元に管理情報を作成するので、
すでにインストールされているパッケージについては情報を作る簡単な
方法はありません。</p>

<p>ソースが残っていれば再度<code>paco -lp &lt;package&gt; "make install"</code>
するのが一番簡単です。</p>

<p>無理矢理情報を追加しようと思えば、
<code>$HOME/usr/local/var/log/paco</code>にある他のパッケージのファイルを参考に、
各パッケージのファイルを作ってあげれば良いと思うのですが
すでに複数パッケージを同じディレクトリ下にインストールしてある場合は
結構面倒です。</p>

<p>各パッケージ情報のファイルの中身はconfigure情報などの後に、
ファイル一覧が</p>

<pre><code>ファイル名|サイズ|-2|-2
</code></pre>

<p>の様になっていて、サイズは適当でも良いのでファイル名だけすべて
入れておけばアンインストールは簡単に出来ます。
もしあるディレクトリ下に1つのパッケージしかインストールされてない状態なら、
ファイル一覧が簡単に作れるので、サイズは適当でもいいから
登録しておくだけでもよいかもしれませんが、
すでに複数ある場合は名前だけから判断するのも難しいファイルもあるので、
次にインストールし直すときに登録しなおすか
同じものでも<code>make install</code>し直す方が結果的には楽で正しく出来るかな、と。</p>

<hr />

<p>追記 2013/08/11</p>

<p><a href="http://rcmdnk.github.io/blog/2013/08/11/computer-linux-windows-cygwin/">stowでmake installしたパッケージを管理</a>でstowを導入してみましたが、
新しいバージョンなどをテストしたりするのにstowだと簡単に元に戻したりできるので、
stowのが便利かな、と思いstowに全面的に移行。</p>

<p>追記終わり</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://www.netbsd.org/gallery/products.html#darwin">Products based on NetBSD</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="http://en.wikipedia.org/wiki/Comparison_of_BSD_operating_systems">Comparison of BSD operating systems</a>
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p><a href="http://d.hatena.ne.jp/kanonji/20121018/1350538932">.soや.dylibや.aファイル、共有ライブラリなどについて調べてみた</a>
<a href='#fnref:3' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vimを使う上でのIME(日本語入力)の取り扱い with AutoHotKey]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/04/computer-windows-autohotkey/"/>
    <updated>2013-08-04T08:00:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/04/computer-windows-autohotkey</id>
    <content type="html"><![CDATA[<p>以前書いた
<a href="http://rcmdnk.github.io/blog/2013/06/20/computer-mac-keyremap4macbook-vim/">Vimを使う上でのIME(日本語入力)の取り扱い</a>
への付け加えで、AutoHotkeyを使って行う方法について。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>




<div><script src='https://gist.github.com/6147672.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>こんなかんじで。
<a href="http://www6.atwiki.jp/eamat/pages/17.htmla">eamat @Cabinet</a>さんのところで公開されている
IME.ahkが別途必要です。
(同じディレクトリに入れて起動するか必要な関数をコピペして入れておけばOK。)</p>

<p>初期設定ではPutty、Mintty (Cygwinで使ってる場合も)及びVim上で有効になります。</p>

<p>AutoHotkeyをインストールしてなくても使える様にexeファイルも作っておきました:
<a href="https://github.com/rcmdnk/vim_ahk/blob/master/vim_ime.exe?raw=true">vim_ime.exe</a>。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim以外でVimする: Windows+AutoHotkey編]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/08/03/computer-windows-autohotkey/"/>
    <updated>2013-08-03T17:47:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/08/03/computer-windows-autohotkey</id>
    <content type="html"><![CDATA[<p>前に<a href="http://rcmdnk.github.io/blog/2013/03/17/vim/">Vim以外でVimする: Windows編</a>
でWindowsで<a href="http://rcmdnk.github.io/blog/tags/yamy/">yamy</a>を使って
Vimっぽい動きを再現する物を作ってみましたが、
<a href="http://rcmdnk.github.io/blog/tags/autohotkey/">AutoHotkey</a>
に移行することにしたので、
AutoHotkeyでも同様の物をつくってみました。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#vim_ahk">vim_ahk</a>
  <ul>
  <li><a href="#インストール方法">インストール方法</a>  </li>
  <li><a href="#設定">設定</a>  </li>
  <li><a href="#使い方">使い方</a>  </li>
  <li><a href="#カーソルやマウス、Windowなどを複数修飾キーと共にhjklなどで操作する">カーソルやマウス、Windowなどを複数修飾キーと共にhjklなどで操作する</a>  </li>
  <li><a href="#今後の改善点">今後の改善点</a>  </li>
  </ul>
 </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="vim_ahk">vim_ahk</h1>

<h2 id="インストール方法">インストール方法</h2>

<p>AutoHotkey用vim設定ファイルはGithubの<a href="https://github.com/rcmdnk/vim_ahk">vim_ahk</a>レポジトリに置きました。</p>

<p>ここにある<a href="https://github.com/rcmdnk/vim_ahk/blob/master/vim.ahk">vim.ahk</a>
をAutoHotkeyを使って開くか、
もし、すでにAutoHotkeyを使っている場合、
このファイルを使っている設定ファイルのディレクトリに置いて、
設定ファイルの<a href="http://www.autohotkey.com/docs/Scripts.htm#auto">Auto-execute section</a>
(ReturnやHotkeyの設定などが始まる前)に</p>

<pre><code>#Include  %A_ScriptDir%\vim.ahk
</code></pre>

<p>を書いてファイルをインクルードします。(内容をコピペしても良いですが、最初のAuto-execute sectionの部分は分けてファイルの先頭に書いてください。)</p>

<p>また、AutoHotkeyは実行ファイル化の機能があって、AutoHotkey本体をインストールしなくても動かせます。
もし、AutoHotkeyをインストールしないまま試してみたい場合は、
上のレポジトリにある<a href="https://github.com/rcmdnk/vim_ahk/blob/master/vim_ahk.exe?raw=true">vim_ahk.exe</a>
をダウンロードして実行してみてください。
これだとAutoHotkeyをインストールしてなくても単独で使えます。</p>

<h2 id="設定">設定</h2>

<p>初期設定では以下のソフト上で有効になっています。</p>

<ul>
<li>Notepad (メモ帳)</li>
<li>Wordpad</li>
<li>TeraPad</li>
<li>Exploler</li>
<li>Thunderbird (only sending window)</li>
<li>Power Point</li>
<li>Word</li>
<li>Evernote</li>
</ul>


<p>vim.ahkの先頭にこれらの設定(<code>GroupAdd</code>)が書いてあります。
Thuderbirdに関しては、class名にするとFirefoxと被ってしまうので、
Windowのタイトルを取って送信Windowのみで有効に成るようになっています。
他のソフトでWindowタイトルが<code>作成:</code>等となるものがあると、そのソフトでも
有効になります。</p>

<p>Windowの調べ方や設定方法は<a href="http://rcmdnk.github.io/blog/2013/07/29/computer-windows-autohotkey/#Windowごとの設定">こちら</a>を参考にしてみてください。</p>

<p>もう一つ<code>vim_verbose</code>の値が初期では2になっていますが、
これはモードが変わったりした時に表示される情報の詳細さを指定して</p>

<ul>
<li>0: 何も表示しない</li>
<li>1: モード名のみ(<code>Vim_Normal</code>, <code>Vim_Visual</code>など)をTask Tray Tipsとして表示</li>
<li>2: リピート回数等の情報もTask Tray Tipsとして表示</li>
<li>3: メッセージボックスも表示</li>
</ul>


<p>注意として、各動き(<code>j</code>で下に下る)などすべてのNormal Modeでの動きの後に
設定の変更があるので、殆の場合にメッセージが表示されます。
従って3は完全デバッグ用です。
Tipsが邪魔な場合は0にして下さい。</p>

<h2 id="使い方">使い方</h2>

<p>Vimの基本的な動きを再現してあります。
基本的に<a href="http://rcmdnk.github.io/blog/2013/03/17/vim/">yamyでやった事</a>と
同じ事が出来ます。</p>

<p>詳細はレポジトリのREADME(<a href="https://github.com/rcmdnk/vim_ahk">vim_ahk</a>)
を参照してください。</p>

<p>AutoHotkeyの方が優れている点としては、リピート回数(38jで38行下がるなど)とかが変数で
定義できるので、yamyの場合は100回が限度にしていましたが、、
今回の場合は上限はありません。(100回以上のリピートは滅多に必要とされないと思いますが&#8230;)</p>

<p>気になる点としては、たまにホットキー先で<i class='key'>Ctrl</i>などを使う場合、
そのキーを押し続けてキーリピートを実行させようとすると
たまに<i class='key'>Ctrl</i>+<i class='key'>押したキー</i>の様な信号が送られてしまう点。</p>

<p>例えばNormal Modeで<i class='key'>p</i>は貼り付けですが、貼り付けるために<i class='key'>Ctrl</i>-<i class='key'>v</i>にマップしてあります。
複数貼り付けたい時、<i class='key'>p</i>を押し続けると途中でプリンタが呼び出される(<i class='key'>Ctrl</i>-<i class='key'>p</i>)事がありました。
これを回避するために、この貼り付けについてはリピートが効かないように
なっています。(<i class='key'>p</i>を押し続けても1回しか貼り付けられない。)</p>

<p>他の動きのキーはキーリピートを制限してませんが、おかしな動きをした場合は教えていただけるとありがたいです。</p>

<h2 id="カーソルやマウス、Windowなどを複数修飾キーと共にhjklなどで操作する">カーソルやマウス、Windowなどを複数修飾キーと共にhjklなどで操作する</h2>

<p><a href="http://rcmdnk.github.io/blog/2013/03/17/vim/">yamy</a>や<a href="http://rcmdnk.github.io/blog/2013/06/10/computer-mac-keyremap4macbook-vim/">MacでKeyRemap4macBook</a>
でやった様にカーソルやマウス、Windowsなどをvimっぽい操作で動かす
設定は現在使っている
<a href="https://github.com/rcmdnk/windows/blob/master/AutoHotkey.ahk">Mainファイル</a>
の中に書いてあります。
この中の<code>Cursor, Mouse, Window move/size</code>の項目をコピペするなり参照するなり
してください。</p>

<h2 id="今後の改善点">今後の改善点</h2>

<p>上のキーリピートの問題は1つなんとかしたいところです。
キーを離すのを待つ関数などがあるのですが、色々試しても今のところ上手く出来てません。
このvim設定の場合はそれ程問題が無いのですが、
<i class='key'>Ctrl</i>+<i class='key'>Alt</i>-<i class='key'>j</i>などで直接上下左右に移動するとき、
その時にたまに<code>j</code>などが記入されてしまって困ってるので、
なんとかしたいところです。</p>

<p>もう一つはMacの方でKeyRemap4MacBook+MadRubyで
<a href="http://rcmdnk.github.io/blog/2013/07/08/computer-mac-keyremap4macbook-vim/">マクロっぽい動きを再現</a>
してみましたが、これと同じことをしたいと思ってます。
Windowsにも似たようなソフトはいくつかあるのでそういうのも使っても良いのですが、
AutoHotkey自体が変数を使えたりするので、
なんとか単独出来ないかな、とおもってます。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutoHotkeyの使い方2]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/29/computer-windows-autohotkey/"/>
    <updated>2013-07-29T20:57:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/29/computer-windows-autohotkey</id>
    <content type="html"><![CDATA[<p>AutoHotkeyの基本的な使い方についてと、
自分が詰まったところについてのメモ。</p>

<p>変数、関数、ウィンドウ毎の設定などについて。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#変数">変数</a> </li>
 <li><a href="#関数">関数</a> </li>
 <li><a href="#Windowごとの設定">Windowごとの設定</a> </li>
 <li><a href="#分岐">分岐</a> </li>
 <li><a href="#Loop">Loop</a> </li>
 <li><a href="#長押しで違うキー設定に">長押しで違うキー設定に</a> </li>
 <li><a href="#他のファイルの">他のファイルの</a> </li>
 <li><a href="#Happy+Hacking+Keyboard用設定">Happy Hacking Keyboard用設定</a> </li>
 <li><a href="#その他参考ページなど">その他参考ページなど</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="変数">変数</h1>

<p><a href="http://rcmdnk.github.io/blog/tags/yamy/">yamy</a>やMacの<a href="http://rcmdnk.github.io/blog/tags/keyremap4macbook/">KeyRemap4MacBook</a>
等と大きく違うのが変数を使えることだと思います。
変数に文字列を収納することで、1つの変数で複数の<code>モード</code>を
作れるので管理が簡単になります。</p>

<hr />

<p><i class="icon-warning-sign "></i>
この変数の初期設定について少し注意が必要で、
<code>Auto-execute section</code>と呼ばれる領域でしか
初期値設定できません。
この領域は設定ファイルの先頭から始まり、
<code>Return</code>やキー設定などが出るまでの領域になります<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<hr />

<p>変数には型はなく、数式などでは数値である場合はその時に
数値として解釈されます。
<a href="http://rcmdnk.github.io/blog/2013/07/28/computer-windows-autohotkey/#大文字小文字の区別"> 前回</a>書いたように、
変数でも、変数自体の大文字小文字は区別されません。
(<code>a</code>という変数を作った場合に<code>A</code>でも参照できます。)</p>

<p>値の代入は<code>:=</code>か<code>=</code>で行い、<code>:=</code>の場合には右辺が評価されてから
代入が行われます。</p>

<p>文字列を入れる時は</p>

<pre><code>a := "abc" ;1
a := abc   ;2
a = "abc"  ;3
a = abc    ;4
</code></pre>

<p>とするとそれぞれ</p>

<ol>
<li><code>abc</code></li>
<li>変数abcに入っていた値</li>
<li><code>"abc"</code> (<code>"</code>も含む)</li>
<li><code>abc</code></li>
</ol>


<p>がそれぞれ代入されることになるので1と4が同じ結果になります。</p>

<p>数値の場合は</p>

<pre><code>a := 123
a = 123
</code></pre>

<p>の両方共一緒です。<code>=</code>を使って変数の値を渡すには</p>

<pre><code>a= %abc%
</code></pre>

<p>の様に、変数を<code>%</code>で囲みます。
これは他でも同様で、変数の中身を参照するには(<code>MsgBox</code>で表示させたりするには)
<code>%</code>で囲みます。</p>

<h1 id="関数">関数</h1>

<pre><code>MyFuncion(a="abc",b) {
  Send,a
  MsgBox,b
  Return
}
</code></pre>

<p>関数はこの様な形で書きます。
引数にはデフォルト値を与える事もできます。
この関数を呼ぶには</p>

<pre><code>a::MyFuncion("def","ghi")
</code></pre>

<p>の様な感じで。</p>

<hr />

<p><i class="icon-warning-sign "></i>
関数内で変数を使いたい場合、関数外の値を参照したり
変更を関数外にも反映したい場合は</p>

<pre><code>global a = "abc"
</code></pre>

<p>と各項目でglobalを付けて取り扱うか関数の最初に</p>

<pre><code>c="def"
MyFuncion(a="abc",b) {
  global
  c:=a
  ...
</code></pre>

<p>の様に<code>global</code>を書いておく必要があります。</p>

<hr />

<p>この他に<code>Goto</code>、<code>Gosub</code>と言うコマンドが有ります。</p>

<ul>
<li><code>Goto</code>は、指定したラベルの位置に飛んで処理を続ける</li>
<li><code>Gosub</code>は、指定したラベルの位置に飛んで処理を続け、<code>Return</code>が出たところで元の位置に戻ってくる</li>
</ul>


<p>という処理を行います。</p>

<pre><code>a::
  Goto,label1
  MsgBox,a
  Return
b::
  Gosub,label1
  MsgBox,b
  Return
label1:
  MsgBox,label1
  Return
</code></pre>

<p>とすると、<i class='key'>a</i>を押したときは<code>label1</code>のメッセージボックスが出るだけで、
<i class='key'>b</i>を押すと<code>label1</code>と表示された後、<code>b</code>も表示されます。</p>

<p>従って、<code>Gosub</code>の方は、引数なし関数的な使い方も出来ます。</p>

<h1 id="Windowごとの設定">Windowごとの設定</h1>

<p>Window毎にキー設定を変えるには</p>

<pre><code>#IfWInActive ahk_class Notepad
...
</code></pre>

<p>の様な形で<code>WinActive</code>を使います。
これは</p>

<pre><code>#If WInActive("ahk_class Notepad")
...
</code></pre>

<p>と書くことも出来ます。</p>

<p><code>#If</code>を使うことでそれ以降、その条件下でのみ設定を有効にでき、
<code>WinActive</code>はその後に続くWindowが最前面の時、となります。</p>

<p>指定を解除するには</p>

<pre><code>#IfWInActive
</code></pre>

<p>の様に引数なしで指定するとそれ以降条件無し、に戻ります。</p>

<p>指定出来るのはタイトルか上にあるようなクラス名でこれらは
AutoHotkeyのタスクトレイアイコンを右クリックした際に選べる
<code>Window spy</code>を使って調べます。</p>

<p><img src="http://rcmdnk.github.io/images/post/20130729_WindowSpy.jpg" "" ""></p>

<p>一番上の<code>Window Title &amp; Class</code>に</p>

<ul>
<li>Title: 無題 - メモ帳</li>
<li>Class: ahk_class Notepad</li>
</ul>


<p>が得られます。</p>

<p>複数のWindowを指定したい場合は<code>Group</code>を作る事が出来、</p>

<pre><code>GroupAdd Note, ahk_class Notepad
GroupAdd Note, ahk_class WordPadClass
</code></pre>

<p>の様に<code>GroupAdd</code>を使い<code>Note</code>と言う名前のGroupを作り、</p>

<pre><code>#IfWInActive ahk_group Note
...
</code></pre>

<p>と<code>ahk_group</code>で名前を指定します。</p>

<hr />

<p><i class="icon-warning-sign "></i>
FirefoxとThunderbirdのClassが同じ
<code>ahk_class MozillaWindowClass</code>です。</p>

<p>Firefoxでは<a href="http://rcmdnk.github.io/blog/tags/vimperator/">Vimperator</a>でVimっぽくしていて、
Thunderbirdではメールを書く時にAutoHotkeyでVimっぽくしたいので
割と都合が悪いです。</p>

<p>そこで、タイトルの方を使います。
Thunderbirdのメール作成Windowは</p>

<pre><code>作成:(件名なし)
</code></pre>

<p>の様なタイトル名です。もちろん、<code>件名なし</code>は件名を書いてない状態で、
件名を書き込むと変わります。</p>

<p>ただ、AutoHotkeyでは、一部が一致すれば解釈する様なので、</p>

<pre><code>#IfWinactive 作成:
</code></pre>

<p>の様な形で書いておけばThunderbirdの作成Windowで有効にする設定が出来ます。
おそらく他にも<code>作成:</code>と言ったタイトル名を持つ物はあるので注意が必要です。
(今のところ他に見つけてませんが。)</p>

<hr />

<p>Window以外にも、変数を使った条件なども使え</p>

<pre><code>#If WInActive("ahk_group Notepad") and (a="enable")
</code></pre>

<p>の様にすれば、メモ帳上で、かつ、<code>a</code>の変数に<code>enable</code>が入ってる場合に
有効になります<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。</p>

<h1 id="分岐">分岐</h1>

<p>各キー設定や関数の中でも<code>if</code>が使えます。</p>

<pre><code>a::
  if WInActive("ahk_group Notepad") {
    Send,b
  }else if (a="enable")
    Send,c
  }else{
    Send,d
  }
  Return
</code></pre>

<p>と言うように<code>else if</code>等も使えます。
(この場合には<code>IfWinactive</code>)</p>

<hr />

<p><i class="icon-warning-sign "></i>
この場合にも<code>IfWinactive</code>が使えますが、
その場合は、<code>{</code>が必ず次の行にくる必要があります<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>。</p>

<pre><code>a::
  IfWInActive ahk_group Notepad
  {
     ...
</code></pre>

<p><code>If WInActive("...</code>の場合は同じ行でも次でもOK。</p>

<hr />

<h1 id="Loop">Loop</h1>

<p>繰り返しは</p>

<pre><code>Loop 10 {
  MsgBox,  %A_Index%
  If (A_Index=5){
    break
  }
  Sleep 1000
}
</code></pre>

<p>という様に<code>Loop</code>コマンドではじめ、引数として回数を指定します。</p>

<p>Loopを抜けるためには<code>break</code>、途中でループ処理を中断して戻ってLoopを再開するには<code>continue</code>を使います。</p>

<p>数字が省略された場合は、<code>break</code>で止めるか<code>return</code>などで
その設定/関数自体を終わらせるまで永遠とLoopします。</p>

<p>上の例で使われている<code>A_Index</code>はLoopの回数で
1から増えていきます。</p>

<p>上の例では、1から5までのメッセージを表示します。
最後にある<code>Sleep</code>は引数がミリ秒で、この場合ここで1秒待つことになります。</p>

<h1 id="長押しで違うキー設定に">長押しで違うキー設定に</h1>

<p><code>KeyWait</code>コマンドを使うことで長押しした時に違う命令を送ることが出来ます。</p>

<pre><code>a::
  KeyWait, a, T0.5
  if (ErrorLevel){
    Send,b
    Return
  }
  Send,c
  Return
</code></pre>

<p><code>KeyWait</code>に続き、押されているキー、待つ時間(<code>T</code>に続き<code>秒</code>単位で)を書き、
結果が<code>ErrorLevel</code>に収納されます。
指定時間内に</p>

<p>上の例では<i class='key'>a</i>を押して直ぐに話せば<code>c</code>を、
0.5秒以上押していれば<code>b</code>を送ります<sup id='fnref:4'><a href='#fn:4' rel='footnote'>4</a></sup>。</p>

<h1 id="他のファイルの">他のファイルの</h1>

<p>設定ファイルの中で他のファイルを読み込みたい時は<code>include</code>を使い</p>

<pre><code>#Include  %A_ScriptDir%\other.ahk
</code></pre>

<p>とします。
<code>%A_ScriptDir%</code>は、読み込もうとしているファイルの位置です。</p>

<hr />

<p><i class="icon-warning-sign "></i>
この位置に展開される形になるので、
<code>Auto-execute section</code>
について注意して設定する必要があります。</p>

<hr />

<h1 id="Happy+Hacking+Keyboard用設定">Happy Hacking Keyboard用設定</h1>

<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B000EXZ0VC/rcmdnk0c-22/ref=nosim/">Happy Happy Keyboard</a>
にあるダイヤモンドキー(スペース両隣のキー)の設定:</p>

<pre><code>; For HHK
vkFFsc079::RAlt
vkFFsc07b::LAlt
</code></pre>

<p>など。上の設定では</p>

<ul>
<li>左<i class='key'>&#x25c7;</i><i class="icon-arrow-right"></i>左<i class='key'>Alt</i></li>
<li>右<i class='key'>&#x25c7;</i><i class="icon-arrow-right"></i>右<i class='key'>Alt</i></li>
</ul>


<h1 id="その他参考ページなど">その他参考ページなど</h1>

<ul>
<li><a href="http://www.autohotkey.com/">本家Document</a></li>
<li><a href="http://ahkwiki.net/Top">AutoHotkey Wiki</a></li>
<li><a href="http://ahk.xrea.jp/">AutoHotkeyを流行らせるページ</a></li>
<li><a href="http://www.crystal-creation.com/software/tool/system/auto-hot-key/">AutoHotKeyの使用方法</a></li>
<li><a href="http://www6.atwiki.jp/eamat/pages/17.html">IME制御用 関数群 (IME.ahk)</a></li>
<li><a href="http://d.hatena.ne.jp/Cherenkov/20110222/p1">はてブ拡張のタグ付けを補助するAutoHotkeyスクリプト</a></li>
<li><a href="http://nanabit.net/blog/2008/03/21/putty-clipboard/">PuTTYで複数行ペースト前に警告するAHKスクリプト</a></li>
</ul>


<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://www.autohotkey.com/docs/Scripts.htm#auto">The Top of the Script (the Auto-execute Section)</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="https://sites.google.com/site/agkh6mze/translation/autohotkey_l/if">#If</a>
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p><a href="http://ahk.xrea.jp/commands/__Block.html">{&#8230;} (block)</a>
  <a href='#fnref:3' rev='footnote'>↩</a></p>
</li><li id='fn:4'><p><a href="http://ahkwiki.net/SampleCodes#1.E3.81.A4.E3.81.AE.E3.82.AD.E3.83.BC.E3.81.AB3.E7.A8.AE.E9.A1.9E.E4.BB.A5.E4.B8.8A.E3.81.AE.E5.8B.95.E4.BD.9C.E5.89.B2.E3.82.8A.E5.BD.93.E3.81.A6">サンプルコード集:1つのキーに3種類以上の動作割り当て</a>
<a href='#fnref:4' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutoHotkeyの使い方1]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/28/computer-windows-autohotkey/"/>
    <updated>2013-07-28T22:01:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/28/computer-windows-autohotkey</id>
    <content type="html"><![CDATA[<p>AutoHotkeyの基本的な使い方についてと、
自分が詰まったところについてのメモ。</p>

<p>取り敢えず、基本的なキー設定方法等。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#設定ファイル">設定ファイル</a> </li>
 <li><a href="#キー設定の基本">キー設定の基本</a> </li>
 <li><a href="#フック">フック</a> </li>
 <li><a href="#修飾キー、ワイルドカード、パススルー">修飾キー、ワイルドカード、パススルー</a> </li>
 <li><a href="#複数キー同時押しに割り当て">複数キー同時押しに割り当て</a> </li>
 <li><a href="#設定重複">設定重複</a> </li>
 <li><a href="#コメント">コメント</a> </li>
 <li><a href="#大文字小文字の区別">大文字小文字の区別</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="設定ファイル">設定ファイル</h1>

<p>起動するとタスクバーにアイコンが出るので、右クリックから<code>Edit This Script</code>
を選ぶと設定ファイルをメモ帳などで開いて編集できます。
設定ファイルはホームディレクトリ以下の<code>Documents\AutoHotkey.ahk</code>
等になります。</p>

<p>または、別途設定ファイルを作り、AutoHotkeyで開けばそのファイルの設定を
使ってAutoHotkeyを起動します。</p>

<h1 id="キー設定の基本">キー設定の基本</h1>

<p>キーバインドは<code>::</code>を挟んで先に入力キー、右にアウトプットを書きます。
単独のキーバインドの場合は</p>

<pre><code>a::b
</code></pre>

<p>この様に書けば<i class='key'>a</i>を押した時、<i class='key'>b</i>が出力されるようになります。
また、<code>Send</code>コマンドを使って</p>

<pre><code>a::Send,b
</code></pre>

<p>としても同じです。</p>

<hr />

<p><i class="icon-warning-sign "></i>
厳密には<code>Send</code>を使う場合とは一部違うところがあって、
<code>a::b</code>の様な単純な単項キー割り当ては<code>Remap</code><sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>、
<code>Send</code>や関数などを使ってコマンドを送る場合は<code>Hotkey</code><sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>
と呼びます<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>。</p>

<p>複数キーを出力したい場合は<code>Send</code>が必要です。</p>

<p>また、</p>

<pre><code>a::b
</code></pre>

<p>と書いた場合、修飾キーがそのまま<code>b</code>に渡される(下にあるワイルドカード状態？)
様になっている様です。</p>

<p>従って、<i class='key'>Shift</i>-<i class='key'>a</i>を押すと大文字の<code>B</code>が出ます。</p>

<p>一方、</p>

<pre><code>a::Send,b
</code></pre>

<p>の場合、<i class='key'>Shift</i>-<i class='key'>a</i>は大文字の<code>A</code>を出力します。</p>

<p>特に意図しない限り、<code>Send</code>で指定しておいた方が安全です。</p>

<p>また、下に書くように、大文字小文字でのケースで動きが違います。</p>

<hr />

<p>コマンドに関しては</p>

<pre><code>a::Send,  b
a::Send b
</code></pre>

<p>の様に<code>,</code>を省略してスペースを入れても、またスペースを余分に入れても
同じです。</p>

<p>複数のキーをアウトプットとして使いたい場合は、
続けて書きます。</p>

<pre><code>a::Send,Hello
</code></pre>

<p>とすれば、<i class='key'>a</i>を押した時<code>Hello</code>と出ます。
<code>Send</code>コマンドは複数に分けて、</p>

<pre><code>a::
  Send,He
  Send,llo
  Return
</code></pre>

<p>と分けても可。</p>

<hr />

<p><i class="icon-warning-sign "></i>
但し、この様に複数行に渡る場合、最後に<code>Return</code>
が必要です。
<code>Return</code>を付けておかないと、次のキー設定も含んでしまいます。
つまり</p>

<pre><code>a::
  Send,b
  Send,c
b::
  Send,d
  Return
</code></pre>

<p>とすると、<i class='key'>b</i>を押せば<code>d</code>が出るだけですが、<i class='key'>a</i>を押すと
<code>bcd</code>が出力されます。</p>

<hr />

<p><i class='key'>Space</i>等は<code>Space</code>、上下左右矢印などは<code>Up</code>/<code>Down</code>/<code>Left</code>/<code>Right</code>などで<sup id='fnref:4'><a href='#fn:4' rel='footnote'>4</a></sup>。
これらのキーは<code>Send</code>コマンドで送るときは<code>{Space}</code>
など<code>{}</code>で囲う必要があります。</p>

<h1 id="フック">フック</h1>

<pre><code>a::Send,a
</code></pre>

<p>の様な設定をしてしまうと、出力の<code>a</code>をさらに解釈しようとして、無限ループに陥ってしまうことがあります。
これを避けるためには<code>$</code>を付けて</p>

<pre><code>$a::Send,a
</code></pre>

<p>とすると、<code>a</code>をそのまま<code>a</code>と解釈して<code>a</code>を出力します。また、</p>

<pre><code># UseHook
</code></pre>

<p>を宣言することで、それ以降全て<code>$</code>をつけているのと同じ状態になります<sup id='fnref:5'><a href='#fn:5' rel='footnote'>5</a></sup><sup id='fnref:6'><a href='#fn:6' rel='footnote'>6</a></sup>。
敢えて外す必要が無い限り、取り敢えずファイルの先頭で宣言しておくと良いです。</p>

<h1 id="修飾キー、ワイルドカード、パススルー">修飾キー、ワイルドカード、パススルー</h1>

<p>修飾キー(モディファイヤー)の使い方がちょっと特殊で、以下の記号が
割り当てられていて、それらの記号との組み合わせで表現します<sup id='fnref:7'><a href='#fn:7' rel='footnote'>7</a></sup>。</p>

<ul>
<li>&#35;: win</li>
<li>!: alt</li>
<li>^: ctrl</li>
<li><p>+: shift</p>

<p>  ^a::!b
ならば、<i class='key'>Ctrl</i>-<i class='key'>a</i>を押したら<i class='key'>Alt</i>-<i class='key'>b</i>
を出力します。
これらの記号は複数同時に付ける事が出来ます。</p></li>
<li><p>*: ワイルドカード</p></li>
</ul>


<p>また、特殊な記号として<code>*</code>をキーの前につけると修飾キーの
有り無しに関わらずキーが送られ、</p>

<pre><code>*a::Send,b
</code></pre>

<p>の場合、<i class='key'>Shift</i>や<i class='key'>Ctrl</i>を押している、押していないに関わらず
<code>b</code>が送られます。</p>

<ul>
<li>~: パススルー</li>
</ul>


<p><code>~</code>を使うとそのキー自体はそのまま送られます。</p>

<pre><code>~a::b
</code></pre>

<p>だと、<code>ab</code>と出力されます。</p>

<h1 id="複数キー同時押しに割り当て">複数キー同時押しに割り当て</h1>

<p>上にある修飾キー以外にも、<code>&amp;</code>を使うことで2つのキーを同時に押した時の
動作を設定できます。</p>

<hr />

<p><i class="icon-warning-sign "></i>
<code>&amp;</code>の両側にはスペースが必要です。</p>

<p>また、<code>&amp;</code>を使うときは単純な</p>

<pre><code>a &amp; b::c
</code></pre>

<p>と言った設定は出来ず、</p>

<pre><code>a &amp; b::Send,c
</code></pre>

<p>とする必要があります。</p>

<p>さらに、<code>&amp;</code>を使うときは修飾キーを使えません。</p>

<p><i class='key'>Ctrl</i>-<i class='key'>Shift</i>-<i class='key'>a</i>を設定したいとき、</p>

<pre><code>^+a::... OK
Ctrl &amp; Shift &amp; a::... No
Ctrl &amp; +a::... No
</code></pre>

<hr />

<hr />

<p><i class="icon-warning-sign "></i>
<i class='key'>Tab</i>がちょっと思った通りに働かず、
修飾キーを2つ付けられません。</p>

<pre><code>!+Tab::a
</code></pre>

<p>とした場合は<i class='key'>Alt</i>-<i class='key'>Shift</i>-<i class='key'>Tab</i>では何も送信されません。</p>

<pre><code>Alt &amp; Tab::
  If GetKeyState("Shift", "P"){
    Send,a
  }else
    Send,b
  }
  Return
</code></pre>

<p>とした場合は、<i class='key'>Alt</i>-<i class='key'>Tab</i>で<code>b</code>が送られますが、
<i class='key'>Alt</i>-<i class='key'>Shift</i>-<i class='key'>Tab</i>では何も送られません。</p>

<hr />

<p>3つの同時押しは<code>&amp;</code>では出来ませんが、<code>GetKeyState</code>を使うことで設定出来ます。
<code>GetKeyState</code>は</p>

<pre><code>if GetKeyState("b","P")
  ...
</code></pre>

<p>等とすると<code>b</code>を押してある時、になるので他のキーとの同時押しの様に使えます。</p>

<p>ただし、以下のキー設定は全て違う部分があります。</p>

<pre><code>;1,
a &amp; b::...
;2,
b &amp; a::...
;3,
a::
  if GetKeyState("b", "P"){
    ...
;4,
b::
  if GetKeyState("a", "P"){
    ...
</code></pre>

<p>それぞれ、実際には<code>同時押し</code>ではなく、それぞれ、</p>

<ol>
<li>a</li>
<li>b</li>
<li>b</li>
<li>a</li>
</ol>


<p>が先に押されている必要があります。
1の場合は<i class='key'>b</i>が押された状態で<i class='key'>a</i>が押されると<code>b</code>そのものが出ます。
3の場合には<i class='key'>a</i>自体にキー設定をしているので、<i class='key'>b</i>が押されて居ない
場合を設定する必要が有ります。</p>

<pre><code>a::
  if GetKeyState("b","P"){
    Send,c
  }else{
    Send,a
  }
  Return
</code></pre>

<p>この様にして、<i class='key'>b</i>が押されていれば<code>c</code>、そうでなければ<code>a</code>そのものを返す、
等。</p>

<p><code>GetKeyState</code>を使うことで、キーボードとOSがサポートする範囲で同時押しを
いくつでも設定出来ます。</p>

<h1 id="設定重複">設定重複</h1>

<p>AutoHotkeyでは、同じ条件下で同じキー設定があると<code>Duplication hotkey</code>エラーが出ます。
修飾キーが違ってたり同時押し設定などであればOK。</p>

<p>従って、</p>

<pre><code>a::c
a &amp; b::d
</code></pre>

<p>このような設定は可能ですが、この場合、
<i class='key'>a</i>だけを押すと、<code>ac</code>が出ます。
設定順序が逆でも同じ。</p>

<p>また、ウィンドウ等、条件によって設定を使い分けることが出来ますが、</p>

<pre><code>#If ; Without any condition
a::b
#If A
a::c
</code></pre>

<p>の様な設定があった場合、<code>A</code>の条件下では<code>c</code>、その他では<code>b</code>が出ます。
これは順序を変更しても同じ。</p>

<p>この様に、片方が条件無し、だと<code>A</code>の条件下かどうかで順序に関係なく設定されます。</p>

<p>それ以外の場合で2つの条件が両方共とりうる場合、先に設定された方が優先されます。</p>

<pre><code>#If A
a::b
#If A and B
a::d
#If B
a::c
</code></pre>

<p>この場合、<code>A</code>の条件下では<code>b</code>、<code>B</code>単独、もしくは<code>A</code>と<code>B</code>両方が有効な場合
<code>d</code>が出て、
最後の<code>B</code>単独の条件は無視されます。
これは、<code>GetKeyState</code>を使った同時押しなどの場合も同じで<sup id='fnref:8'><a href='#fn:8' rel='footnote'>8</a></sup>、
基本的に先に設定されたものが優先されます。</p>

<h1 id="コメント">コメント</h1>

<p>コメントは各行で、<code>;</code>以降がコメントになります。
<code>;</code>を使いたいときは
<code>`</code>
がエスケープ文字なので、
これを付けて、</p>

<pre><code>`;::a
</code></pre>

<p>等とエスケープする必要があります。</p>

<h1 id="大文字小文字の区別">大文字小文字の区別</h1>

<p>設定項目で、基本的に大文字、小文字は区別されないようです。</p>

<p><code>Send</code>等も<code>send</code>でOK。
また、<i class='key'>Alt</i>を使いたい時も<code>Alt</code>でも<code>alt</code>でも、さらに<code>alT</code>などでも問題無いです。</p>

<p>また、変数や関数名も基本的にはどちらでも良いようです。</p>

<p>キー設定で</p>

<pre><code>A::c
B::Send,d
</code></pre>

<p>とすると<i class='key'>Shift</i>-<i class='key'>a</i>を押した時大文字で<code>c</code>が出ます。
また、この設定だけすると、<i class='key'>a</i>単独で押した場合が無効になります。</p>

<p>一方、<i class='key'>b</i>を押した場合、<code>d</code>が出力され、
<i class='key'>Shift</i>-<i class='key'>b</i>の場合には大文字の<code>B</code>が出力されます。
つまり、小文字の<code>b</code>で指定した場合と同じ働きになります。</p>

<pre><code>a::b
A::c
</code></pre>

<p>のようにすると、小文字指定だけが有効化され、
<i class='key'>a</i>で<code>b</code>、<i class='key'>Shift</i>-<i class='key'>a</i>で大文字<code>B</code>が出力されます。</p>

<p>一方、</p>

<pre><code>a::Send,b
A::Send,c
</code></pre>

<p>と言った指定は、<code>Duplication hotkey</code>エラーが出ます</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://ahk.xrea.jp/remap.html">Remap</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="http://ahk.xrea.jp/Hotkeys.html">Hotkey</a>
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p><a href="https://sites.google.com/site/agkh6mze/howto/key_config">キー定義に関する件</a>
  <a href='#fnref:3' rev='footnote'>↩</a></p>
</li><li id='fn:4'><p><a href="http://ahk.xrea.jp/KeyList.html">キー/マウスボタン名一覧</a>
  <a href='#fnref:4' rev='footnote'>↩</a></p>
</li><li id='fn:5'><p><a href="http://autohotkey.blog.fc2.com/blog-entry-60.html">｢hotkeys have been received in the last ms.｣の原因と解決法</a>
  <a href='#fnref:5' rev='footnote'>↩</a></p>
</li><li id='fn:6'><p><a href="http://ahk.xrea.jp/commands/_UseHook.html">#UseHook</a>
  <a href='#fnref:6' rev='footnote'>↩</a></p>
</li><li id='fn:7'><p><a href="http://ahk.xrea.jp/Hotkeys.html">Hotkeys</a>
  <a href='#fnref:7' rev='footnote'>↩</a></p>
</li><li id='fn:8'><p><a href="http://did2.blog64.fc2.com/blog-entry-371.html">AutoHotkeyにおけるラベルの優先度と3キー同時押しの定義</a>
<a href='#fnref:8' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fatal: Unable to find remote helper for 'https'の対処]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/27/computer-cygwin-git/"/>
    <updated>2013-07-27T01:17:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/27/computer-cygwin-git</id>
    <content type="html"><![CDATA[<p>Cygwinでjedi-vimを入れようとして、jedi本体を入れようと
jedi-vimのディレクトリで<code>git submodule update --init</code>
をしたら<code>fatal</code>が出た時の対処法。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#jedi-vimのsubmoduleのインストール時にfatal">jedi-vimのsubmoduleのインストール時にfatal</a> </li>
 <li><a href="#`--with-curl+--with-expat`付きでconfigure"><code>--with-curl --with-expat</code>付きでconfigure</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="jedi-vimのsubmoduleのインストール時にfatal">jedi-vimのsubmoduleのインストール時にfatal</h1>

<p>Cygwinでjedi-vimをNeoBundleでインストール後、jedi本体を入れようと
jedi-vimのディレクトリで<code>submodule update</code>したところ<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>、</p>

<pre><code>$ git submodule update --init
Cloning into 'jedi'...
fatal: Unable to find remote helper for 'https'
Clone of 'https://github.com/davidhalter/jedi.git' into submodule path 'jedi' failed
</code></pre>

<p>こんな感じのfatal errorが出ました。
どうも<code>https</code>が理解出来ないようです。</p>

<p>直接、<code>.git/config</code>内のjediのラインを<code>https://...</code>から<code>git://...</code>
とすれば、取り敢えず<code>submodule update</code>が通ってjediが使える様になりますが、
結構根本的なところなのでgitの入れ直しをして対処しました。</p>

<h1 id="`--with-curl+--with-expat`付きでconfigure"><code>--with-curl --with-expat</code>付きでconfigure</h1>

<p>gitのソースレポジトリにある<code>INSTALL</code>によると</p>

<blockquote><p>&#8220;libcurl&#8221; library is used by git-http-fetch and git-fetch.  You
 might also want the &#8220;curl&#8221; executable for debugging purposes.
 If you do not use http:// or https:// repositories, you do not
 have to have them (use NO_CURL).</p>

<p>&#8220;expat&#8221; library; git-http-push uses it for remote lock
 management over DAV.  Similar to &#8220;curl&#8221; above, this is optional
 (with NO_EXPAT).</p></blockquote>

<p>とのことで、<code>https</code>などを使うときはcurlが必要な様です。
以前gitをインストールしたときはlibcurlが入ってなかったので無しでNO_CURLな状態でコンパイルされていたようです。</p>

<pre><code>$ apt-cyg find curl
</code></pre>

<p>などとして見ると、<code>libcurl-devel</code>が見つかったのでこれをインストールしました。</p>

<pre><code>$ apt-cyg install libcurl-devel
</code></pre>

<p>今回直接関係ないですが、ついでにcurlも入ってなかったのでインストール</p>

<pre><code>$ apt-cyg install curl
</code></pre>

<p>これで、<a href="http://rcmdnk.github.io/blog/2013/06/25/computer-windows-git-cygwin/">以前インストールした</a>
ようにして、<code>config</code>だけ</p>

<pre><code>$  ./configure --prefix=/home/$USER/usr/local --with-curl  --with-expat
</code></pre>

<p>としてインストール。
expatの方もpushの時に必要な時があるかもしれないのでついでに加えて置きました。
(追記: 上の<code>INSTALL</code>にもあるように、必要ないときにNOオプションを使えということで、
<code>--with-curl --with-expat</code>はデフォルトでYES
になってるので、libcurlをインストールしてあれば自動的にインストールされるので
これらのオプションは必要ないみたいです。)</p>

<p>これで<code>http(s)</code>の場合もgitが使える様になりました。
ついでに、NeoBundleもUpdateしたことで、
jedi本体についてはjedi-vimインストール時に自動的に
インストール出来るようにもなったのでだいぶ初期インストール時の手間が省けた感じがします。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p> <a href="http://rcmdnk.github.io/blog/2013/07/21/computer-vim/">dev版jedi-vimのインストール</a>の追記に書いた様に、最新のNeoBundleを入れて、curl付きのgitが入っていればjedi-vimインストール時に
  jedi本体も自動的にインストールされる様です。
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutoHotkeyのインストール]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/24/computer-windows-autohotkey/"/>
    <updated>2013-07-24T22:01:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/24/computer-windows-autohotkey</id>
    <content type="html"><![CDATA[<p>ちょっと前に<a href="http://rcmdnk.github.io/blog/2013/06/14/computer-windows-mac-bash/">Alt(Cmd)とControlの交換</a>をしてみましたが、
Windowsでは<a href="http://rcmdnk.github.io/blog/tags/yamy/">yamy</a>での変更が少し思い通りに
行かない所があって、他を検討していました。</p>

<p>結局、おそらく一番使われてるであろうAutoHotkeyに落ち着いて、
ちょっと使ってみたらかなり色々な事ができて予想以上でした。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#AutoHotkeyとAutoHotkey_L">AutoHotkeyとAutoHotkey_L</a> </li>
 <li><a href="#CapsLockの扱い">CapsLockの扱い</a> </li>
 <li><a href="#yamyの時に起こっていた問題点">yamyの時に起こっていた問題点</a> </li>
 <li><a href="#yamyとAutoHotkeyの比較">yamyとAutoHotkeyの比較</a> </li>
 <li><a href="#他のソフト">他のソフト</a> </li>
 <li><a href="#まとめ">まとめ</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="AutoHotkeyとAutoHotkey_L">AutoHotkeyとAutoHotkey_L</h1>

<p>現在、<a href="http://www.autohotkey.com/">AutoHotkey</a>のページの
<code>Download</code>からダウンロード出来るものは<code>AutoHotkey_L</code>となってます。
<code>AutoHotkey_L</code>は<code>AutoHotkey</code>の派生版みたいなものらしく、
マルチバイト文字に対応していたりするようです<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup><sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。</p>

<p>さらに、<code>AutoHotkey_L</code>をインストールする時に、<code>ANSI</code>版か<code>Unicode</code>版かを
聞かれますが、<code>ANSI</code>版の方が以前の<code>AutoHotkey</code>との互換性が高い一方、
日本語の取り扱いはUnicodeの方が便利そう。</p>

<p>自分的には以前のAutoHotkeyも使っていないし
現状日本語使っていないのでどちらでも良いのですが、
取り敢えずUnicode版を入れてあります<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>。</p>

<h1 id="CapsLockの扱い">CapsLockの扱い</h1>

<p>CpasLockについては色々上手くいかない部分があるらしく、
特に日本語OSの場合に問題が起こる様です<sup id='fnref:4'><a href='#fn:4' rel='footnote'>4</a></sup>。
英語キーボードならOK、と言う記述も有りましたが、使っている
英語キーボードでも駄目でした。</p>

<pre><code>CapsLock::Ctrl
</code></pre>

<p>等とすると例えば</p>

<pre><code>^h::BS
</code></pre>

<p>などとして<i class='key'>Ctrl</i>-<i class='key'>h</i>で一文字削除をどこでも出来る様にすると、
1回押す分にはちゃんと働いている様に見えますが、押し続けて
キーリピート状態になると<code>h</code>が打たれてしまいます。</p>

<p>さらに、暫く使っていると<i class='key'>Ctrl</i>が押しっぱなしになっている様な状態に
なることがありました。</p>

<p>そこで、CpsLockも含め修飾キー関連は<a href="http://www.asahi-net.or.jp/~ee7k-nsd/">KeySwap</a>
を使いました。
このソフトはレジストリーを書き換えてキー入力を変更します(設定の反映に再起動が必要)。</p>

<p>yamyだと、これより上流で変更を行っているらしく、KeySwapで変更したものは
yamy起動後には反映されません。</p>

<p>これがAutoHotKeyだとyamyより下流で変更を行っているらしく
KeySwap(レジストリー変更)の設定が反映された上でキー設定が出来ます。</p>

<p>yamyとAutoHotKeyは大体同じレベルでの変更を行っているみたいですが<sup id='fnref:5'><a href='#fn:5' rel='footnote'>5</a></sup>微妙に違うみたいです。</p>

<p>ということで、KeySwapで</p>

<ul>
<li><i class='key'>CapsLock</i><i class="icon-arrow-right"></i>左<i class='key'>Alt</i></li>
<li>左<i class='key'>Alt</i><i class="icon-arrow-right"></i>左<i class='key'>Ctrl</i></li>
<li>右<i class='key'>Alt</i><i class="icon-arrow-right"></i>右<i class='key'>Ctrl</i></li>
<li>右<i class='key'>Ctrl</i><i class="icon-arrow-right"></i>右<i class='key'>Alt</i></li>
</ul>


<p>の変更をした上でAutoHotkeyで色々することにしました。</p>

<h1 id="yamyの時に起こっていた問題点">yamyの時に起こっていた問題点</h1>

<p>以前書いた
<a href="http://rcmdnk.github.io/blog/2013/06/14/computer-windows-mac-bash/#問題点">問題点</a>
の様に、<i class='key'>Control</i>-<i class='key'>[</i>や<i class='key'>Control</i>-<i class='key'>h</i>
での問題はKeySwap+AutoHotkeyでは起こっていません。
<i class='key'>Alt</i>を<i class='key'>Ctrl</i>としてきちんと使えています。
(レジストリーの変更をしてるのである意味当たり前ですが。)</p>

<h1 id="yamyとAutoHotkeyの比較">yamyとAutoHotkeyの比較</h1>

<p>基本的にyamyで行う設定は上記のCapsLockや修飾キー以外は
すべて移行出来ました。</p>

<p>AutoHotkeyの方が
変数や関数を使うことが出来、
よりプログラムチックに書くことが出来ます。
yamyの場合だと、vimモード的な物を
<code>On</code>/<code>Off</code>の変更が出来る<code>ロックキー</code>と呼ばれる9つのキー(L0-L9)で
再現してましたが、
AutoHotkeyだと例えば<code>VimMode</code>的な変数1つを用意しておけば
この値に<code>Normal</code>などと与えることで複数の状態を簡単に
作る事が出来ます。</p>

<p>また、Windows機能へのアクセスもより自由にできるので、
ディスプレイのサイズやマウスの位置なども取得出来るし、さらにタスクトレイへのポップアップ表示等も出来ます。</p>

<p>後は何と言ってもまだ開発が行われている(？)ソフトで、
日本限定ソフトで無いので圧倒的に利用者が多く
webで拾える情報も非常に多いです。</p>

<h1 id="他のソフト">他のソフト</h1>

<p>他にもPythonベースな
<a href="https://sites.google.com/site/craftware/keyhac">keyhac</a>
と言うものも試しましたが、
キー設定の方法はPython記法なのでなかなかおもしろいのですが、
モード的な状態設定の方法が分からず、断念しました。</p>

<h1 id="まとめ">まとめ</h1>

<p>しばらくはKeySwap+AutoHotkeyで行こうと思います。
いくつかハマった点とかもあるので、
後日別にまとめておきたいと思います。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://qiita.com/rohinomiya/items/b80707de5e8e0d0f840c">AutoHotKey(Basic)とAutoHotKey_Lの違い</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="https://sites.google.com/site/autohotkeyjp/reference/AutoHotkey_L">AutoHotkeyJp:  AutoHotkey_L</a>
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p><a href="https://sites.google.com/site/autohotkeyjp/reference/AutoHotkey_L/Intro">AutoHotkeyJp:  AutoHotkey_L: イントロダクション</a>
  <a href='#fnref:3' rev='footnote'>↩</a></p>
</li><li id='fn:4'><p><a href="http://d.hatena.ne.jp/LM-7/20090614/1244980470">AutoHotkeyJp:  既知の不具合</a>
  <a href='#fnref:4' rev='footnote'>↩</a></p>
</li><li id='fn:5'><p><a href="http://d.hatena.ne.jp/LM-7/20090614/1244980470"> Vista/Windows 7におけるキーボードカスタマイズ問題</a>
<a href='#fnref:5' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dev版jedi-vimのインストール]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/21/computer-vim/"/>
    <updated>2013-07-21T17:24:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/21/computer-vim</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/davidhalter/jedi-vim">jedi-vim</a>はpythonコードを書くときに
コード補完をしてくれる<a href="https://github.com/davidhalter/jedi">jedi</a>
をVimで使うためのプラグインです。
これを使いたいがためにVimをpythonサポートで入れなおしたりしてましたが、
jedi本体の入れ方が面倒だったり
何やら落ちたりWarningが出たりと途中で投げ出してました。
再度挑戦しようと思ったらdev版があって、それを入れたら
全て簡単に上手くいった、という話です。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#jedi-vim_devのインストール">jedi-vim_devのインストール</a> </li>
 <li><a href="#jedi-vim_devの良い所">jedi-vim_devの良い所</a> </li>
 <li><a href="#その他jedi-vim+++Python+for+vim用メモリンク">その他jedi-vim + Python for vim用メモリンク</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="jedi-vim_devのインストール">jedi-vim_devのインストール</h1>

<p>Warningメッセージでちょっと検索してた所下のページがヒット。</p>

<p>Ref:</p>

<blockquote><p><a href="http://d.hatena.ne.jp/heavenshell/20130601/1370042187">jedi.vim に Pull Request した</a></p></blockquote>

<p>実際にはここに出ている意外にもWaningが出てたりおかしな挙動があったのですが
取り敢えず使ってみることに。</p>

<p>dev版のインストールはNeoBundle等を使っていれば簡単で、</p>

<pre><code>" Python autocompletion
NeoBundleLazy "davidhalter/jedi-vim", {
      \ "rev" : 'dev',
      \ "autoload": {
      \ "filetypes": [ "python", "python3", "djangohtml"]}}
</code></pre>

<p>この様に、<code>revision</code> (<code>rev</code>)に<code>drv</code>を指定するだけです。
すると、<code>~/.vim/bundle/</code>以下には<code>jedi-vim_dev</code>というディレクトリ名で
プラグインがインストールされます。</p>

<h1 id="jedi-vim_devの良い所">jedi-vim_devの良い所</h1>

<p>取り敢えず、上記のリンク先にあるWarningは消えてくれましたし、
その他にも出てたWarning等も一通り消えて問題なく動く様になりました。</p>

<p><strike>さらにdev版では、jediをjedi-vim初回起動時に自動的にインストールする
様になっているみたいです。</strike></p>

<p>通常版だと、jediだけ別個に入れるか、
jedi-vimの中で手動でsubmoduleとしてインストールする<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>必要があります。
jedi-vimを入れてる<code>.vimrc</code>だと</p>

<pre><code>NeoBundleLazy "davidhalter/jedi-vim", {
      \ "autoload": {
      \   "filetypes": ["python", "python3", "djangohtml"]},
      \ "build": {
      \   "mac": "pip install jedi",
      \   "unix": "pip install jedi" }}
</code></pre>

<p>こんな感じでjedi-vimインストール時に自動的にpipでインストールしてしまう、
と言った方法もよく見ます。</p>

<p><strike>
これが、dev版では、恐らくsubmodule化コマンドを初回に打つ様になったようです。
(コード見てませんが、起動後<code>~/.vim/bundle/jedi-vim_dev/jedi</code>にインストールされているので。)
なので、一番最初に立ち上げた時、驚く程遅くてびっくりしましたが、
2回目以降は快適に立ち上がりました。
</strike></p>

<hr />

<p>追記</p>

<p>dev版だから自動でインストールされる、と言うのは嘘でした。</p>

<p>取り敢えずMacの場合、別個にjediをpipで入れていたので気づきませんでしたが、
jedi-vim以下にあるjediは空のディレクトリでした。
これは<code>.gitmodules</code>にjediがsubmoduleとして登録されているので、
空のディレクトリだけがjedi-vimをcloneした時に出来るのは正しい動きのはず。
jedi-vimのディレクトリで<code>git submodule update --init</code>
することでインストール出来ます。</p>

<p>これが使っているLinux環境だとjedi-vimをcloneした時にjediの中身も取ってきていました。
(masterでもdevでも)</p>

<p>Cygwinの場合は、元々<code>https</code>が理解出来ないと言うエラーで
<code>git submodule update --init</code>自体が働いてなかったのでインストールされていませんでしたが<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>、
gitを対応せきる用アップデート後はjediが最初からインストールされるようになりました。</p>

<p>&#8230;
と、ここまでgitのversion(1.8.1.3-1.8.4まで様々)やVimのversion等の違いも疑ってきましたが、
どうやらNeoBundleのversionの違いだったようで、
Macで一度<code>:NeoBundleUpdate</code>をしてからjedi-vimを再インストールしたらjediも直接インストールされました。
どうやらNeoBundleでインストールする際にはsubmoduleの初期化を行う様になった様です。</p>

<hr />

<p>また、pythonファイルを最初に開いた時に遅く感じたのはjediをインストールしているからではないので、
何やらメモリかtmpファイルにロードしているからでしょうか？</p>

<p>実際、新しいシェルを立ち上げてpythonファイルを開くと再び最初は遅かったりします。
シェルを立ち上げて最初だけなのでそれ程問題ないわけですが、
できればなんとかしたい所&#8230;</p>

<hr />

<p>これでやっとjediの恩恵を受けられます。</p>

<h1 id="その他jedi-vim+++Python+for+vim用メモリンク">その他jedi-vim + Python for vim用メモリンク</h1>

<p>まだあまり初期設定からいじってないこともあるので
備忘録用リンク集:</p>

<blockquote><p><a href="http://mattn.kaoriya.net/software/vim/20121018212621.htm">python 補完のVimプラグイン「jedi-vim」がスゲー</a></p>

<p><a href="http://d.hatena.ne.jp/heavenshell/20121025/1351179999">edi-vim の設定</a></p>

<p><a href="http://d.hatena.ne.jp/heavenshell/20121216/1355640807">jedi.vim で virtualenv を使ってる場合の補完</a></p>

<p><a href="http://kazy.hatenablog.com/entry/2012/12/03/174431">jedi-vim(ジュダイ-ヴィム)で2ヶ月近くハマった話</a></p>

<p><a href="http://tekkoc.tumblr.com/post/42845501741/vim-python">VimでPython環境をいい感じに整える</a></p>

<p><a href="http://lambdalisue.hatenablog.com/entry/2013/06/23/071344">Vimを最強のPython開発環境にする2</a></p>

<p><a href="http://slowquery.hatenablog.com/entry/2013/04/30/020630">Python用のvimの設定</a></p></blockquote>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://d.hatena.ne.jp/heavenshell/20121203/1354534796">jedi.vim で使う Python の jedi を入れる簡単な方法</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="http://rcmdnk.github.io/blog/2013/07/27/computer-cygwin-git/">fatal: Unable to find remote helper for &#8216;https&#8217;の対処</a>
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MagicFormation: Windowsで使っているランチャー]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/20/computer-windows/"/>
    <updated>2013-07-20T20:15:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/20/computer-windows</id>
    <content type="html"><![CDATA[<p>Windowsで愛用しているランチャーの紹介です。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#MagicFormation">MagicFormation</a> </li>
 <li><a href="#その他のランチャー的なもの">その他のランチャー的なもの</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="MagicFormation">MagicFormation</h1>

<p><a href="http://www.vector.co.jp/soft/dl/winnt/util/se387155.html"><p><img src="http://rcmdnk.github.io/images/WinApp/MagicFormation.png" width="100" height="100" alt="Magic Formation"></p></a></p>

<p>MagicFormationはもう5年以上も前に開発がベータ版のまま止まってるソフトですが、
未だに一番使い心地が良いです。
Macでも似たような物が欲しいとすら思ってます。
久しぶりに調べたら本家のページが消えていて、
何故か<a href="http://tokyodownstairs.blogspot.fr/2008/03/magic-formation.html">フランスドメインのページ</a>
が見つかりましたが&#8230;</p>

<p>何はともあれ、上のVectorのページからはまだダウンロード出来ます。</p>

<p>取り敢えず、使ってみた感じ。</p>

<div class="embed-video-container"><iframe src="http://player.vimeo.com/video/70659847 "></iframe></div>


<p>このランチャーは、ソフトのアイコンを表示されているMagicFormationへ
ドロップすることでソフトを登録します。
(判りづらいですが、上では途中でデスクトップにあるFirefoxを
一度追加して削除しています。)</p>

<p>ランチャーの起動はマウスをくるくる回すか、キーボードショートカットで呼び出します。
すると、円状になったソフト一覧が出るのでそこから選ぶのですが、
複数の円を定義でき、マウスホイールなどで変更出来ます。</p>

<p>で、多分、このマウスでくるくる回して呼び出す、っていう部分が
ちょっと面白くてフューチャーされてた感もありましたが、
じっさいくるくるで出すのは結構こつが必要で、あまり実用的ではありません。</p>

<p>ただ、キーボードショートカットを使うと格段に使い勝手が上がります。</p>

<p><img src="http://rcmdnk.github.io/images/post/20130720_magicformation_keys.jpg" "" ""></p>

<p>上の様に、起動キーに<i class='key'>Alt</i>-<i class='key'>M</i> (本来最小化関連のショートカット)を
割り当て、各円での項目移動(次の/前のアイテムを選択)に<i class='key'>H</i>、<i class='key'>L</i>、
円の切り替え(次/前のページヘ)に<i class='key'>J</i>、<i class='key'>K</i>
を当てています。
こてによって、右手だけで、<i class='key'>Alt</i>-<i class='key'>M</i>で起動し、
vim的な動きで項目を選択できます。決定は<i class='key'>Enter</i>です。</p>

<p>キーボードショートカットキーで呼び出した時は、各アイテムにアルファベットが
割り振られ、このキーを押すことでもいきなりそのアイテムを呼ぶ事が出来ます。</p>

<p>さらに、多ボタンマウスを使うと、
このキーボードショートカットを1つのボタンに割り当てることで
簡単に呼び出せます。
後はホイールくるくる回せばページが変わるので、すぐに目的のソフトを立ち上げられます。</p>

<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B002SRT8FG/rcmdnk0c-22/ref=nosim/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/41FXF7k%2ByKL._SL160_.jpg" style="border: none;" /></a></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B002SRT8FG/rcmdnk0c-22/ref=nosim/" rel="nofollow" target="_blank">ロジクール (AAXAH) LOGICOOL ワイヤレス レーザー式 10ボタン  M950</a><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> ロジクール 2009-11-06    </div><div class="kaerebalink-link1" style="margin-top:10px;"></div></div><div class="booklink-footer" style="clear: left"></div></div>


<p>最初に、ソフトをすべて手動でドロップしながら登録しないといけないので
ちょこちょこソフトを入れ替えたりしてる場合にはちょっと面倒ですが、
一度登録さえしてしまえば一番使いやすいランチャーだと思います。</p>

<p>それから、ソフトだけじゃなくて、フォルダを登録したり、
スクリプトなんかを登録しておいても便利です。
ショートカット同様、引数も指定できるので、同じソフトでも違う起動方法を指定したり。
アイコンもそれぞれ自由に変更できるので、
DownloadフォルダはFirefoxのアイコンにしておいたり、
CygwinのHomeディレクトリをCygwinアイコンにしておいたり。</p>

<p>ただ、マウスを回して起動する、ということだけで見限られるのか、
未だに周りに紹介しても使ってる人を見たことがない状況。</p>

<p>一度慣れたら手放せないと思うので、ぜひ一度使ってもらいたいところです。
特に、多ボタンマウスを使っていてボタンが余ってる場合には大いに有効です。</p>

<p>誰も周りで使ってくれないのでどこかで使ってるよ、というのを見てみたいと思うな、と。</p>

<h1 id="その他のランチャー的なもの">その他のランチャー的なもの</h1>

<p>昔は、インデックス作るのに無駄にCPU使って遅くなるから、インデックス作成を切っていたので、
Windowsで検索なんて殆ど使ってませんでした。
が、スペック的なタイミング的にも、Macを使い始めてからSpotlightやらAlfredやら検索して起動する系の物を当たり前に使うようになって意外と便利だと
思い知ったので、最近は
<i class='key'>Win</i>ボタンを押して<code>プログラムとファイルの検索</code>も使ったりします。
<i class='key'>Win</i>-<i class='key'>r</i>での<code>ファイル名を指定して実行</code>だと
インクリメンタルサーチが出来ないので本当に特定のものにしか使い物になりません。</p>

<p><code>プログラムとファイルの検索</code>はそれでもまだ使いづらかったり遅い感じもするので
同じような事が出来るソフトとして<a href="http://www.launchy.net/">Launchy</a>を試してみました。
Alfred感覚で使えるし、MacやLinuxにも対応してるので
使い物になるなら一番良さげなんですが、
取り敢えず手元にあるいくつかの環境では必ず途中で落ちてしまいます。
ベータ版と安定版がありますが、どちらを試しても同じ。。。</p>

<p>ということで、別なものを探して
<a href="http://www.voidtools.com/">Everything</a>というものを今はメインで使っています。
これはランチャーというよりは、ファイル検索用のソフトです。
なので、一度立ち上げて、指定のファイルを実行してもEverything自体は消えてくれません。
消すにはわざわざEscおしたり閉じるボタンを押す必要があります。
単純なファイル検索だととても協力で良いのですが、
ランチャーとしてももうちょっと上手く使えたらな、と思ってます。
(キーカスタマイズソフトでEverything上ではEnterはEnter+Alt-Tab+Escとか。
一度選択した時点で起動したソフトが最前面に出てくるのでちょっと面倒。)</p>

<p>この他にVectorなんかでこの手のランチャーの中で一番のものは
<a href="http://rocketdock.com/">RocketDock</a>だったりしますが、
Macの場合はDockがタスクバーも兼ねているので必要ですが、
Windowsの場合だと常時見せて置くのはただの邪魔だし、
ソフトも全て手作業になるので、それなら上のMagicFormationの方が
余程使い勝手が良いかと、個人的感想。
昔、WindowsのMac化計画をしてた時に使ってましたが&#8230;</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App Language ChooserでMail.app等特定のアプリだけ英語設定にする]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/15/computer-mac-english/"/>
    <updated>2013-07-15T21:47:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/15/computer-mac-english</id>
    <content type="html"><![CDATA[<p>メールを返信しようとする時、
Macで環境設定で日本語環境にしているとMail.appなどで
転送する際、
元メールのヘッダー情報に<code>差出人</code>等と必ず日本語が
含まれてしまいます。
英語でメールをやりとりしていても入ってしまうので
日本語フォントを使ってない相手側には化けて見えてしまうので
その対処法について。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#Macの言語環境">Macの言語環境</a> </li>
 <li><a href="#App+Language+Chooser">App Language Chooser</a> </li>
 <li><a href="#defaultsコマンドで直接書き換える方法">defaultsコマンドで直接書き換える方法</a> </li>
 <li><a href="#まとめ">まとめ</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="Macの言語環境">Macの言語環境</h1>

<p>MacにはWindowsとかと違い<code>日本語版</code>と言う概念が無く、
最初から全ての言語環境が入っています。
従って、自分の好きな言語にして始められるので、
上の問題を解決する一番簡単な方法はシステム環境設定で
<code>言語とテキスト</code><i class="icon-arrow-right"></i><code>言語</code>タブで、
優先言語の最上位を<code>English</code>にしてしまうことです。</p>

<p>これで<code>Mail.app</code>の返信時のヘッダーも、その他表示も全てひっくるめて英語になります。</p>

<hr />

<p>余談ですが、<a href="http://monolingual.sourceforge.net/">monolingual</a>
と言うソフトを使うと要らない言語ファイルを削除出来るようです。
上にも書いたように全て(?)の必要な言語が入っているため、
最低限日本語や英語などを残すだけだと1GB程ディスクを節約することが出来るみたいです。
自分自身はどんなマイナー言語もいつか使うかもな、と言う貧乏根性から全て残してありますが&#8230;</p>

<hr />

<p>ただ、最初はそうして英語環境で使っていたのですが、日本語環境でないと文字化けする
アプリがいくつかあったので、必要なものだけを英語設定にする必要がありました。
(逆に英語環境で特定のアプリだけ日本語設定にしても良いのですが、
今のところ問題になるのが英語側は<code>Mail.app</code>だけだったため。)</p>

<h1 id="App+Language+Chooser">App Language Chooser</h1>

<p><a href="http://click.linksynergy.com/fs-bin/stat?id=iYVkHjWpfxk&offerid=94348&type=3&subid=0&tmpid=2192&RD_PARM1=https%253A%252F%252Fitunes.apple.com%252Fjp%252Fapp%252Fapp-language-chooser%252Fid451732904%253Fmt%253D12%2526uo%253D4%2526partnerId%253D30" target="_blank" rel="nofollow"><img width="75" class="alignleft" align="left" src="http://a1.mzstatic.com/us/r1000/064/Purple/59/10/53/mzi.iwnexdzn.75x75-65.png" style="border-radius: 11px 11px 11px 11px;-moz-border-radius: 11px 11px 11px 11px;-webkit-border-radius: 11px 11px 11px 11px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;"></a><div style="font-size:small;line-height:1.2;"><a href="http://click.linksynergy.com/fs-bin/stat?id=iYVkHjWpfxk&offerid=94348&type=3&subid=0&tmpid=2192&RD_PARM1=https%253A%252F%252Fitunes.apple.com%252Fjp%252Fapp%252Fapp-language-chooser%252Fid451732904%253Fmt%253D12%2526uo%253D4%2526partnerId%253D30" target="_blank" rel="nofollow"<strong> App Language Chooser 1.0（無料）</strong></a><br> カテゴリ: 開発ツール, ユーティリティ<br> 販売元: <a href="http://click.linksynergy.com/fs-bin/stat?id=iYVkHjWpfxk&offerid=94348&type=3&subid=0&tmpid=2192&RD_PARM1=https%253A%252F%252Fitunes.apple.com%252Fjp%252Fartist%252Fctm-development%252Fid451732907%253Fmt%253D12%2526uo%253D4%2526partnerId%253D30" target="_blank" rel="nofollow">CTM Development - CTM Development SA</a>（サイズ: 0.1 MB）</div><br class="clearBoth"></p>

<p>という訳で<a href="http://click.linksynergy.com/fs-bin/stat?id=iYVkHjWpfxk&offerid=94348&type=3&subid=0&tmpid=2192&RD_PARM1=https%253A%252F%252Fitunes.apple.com%252Fjp%252Fapp%252Fapp-language-chooser%252Fid451732904%253Fmt%253D12%2526uo%253D4%2526partnerId%253D30" target="_blank" rel="nofollow">App Language Chooser</a>
と言うアプリを使ってMail.appだけ英語化しました。</p>

<p>使い方は簡単で、アプリを立ち上げると下の様なApp Language Choooserの窓が出るので、
そこへ言語を変更したいアプリをDropするだけです。</p>

<p>すると、下の絵の上がわにある様な言語を選ぶダイアログが出てくるので、
<code>English</code>を選び、<code>Set as drafult language for this app</code>にチェックを入れ
<code>OK</code>を押すと選んだ言語で立ち上がる様になります。</p>

<p><code>Set as drafult language for this app</code>にチェックを入れれば永続的に、
チェックを入れなければその時だけ特定の言語で立ち上げる事も出来るので、
ちょっとここのアプリの英語表示がどうなってるか知りたい、
と言った様なこともMac自体を再起動させずに簡単に出来ます。</p>

<p>もし起動中にApp Language ChooserにDropした場合はアプリを再起動後に反映されます。
一時的な変更で起動をしたい場合は一度アプリを閉じておく必要があります。</p>

<p><img src="http://rcmdnk.github.io/images/post/20130715_applanguagecleaner.jpg" "" ""></p>

<p>これで、転送するときに<code>差出人</code>の代わりに<code>From</code>が使われる様になり
英語環境だけの人でも文字化けせずに読めるようになります。</p>

<h1 id="defaultsコマンドで直接書き換える方法">defaultsコマンドで直接書き換える方法</h1>

<p>上のアプリを入れなくても<code>defaults</code>コマンドで変更することも出来ます。</p>

<pre><code>$ defaults write com.apple.mail AppleLanguages "(English)"
</code></pre>

<p>Mail.appの<code>AppleLanguages</code>と言う値を<code>English</code>に指定しています。
ここでは環境設定の言語設定の様に<code>"(English Japanese)"</code>の様に
優先順位を決めて複数を指定することも出来るようです。
(あまりその恩恵を受けられるアプリは思いつきませんが。)</p>

<p><code>defaults find</code>コマンドでこれまでに指定した<code>AppleLanguages</code>を見ることが出来ます。
App Language Chooserも恐らくこの値を変えてるだけらしく、同じく
このコマンドで変更を見ることが出来ます。</p>

<pre><code>$ defaults find AppleLanguages
Found 1 keys in domain 'org.gimp.gimp': {
    AppleLanguages =     (
        English
    );
}
Found 1 keys in domain 'com.apple.mail': {
    AppleLanguages =     (
        English
    );
}
</code></pre>

<p>すっかり忘れてましたが、以前、Gimpを更新した際、ビルドされたものが
日本語環境だと落ちるバグ？があったのでGimpも英語にしてありました。
(多分もう大丈夫なんだと思いますが。)</p>

<p>逆に、英語環境下において日本語にしたい場合は</p>

<pre><code>$ defaults write com.apple.mail AppleLanguages "(Japanese)"
</code></pre>

<p>の様にします。この<code>Japanese</code>や<code>English</code>について、
どの値を取れるのがいまいち理解してませんが、
<code>Japanese</code>は<code>ja</code>でもOKです。</p>

<p>色々な所に<code>jp</code>とも書いてありますが、手元のLionでは<code>jp</code>だと上手く反映されませんでした。
さらに<code>Ja</code>や<code>japanese</code>も駄目で、大文字小文字を区別した上で
<code>Japanese</code>と<code>ja</code>だけが試した限りでは有効でした。</p>

<p>英語の方は<code>en</code>でもOKで、さらに<code>En</code>や<code>english</code>もOK。
さらに<code>en_US</code>と書いてある所もありますがこれでもOKです。
英語の方は最初の<code>en</code>だけで判定しているのか
<code>enaaa</code>の様なあり得ない言語指定でも英語に切り替わりました。
(<code>defaults find</code>コマンドでは<code>enaaa</code>を示しています。)</p>

<p>一方で日本語は<code>jaaaa</code>の様な変更は、<code>defaults find</code>では反映されて見えますが、
実際の言語はその直前に設定した言語設定のままになっていました。
(<code>ja</code>で始まる言語が他にあるからでしょうか？
ただ、<code>Japasesea</code>の様な余計な語尾を足したのも駄目なので、単に先頭の方から
見て判断してるだけでも無いみたいです&#8230;)</p>

<p>さらに言語設定の項目にある表示の様に、<code>'日本語'</code>の様な入力も試しましたが、これも駄目でした。</p>

<p>ちょっと横にそれましたが、最後に、これらの設定を消して、システムのデフォルトに合わせるには</p>

<pre><code>$ defaults delete com.apple.mail AppleLanguages
</code></pre>

<p>とします。</p>

<p>上に書いたようにApp Language ChooserもAppleLanguagesの設定変更を行っている
だけの様なので、そのアプリで変更した物もこのコマンドでリセット出来ます。</p>

<h1 id="まとめ">まとめ</h1>

<p>昔のMacではアプリの<code>情報を見る</code>から言語を変更することが出来たみたいですが<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>、
最近のMac(少なくともLion)では出来ません。</p>

<p>なので、App Language Chooserを使うかdefultsコマンドを使う事になります。</p>

<p>また、そもそもこれらに使われる内容を変更してしまえばよい、
という話もあるみたいです<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>が、
上の方法に比べると、安全に簡単に出来る方法とは言えない感じですね。
(簡単な方法やアプリがあるかもしれませんし、あったらより便利なんですが。)</p>

<p>今も中国人等からメールで同様にヘッダ部分がや日付表示などが
文字化けしててなんだかな、と思う時がありますが、
そういうメールを見るたび、
以前は自分でも文字化けメールを送信してたんだな、と思う今日このごろ。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p><a href="http://okwave.jp/qa/q4447873.html">OKWave: 英語メールの転送のヘッダに日本語が使われてしまうので困ります</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="https://discussionsjapan.apple.com/message/100320489#100320489">Apple サポートコミュニティ: 返信時の引用のヘッダ文の編集</a>
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim_emu for KeyRemap4MacBookのアップデート]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/07/08/computer-mac-keyremap4macbook-vim/"/>
    <updated>2013-07-08T22:15:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/07/08/computer-mac-keyremap4macbook-vim</id>
    <content type="html"><![CDATA[<p><a href="http://rcmdnk.github.io/blog/2013/06/10/computer-mac-keyremap4macbook-vim/">Vim以外でVimする: Mac編</a>
で作った<a href="https://github.com/rcmdnk/vim_emu">vim_emu</a>をアップデートしました。</p>

<!-- more -->


<br class="clearBoth">




<h1>Contents</h1>


<p>
 <ul>
 <li><a href="#Change+Mode+Keys">Change Mode Keys</a> </li>
 <li><a href="#Enable+Recording+Macro">Enable Recording Macro</a> </li>
 <li><a href="#その他の変更点">その他の変更点</a> </li>
 <li><a href="#インストール">インストール</a> </li>
 </ul>

</p>

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>


<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<h1 id="Change+Mode+Keys">Change Mode Keys</h1>

<p><i class='key'>&#x238b;</i>/<i class='key ctrl'>symobl</i>-<i class='key'>[</i>で
Normal Modeに入るキーマップに加え、
これらでNormal-Insert ModeをToggleするキー、
<i class='key'>j</i>-<i class='key'>k</i>の同時押しでToggleするキー等を追加しました。</p>

<p><i class='key'>&#x238b;</i>/<i class='key ctrl'>symobl</i>-<i class='key'>[</i>については
長押しで<i class='key ESC'>symobl</i>そのものを送る様にもしました。</p>

<table>
<thead>
<tr>
<th align="left">Key/Commands</th>
<th align="left">Function</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">ChangeKey1</td>
<td align="left"> Escape to enter Normal Mode, holding to emulate raw ESC.</td>
</tr>
<tr>
<td align="left">ChangeKey2</td>
<td align="left"> + Escape to back in Insert Mode</td>
</tr>
<tr>
<td align="left">ChangeKey3</td>
<td align="left"> Escape to back in Normal Mode in other than Inser Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey4</td>
<td align="left"> Ctrl-[ to enter Normal Mode, holding to emulate raw ESC.</td>
</tr>
<tr>
<td align="left">ChangeKey5</td>
<td align="left"> + Ctrl-[ to back in Insert Mode</td>
</tr>
<tr>
<td align="left">ChangeKey6</td>
<td align="left"> Ctrl-[ to back in Normal Mode in other than Inser Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey7</td>
<td align="left"> Simultaneous jk toggles Normal-Insert Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey8</td>
<td align="left"> Simultaneous qw toggles Normal-Insert Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey9</td>
<td align="left"> Simultaneous sd toggles Normal-Insert Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey10</td>
<td align="left"> Ctlr-l toggles Normal-Insert Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey11</td>
<td align="left"> Tap Left Cmd toggles Normal-Insert Mode.</td>
</tr>
<tr>
<td align="left">ChangeKey12</td>
<td align="left"> Tap Right Cmd toggles Normal-Insert Mode.</td>
</tr>
</tbody>
</table>


<p>ChangeKey 1, 3 , 4, 6, 10-12についてはVisual Mode等の時にもNormal Modeへの
戻るキーとして使いますが7-9については同時押し操作の制限の関係で
Visual Mode等の時には効きません。</p>

<p>従って、他のキーと組み合わせが必要で、他の操作への影響を最低限にしたい場合は
3や6を使います。</p>

<h1 id="Enable+Recording+Macro">Enable Recording Macro</h1>

<p>Vim等の色々機能がついたエディターで無くてはならない機能の1つとして
キー操作をマクロとして保存して再び実行する、と言う機能があります。</p>

<p>KeyRemap4MacBook単体では再現するのが難しいのですが、
<a href="http://www.wingsforpigs.com/MadRuby/MadRuby.html">MadRuby</a>
という良さげなキー操作記憶再生アプリを見つけたので
これを使ってマクロ機能を実装してみました<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。
フリーのアプリです。</p>

<p>このアプリは、ショートカットキーを使ってキー操作の記憶を開始して
再びショートカットキーで停止します。
実行もショートカットキーから。
さらに複数回の実行を指定することも出来ます。</p>

<p>アプリを導入したら、
これらのショートカットキーを以下の様に設定します。</p>

<table>
<thead>
<tr>
<th align="right">Function</th>
<th align="left">Shortcut</th>
</tr>
</thead>
<tbody>
<tr>
<td align="right">Start Recording</td>
<td align="left"> <i class='key'>&#x2303;</i>-<i class='key'>&#x21e7;</i>-<i class='key'>&#x2318;</i>-<i class='key'>6</i></td>
</tr>
<tr>
<td align="right">Stop Recording</td>
<td align="left"> <i class='key'>&#x2303;</i>-<i class='key'>&#x21e7;</i>-<i class='key'>&#x2318;</i>-<i class='key'>7</i></td>
</tr>
<tr>
<td align="right">Play Macro</td>
<td align="left"> <i class='key'>&#x2303;</i>-<i class='key'>&#x21e7;</i>-<i class='key'>&#x2318;</i>-<i class='key'>8</i></td>
</tr>
<tr>
<td align="right">Multiple Play Macro</td>
<td align="left"> <i class='key'>&#x2303;</i>-<i class='key'>&#x21e7;</i>-<i class='key'>&#x2318;</i>-<i class='key'>9</i></td>
</tr>
</tbody>
</table>


<p><img src="http://rcmdnk.github.io/images/post/20130708_madruby.jpg" "" ""></p>

<p>これらはvim_emuの中で参照して以下の様にキーが設定されています。
全てNormal Modeの時に有効です。</p>

<table>
<thead>
<tr>
<th align="center">Key/Commands</th>
<th align="left">Function</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">q</td>
<td align="left"> Start recording a macro.</td>
</tr>
<tr>
<td align="center">q(while recording macro)</td>
<td align="left"> Stop recording a macro.</td>
</tr>
<tr>
<td align="center">@</td>
<td align="left"> Execute the macro once.</td>
</tr>
<tr>
<td align="center">n@ (n=2-9)</td>
<td align="left">Execute macro n-times.</td>
</tr>
</tbody>
</table>


<p>Vimと違って<i class='key'>q</i><i class='key'>a</i>の<i class='key'>a</i>の様にマクロの収納先は指定しないで<i class='key'>q</i>だけで記憶を開始します。
従って記憶できる操作は1つだけです<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。
記憶中にNormal Modeに戻って<i class='key'>q</i>で終了するわけですが、
この間に他のアプリに移ってしまっても、永遠とマクロを記憶し続けるので
気をつけて下さい<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>。</p>

<p>再生に関しても収納先の指定が無いので<i class='key'>@</i>だけで再生します。
注意として、<i class='key'>@</i>を繰り返して押す場合、<i class='key'>&#x21e7;</i>も離して繰り返し
押さないと続けてマクロを上手く入力出来ません。</p>

<p>複数回実行したい場合は<i class='key'>2</i>~<i class='key'>9</i>までの数字を押した後に
<i class='key'>@</i>を押せば数字分だけ実行します。</p>

<p>MadRubyのショートカットは他のショートカットに被らないような設定にしてありますが、
もし他のキー設定と被る場合や、普段もMadRubyを使いたくてもっと
簡単なキー設定にしたい場合は
<code>vim_emu/vim_emu_core.xml</code>の<code>Enable Recording Macro</code>
にあるキー設定も変更して下さい。</p>

<p>下のデモでは
<code>aaa</code>という文字列を検索して移動して<code>AAA</code>と置き換える作業を記憶して
繰り返し実行しています。</p>

<pre><code>&lt;ESC&gt;/aaa&lt;ESC&gt;hqni&lt;BS&gt;AAA&lt;ESC&gt;q@@@@@@@@@uuuuuuuuuuh5@
</code></pre>

<p>とキーボードからは入力しています。
検索時に単語が選択されるのを一旦解除するのに<i class='key'>h</i>を使ったり、
が逆に検索後、<i class='key'>&#x232b;</i>で一気に消したりするところとかも
実際のVimと違いますが、
一応これくらいの変換の作業は繰り返し出来るようになります。
(流石にsed的な変換は無理なのでこの辺の作業はマクロで繰り返しで。)</p>

<p>MadRubyは、最初の<i class='key'>q</i>をした所で現れ、</p>

<ul>
<li><i class='key'>n</i><i class="icon-arrow-right"></i><i class='key'>&#x2318;</i>-<i class='key'>g</i></li>
<li><i class='key'>i</i>は記憶されず(右下のモード表示から<code>--VIM--</code>が消える)</li>
<li><i class='key'>&#x232b;</i></li>
<li>AAA</li>
<li><i class='key'>&#x238b;</i>は記憶されず(右下のモード表示へ<code>--VIM--</code>が現れる)</li>
</ul>


<p>と記憶され<i class='key'>q</i>で終了しています。</p>

<div class="embed-video-container"><iframe src="http://player.vimeo.com/video/69911373 "></iframe></div>


<p>実用性はともかく、ちょっと、おぉっ、ってなります。</p>

<h1 id="その他の変更点">その他の変更点</h1>

<ul>
<li><code>d3w</code>など、<code>y</code>、<code>d</code>、<code>c</code>の時にも2-9で移動を数字分だけ出来る様に改善。</li>
<li>Visual Modeでライン選択の時、以前は最初に上に向かうとカレント行が除かれたが
最初に上に向かう時だけカレント行も選択する様に変更。</li>
<li>RturnはそのままRturnを返す様に変更。</li>
<li>H/Lについては意味ない動きしかできないので削除。(ubiquitous_vimを真似てみたものの
キーの無駄遣いにしかならないので&#8230;)</li>
<li>GitHubのレポジトリーバージョンをKeyRemap4MacBookの中に入っているものと
かち合わないように変更。</li>
<li>ドイツ語キーボードサポート。</li>
</ul>


<h1 id="インストール">インストール</h1>

<p>KeyRemap4MacBookが入った状態で<a href="https://github.com/rcmdnk/vim_emu">vim_emu</a>
をcloneしてきて中にある<code>install.sh</code>を実行すれば
自分設定のすぐ下にもう1つの<code>VIM Emulation</code>が現れます。</p>

<pre><code>$ git clone https://github.com/rcmdnk/vim_emu
$ cd vim_emu
$ ./install.sh
</code></pre>

<p>キーがバッティングするので元から入っている<code>VIM Emulation</code>項目はオフにして下さい。</p>

<p>アンインストールは<code>$HOME/Library/Application Support/KeyRemap4MacBook/</code>
から<code>vim_emu*</code>を消し、<code>private.xml</code>の下の方に追加された
<code>&lt;include path="vim_emu_test.xml"&gt;&lt;/include&gt;</code>を削除してください。</p>

<p>そのうちKeyRemap4MacBook本体の方にPull Requestしていつの間にか入れてもらおうと思ってます。</p>

<hr />

<div class="footnotes">
    <ol>
        <li id='fn:1'><p>2009年に開発が止まっている古いアプリですが、少なくともLionやMountain Lion
  で動くことは確認しました。
  他にも似たようなアプリがありましたが、有料だったり、ショートカットキーで
  記憶/再生出来なかったり、マウス操作も記憶してしまって逆に面倒だったり、
  で今のところこのアプリが一番良さげです。
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p>MadRuby自体には履歴機能あってメニューバーから過去の操作を再生することも出来ます。
  また、操作を保存したり、過去に保存した操作を読み込む事も可能です。
  <a href='#fnref:2' rev='footnote'>↩</a></p>
</li><li id='fn:3'><p>MadRubyの表示が出続けるので忘れる事はないと思いますし、メニューバーからでも
  ストップすることは出来ます。
<a href='#fnref:3' rev='footnote'>↩</a></p>
</li>
    </ol>
</div>



]]></content>
  </entry>
  
</feed>
