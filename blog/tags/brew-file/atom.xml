<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Brew-file | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/brew-file/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-13T00:24:10+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[brew-fileのUbuntuなどDebian系Linuxへの対応]]></title>
    <link href="https://rcmdnk.com/blog/2020/02/06/computer-linux-homebrew-brew-file/"/>
    <updated>2020-02-06T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/02/06/computer-linux-homebrew-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4798109088?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4798109088&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51S3TB2CW8L._SS200_.jpg" alt="Debian 辞典 (Desktop reference)" /></a>
</div>

<p>brew-fileをLinuxにも対応させた、と書いてましたが、
Ubuntu等では動かない状態だったので対応しました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#brew-file" id="markdown-toc-brew-file">brew-file</a></li>
  <li><a href="#linuxへの対応" id="markdown-toc-linuxへの対応">Linuxへの対応</a></li>
  <li><a href="#debian系への対応" id="markdown-toc-debian系への対応">Debian系への対応</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="brew-file">brew-file</h2>

<p>Homebrewのパッケージリストを管理するツール。</p>

<p>Homebrew-fileと書いたりbrew-fileと書いたりこのブログの中でも統一されて無くて良くないですが、
管理してるレポジトリ名が<code>homebrew-file</code>で
コマンド名は<code>brew-file</code>、<code>brew</code>のサブコマンドとして<code>brew file</code>で呼び出される様なものです。
なのでその時々の気分で変わってしまってすいません。(多分、brew-fileとしておくのが良いのかな、と最近は。)</p>

<div class="github-widget" data-repo="rcmdnk/homebrew-file"></div>

<p>Homebrew自体にも現在はbundleというBrewfileファイルに書き出す機能がありますが、
brew-fileではBrewfile自体をGitHubのレポジトリで管理したり、
また、<code>brew install</code>時などに自動でBrewfileをアップデートしたり、
普段<code>brew-file</code>というコマンドを意識せずに自動で管理できる様なものを目指しています。</p>

<p>ほんとはbundleの機能に追加できれば良いんですが、あちらRubyでこちらPythonで
統一するのも面倒だし、その先新しいこと加えるときにRubyよりPythonのが(個人的に)やりやすいので
別途の形に。</p>

<p>ちなみに、以前、そこそこ使われてきたのでbrew-fileのformulaを
公式のレポジトリに入れてもらおうかと思ったこともあったんですが、
上記の様にbundleという似た(今はもう)公式のツールがあるので微妙かな、ということで
入れないことにしました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B011WTXSJ2?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B011WTXSJ2&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51RErbdy69L._SS90_CR0,0,120,90_.jpg" alt="The Persistence Formula: Follow Through, Stop Quitting, Stay Focused, Avoid Distraction, Achieve Your Goals, Control Your Habits, Maximize Productivity, ... Enjoy The Entire Journey (English Edition)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/07/20/computer-homebrew-brew-file-mac/">HomebrewにFormulaを公式に入れてもらうためにチェックする事</a></div></li></ul>

<p>まあ、Formulaの更新も自由に出来るので管理上は公式に入ってない方が楽なのでそれはそれで良いかな、と。</p>

<h2 id="linuxへの対応">Linuxへの対応</h2>

<p>今年はじめLinuxbrewがHomebrewに統一されたのでそれを機に
Linuxでも本格的にHomebrewを使うためbrew-fileもLinux対応させました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/02/27/computer-linux-homebrew/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20190208_homebrew_120_90.jpg" width="120" height="90" alt="20190208_homebrew_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/02/27/computer-linux-homebrew/">LinuxでHomebrewを使う: Homebrew-fileも対応させた</a></div></li></ul>

<p>ただ、自分で使っていたのがRedHat系で、
最近WindowsでWindows Subsystem for Linux(WSL)なUbuntuの所でエラーが出て使えなかったので
それに対応させました。</p>

<h2 id="debian系への対応">Debian系への対応</h2>

<p>ここで問題になったRedHat系とDebian系の違いは、<code>/bin/sh</code>の違いです。
RedHat系はBash、Debian系はDash。</p>

<p>brew-fileの中で、外部コマンドを<code>subprocess.Popen</code>で呼び出している部分がありますが、
<code>brew</code>コマンドを呼ぶ際、brew-fileの設定で<code>brew-file</code>へのラッパー関数に設定している場合があるので、
その場合のループを防ぐために<code>command brew</code>の様な呼び方をしていました。</p>

<p>これでMacでもRedHat系でも問題なかったのですが、Ubuntuでやってみると</p>

<pre><code>[ERROR]: Failed at command: command brew --prefix
</code></pre>

<p>というエラー。実際にはPopenが</p>

<pre><code>command brew --prefix: [Errno 2] No such file or directory
</code></pre>

<p>みたいなエラーを出しています。</p>

<p>簡単なスクリプト例としては</p>

<figure class="code"><figcaption><span>title lang: </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#!/usr/bin/env python3
</span><span class="line">import subprocess
</span><span class="line">subprocess.call(["command", "echo", "foo"])</span></code></pre></td></tr></table></div></figure>

<p>とか。Ubuntuとかで実行すると</p>

<pre><code>FileNotFoundError: [Errno 2] layouto such file or directory: 'command': 'command'
</code></pre>

<p>とか出ると思います。</p>

<p>これがDashでは<code>command</code>というものがないのだ、と思ってたんですが、
普通に</p>

<pre><code>$ /bin/sh # Dash起動
$ command echo foo
foo
</code></pre>

<p>とかは出来ます。
ちょっとこの辺調べようとしたんですがよくわからないままなのでまたそのうち。。。</p>

<p>とりあえず<code>command brew...</code>というのがうまく行かないので、
Bashで直接やれば、ということで</p>

<pre><code>["bash", "-i", "-c", "brew ls"]
</code></pre>

<p>みたいなものを渡してみたんですが、これがRedHat系で</p>

<pre><code>Package bash-completion was not found in the pkg-config search path.
Perhaps you should add the directory containing `bash-completion.pc'
to the PKG_CONFIG_PATH environment variable
No package 'bash-completion' found
bash: /yum: No such file or directory
</code></pre>

<p>というエラーを出しました。
どうやらbrewコマンドの中での何かしら環境変数の設定とかがうまくいってない模様。
<code>Popen</code>呼ぶときには現在の環境変数全てを渡す様なことはしているので、ちょっとよくわからない。</p>

<p>PKG_CONFIG_PATH云々はわかりますが、そもそもなんでこういう事が出てくるか、
というのがbrewの中身を見たりしないとちょっと理解できなくて、
面倒なので見てません。</p>

<p>ただ、そもそも<code>-i</code>を付けてインタラクティブモードで<code>bash</code>を呼ぶ必要があるのか、というところで、
<code>-i</code>ナシにしてみるとうまくいきました。</p>

<pre><code>["bash", "-c", "brew ls"]
</code></pre>

<p>みたいな感じ。</p>

<p>ただ、これも最後の実際のコマンドの部分がまとめた状態になるので余り良くない。</p>

<p>ということで、関数、aliasを無視するにどうするか、と思ったところ、
単に<code>brew</code>へのフルパスを取ってやるのが一番楽だし正確かな、ということでそうしました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/01/30/computer-bash-zsh/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180130_aliasfunc_120_90.jpg" width="120" height="90" alt="20180130_aliasfunc_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/01/30/computer-bash-zsh/">Bash/Zshで関数やaliasを無視してオリジナルのコマンドを使う方法</a></div></li></ul>

<p>ちょっと/bin/shに関する部分やsubprocessで呼ぶ際の環境、さらには
subprocess.Popenでのshellやexecutable引数の意味、など
もう一度ちゃんと理解しようと調べ始めて面倒になって中途半端な認識になってるので、
またそのうちまとめられれば、とは思ってます。</p>

<p>Ref:</p>

<blockquote>
  <p><a href="https://github.com/Linuxbrew/legacy-linuxbrew/issues/46">Linuxbrew: “Package bash-completion was not found…” at command prompt. · Issue #46 · Linuxbrew/legacy-linuxbrew</a></p>
</blockquote>

<blockquote>
  <p><a href="https://astropengu.in/blog/12/">ADC/MDAS への tmux のインストール</a></p>
</blockquote>

<blockquote>
  <p><a href="https://www.saltycrane.com/blog/2011/04/how-use-bash-shell-python-subprocess-instead-binsh/">How to use the bash shell with Python’s subprocess module instead of /bin/sh - SaltyCrane Blog</a></p>
</blockquote>

<blockquote>
  <p><a href="https://qiita.com/yoichi22/items/5afa8b3b39c723acb359">subprocess で shell=True でリストを与えたときの挙動 - Qiita</a></p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[旧Homebrew-Caskのホームページは違うアプリのものになってるので注意]]></title>
    <link href="https://rcmdnk.com/blog/2019/09/22/computer-brew-file/"/>
    <updated>2019-09-22T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/09/22/computer-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/0008190526?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=0008190526&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/5167VR8nPmL._SS200_.jpg" alt="The Cask (Detective Club Crime Classics)" /></a>
</div>

<p>このブログはGitHub Pagesを通して公開していますが、
そのレポジトリにHomebrewのメンテナーの人から
<code>caskroom.io</code>というドメインはHomebrew Caskとは無関係なものになってしまっているから
リンクは変更してね、というIssueをもらったので直しました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#cask" id="markdown-toc-cask">Cask</a></li>
  <li><a href="#caskroomio" id="markdown-toc-caskroomio">caskroom.io</a></li>
  <li><a href="#メンテナからの報告" id="markdown-toc-メンテナからの報告">メンテナからの報告</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="cask">Cask</h2>

<p>Homebrewではコマンドラインツールに加え、Macのアプリも管理できる
<code>cask</code>コマンドがあります。</p>

<p>以前はHomebrewの外部プラグイン的なものでしたが、今は
Homebrewの一部として動作し、
別途Tapしたりする必要なく使えます。
(実際にはHomebrewの初期インストールでは<code>brew cask</code>コマンドはインストールされてませんが、
このサブコマンドが呼ばれると自動で必要なレポジトリがTapされます。)</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/06/08/computer-homebrwe/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180608_cask_120_90.jpg" width="120" height="90" alt="20180608_cask_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/06/08/computer-homebrwe/">HomebrewのCaskのレポジトリがcaskroomからhomebrewへ移動</a></div></li></ul>

<h2 id="caskroomio">caskroom.io</h2>

<p>もともと別のプロジェクトだったので別のHPも持っていました。</p>

<p>それが<code>caskroom.io</code>というドメイン上にあるHP。</p>

<p>ただ、Homebrewに吸収され、レポジトリも<a href="https://github.com/caskroom">caskroom</a>というアカウント下から<a href="https://github.com/homebrew">Homebrew</a>アカウントの元に吸収され、
ドキュメントなども統一されていく中で
HPも必要なくなっていった感じです。
(元々簡単なインストール方法が書いてある程度でもあったので。)</p>

<p>そんな中、単にドメインの維持料を払い忘れたのか、
意図的に放棄したのかはわかりませんが、
<code>caskroom.io</code>がCaskroom BotというInstagramの
Auto follower bot?とかいう怪しげなソフトウェアのページにリダイレクトされる様になっています。</p>

<h2 id="メンテナからの報告">メンテナからの報告</h2>

<p>これに気づいて注意喚起をしているのか、これに関して
ブログにこのリンクがあるから変えてください、というIssueが来ていました。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/rcmdnk.github.io/issues/3">Update Homebrew Cask URL · Issue #3 · rcmdnk/rcmdnk.github.io</a></p>
</blockquote>

<p>実際該当箇所が数箇所あったので
<code>https://formulae.brew.sh/cask/</code>に変更しておきました。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrew-fileのGitHubのPrivateに対応]]></title>
    <link href="https://rcmdnk.com/blog/2019/03/07/computer-mac-github-brew-file/"/>
    <updated>2019-03-07T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/03/07/computer-mac-github-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07D2JK7B1?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07D2JK7B1&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71t8MElgPaL._SS200_.jpg" alt="プライベート・ライアン (4K ULTRA HD + Blu-rayセット) [4K ULTRA HD + Blu-ray]" /></a>
</div>

<p>Brew-fileのファイル管理様のレポジトリにGitHubのPrivateレポジトリを
指定しようとするとチェック時にレポジトリが無いと言って作成しようとして
失敗しセットできない状態でした。</p>

<p>これをPrivateレポジトリでもそのままセットできる様にしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#githubのプライベートレポジトリ" id="markdown-toc-githubのプライベートレポジトリ">GitHubのプライベートレポジトリ</a></li>
  <li><a href="#brew-fileでgithubプライベートレポジトリを使う" id="markdown-toc-brew-fileでgithubプライベートレポジトリを使う">Brew-fileでGitHubプライベートレポジトリを使う</a></li>
  <li><a href="#その他細かいアップデート" id="markdown-toc-その他細かいアップデート">その他細かいアップデート</a>    <ul>
      <li><a href="#gitgithubユーザー名の自動取得" id="markdown-toc-gitgithubユーザー名の自動取得">Git(GitHub)ユーザー名の自動取得</a></li>
      <li><a href="#ローカルレポジトリの使用" id="markdown-toc-ローカルレポジトリの使用">ローカルレポジトリの使用</a></li>
    </ul>
  </li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="githubのプライベートレポジトリ">GitHubのプライベートレポジトリ</h2>

<p>最近までGitHubのプライベートレポジトリは有料で
Gitのプライベートレポジトリを無料で使いたい場合には
Bitbucketなどを使う必要がありました。</p>

<p>しかし今年の1月からGitHubでも無料でプライベートレポジトリが作れる様になりました。</p>

<blockquote>
  <p><a href="https://github.blog/changelog/2019-01-07-pricing-changes/">Unlimited free private repositories with GitHub Free and a unified business offering with GitHub Enterprise - The GitHub Blog</a></p>
</blockquote>

<p>このプライベートレポジトリですが、見る権限の無いユーザーがブラウザから開こうとすると
<code>403 Forbidden</code>とかではなく、単に<code>404 Not found</code>のエラーが返る様になっています。</p>

<blockquote>
  <p><a href="https://developer.github.com/v3/troubleshooting/">Troubleshooting  GitHub Developer Guide</a></p>
</blockquote>

<h2 id="brew-fileでgithubプライベートレポジトリを使う">Brew-fileでGitHubプライベートレポジトリを使う</h2>

<p>Brew-fileの中でBrewfile管理用のGitHubのレポジトリをチェックする際に
該当のURLを開いてみて存在するかどうか、というチェックを行っていました。</p>

<p>単にHTTPErrorを見てチェックしていただけだったので、
Error内容を細かく見ればプライベートレポジトリを区分けられるかな、と思ったのですが
上に書いたように権限がないと単に<code>404 Not found</code>になるので上手くいきません。</p>

<p>なので単にCloneを試して失敗したら作成する、というような変更を行いました。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/homebrew-file/issues/84">Support private repositories in brew set_repo · Issue #84 · rcmdnk/homebrew-file</a></p>
</blockquote>

<p>Pull Requestが来たので。</p>

<p>以前は自分でPrivateレポジトリを持てなかったのでそもそも気にしてませんでしたが、
プライベートレポジトリが無料になった今、Brewfileを公開せずにGitHubで管理したい、
というケースも多いと思うので早速。</p>

<h2 id="その他細かいアップデート">その他細かいアップデート</h2>

<h3 id="gitgithubユーザー名の自動取得">Git(GitHub)ユーザー名の自動取得</h3>

<p>これまでレポジトリの指定にはGitHubの場合で<code>&lt;user&gt;/&lt;repository&gt;</code>
の様に指定する必要がありましたが、
今後は<strong>.gitconfig</strong>に<code>github.user</code>かまたは<code>user.name</code>が設定されていれば<code>&lt;repository&gt;</code>だけでも
レポジトリを指定できるようにしました。</p>

<h3 id="ローカルレポジトリの使用">ローカルレポジトリの使用</h3>

<p>これまでも一応対応しているつもりでしたが、
うまくいかない場合があったり、レポジトリがない場合は終了するような状態になってました。</p>

<pre><code>$ brew file set_repo --repo /tmp/Brewfile
</code></pre>

<p>とかやると、(なければ)<strong>/tmp/Brewfile</strong>にディレクトリを作ってそこで<code>git init --bare</code>して
そのレポジトリをクローンするような事をします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LinuxでHomebrewを使う: Homebrew-fileも対応させた]]></title>
    <link href="https://rcmdnk.com/blog/2019/02/27/computer-linux-homebrew/"/>
    <updated>2019-02-27T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/02/27/computer-linux-homebrew</id>
    <content type="html"><![CDATA[<p>Homebrew 2.0.0がリリースされこれまで別途開発が進められていたLinux用のLinuxbrewが
Homebrew本体に統合されました。</p>

<p>そこでこれまでLinux環境でローカルに自分でインストールしていたものを
Homebrewで入れる様にしてみました。</p>

<p>また、パッケージ管理用のHomebrew-fileについてもLinuxに対応させました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#これまでのlinuxローカルパッケージ" id="markdown-toc-これまでのlinuxローカルパッケージ">これまでのLinuxローカルパッケージ</a></li>
  <li><a href="#linuxbrew-to-homebrew" id="markdown-toc-linuxbrew-to-homebrew">Linuxbrew to Homebrew</a></li>
  <li><a href="#インストール領域" id="markdown-toc-インストール領域">インストール領域</a></li>
  <li><a href="#homebrewlinuxのインストール" id="markdown-toc-homebrewlinuxのインストール">Homebrew@Linuxのインストール</a></li>
  <li><a href="#formulaについて" id="markdown-toc-formulaについて">Formulaについて</a></li>
  <li><a href="#linuxでhomebrew-file" id="markdown-toc-linuxでhomebrew-file">LinuxでHomebrew-file</a></li>
  <li><a href="#現状起こっている問題" id="markdown-toc-現状起こっている問題">現状起こっている問題</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="これまでのlinuxローカルパッケージ">これまでのLinuxローカルパッケージ</h2>

<p>共用マシンなどで自由にシステムにパッケージが入れられない環境で
自分のHOMEディレクトリに必要なパッケージをインストールして使うことがよくあります。</p>

<p>その際、それぞれ自分で毎回手動でコンパイルしてインストールするのは結構大変で
また管理も面倒です。</p>

<p>そういったユーザー用の管理ツールはいくつかあってこれまで試してきました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/8484640825?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=8484640825&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61moyMmCoxL._SS90_CR0,0,120,90_.jpg" alt="Paco (スペイン語) ハードカバー" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/08/04/computer-linux-mac/">pacoでmake installしたパッケージを管理</a></div></li></ul>

<p>pacoはインストール自体は自分で行いますが、パッケージ管理がちょっと出来る様になるツール。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01LYG6IA6?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01LYG6IA6&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51JsgVDiDsL._SS90_CR0,0,120,90_.png" alt="stow bottles" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/05/11/computer-linux-bash/">stow-get: Stowを使ったパッケージマネージャー</a></div></li></ul>

<p>Stowもpco同様パッケージ管理ツールですがよりシンプルなものになっています。
これを使って<code>stow-get</code>というツールを作って、所謂Homebrew的に
各パッケージのconfiguration fileをあらかじめ用意してそれに従って
パッケージをインストール出来る様にしていました。</p>

<div class="github-widget" data-repo="rcmdnk/stow-get"></div>

<p>これはそれなりにきちんと動いていて、各パッケージの最新パッケージも自動で確認出来る様になっているので
結構便利だと思います。</p>

<p>ただ、余り広められなかったのでパッケージファイルは自分で必要なものしかないし、
そうであるので逆に他の人には使いづらいものになっていたかもしれません。</p>

<p>そんな中、HomebrewのLinux版、Linuxbrewの開発が進んでいて、
Linuxbrew自体は大分前からあるものですが、
以前一度Linuxbrewを使おうとしてエラーが出たところで使うのをやめていました。</p>

<p>が、今回Homebrewに統一されたということでもう一度試してみようということで色々見てみました。</p>

<h2 id="linuxbrew-to-homebrew">Linuxbrew to Homebrew</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/02/08/computer-mac-linux-homebrew/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20190208_homebrew_120_90.jpg" width="120" height="90" alt="20190208_homebrew_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/02/08/computer-mac-linux-homebrew/">Homebrew 2.0.0リリース: Linuxbrewの統合</a></div></li></ul>

<p>Homebrew 2.0.0が今月リリースされこれまで別途開発が進められていたLinux版Homebrew、LinuxbrewがHomebrew本体に統一されました。</p>

<div class="github-widget" data-repo="Linuxbrew/brew"></div>

<p><a href="http://linuxbrew.sh/">Linuxbrew  The Homebrew package manager for Linux</a></p>

<p>Linuxbrewはシステム領域の<strong>/usr/bin</strong>などではなく、ユーザー権限でインストール出来る領域に
ソフトウェアをインストールするツールです。</p>

<h2 id="インストール領域">インストール領域</h2>

<p>Macでは<strong>/usr/local/</strong>がデフォルト領域ですが、Linuxbrewでは<strong>/home/linuxbrew/.linuxbrew</strong>が
デフォルト領域になります。
この領域は通常ユーザーでは作れないので<code>sudo</code>で作れる権限を持っているかあらかじめ
Homebrewを使うユーザー様にディレクトリを作って権限を変更したりする必要がありますが、
そうでない場合はユーザーのHome、<strong>$HOME/.linuxbrew</strong>にインストールすることになります。</p>

<p>ユーザーが自分のためだけに入れるのだから最初から<strong>$HOME/.linuxbrew</strong>の方が
良い様な気もしますが、
bottleを通して入れる際に<strong>$HOME/.linuxbrew</strong>だと問題が起こる場合があります。</p>

<p>というのもbottleはあらかじめコンパイルされているためすばやくインストールすることが可能ですが、
コンパイル環境は<strong>/home/linuxbrew/.linuxbrew</strong>を使っています。
パッケージによってはパスをハードコードして埋め込んでしまうものがあり、
その様なものは<strong>$HOME/.linuxbrew</strong>に入れると上手く動かないことがあるからです。</p>

<blockquote>
  <p><a href="https://github.com/Linuxbrew/brew/wiki/FAQ">FAQ · Linuxbrew/brew Wiki</a></p>
</blockquote>

<p>そのためそういったパッケージに関しては<strong>$HOME/.linuxbrew</strong>の場合には
ソースからコンパイルするオプション(<code>-s</code>/<code>--build-from-source</code>)が自動で
有効にされる様になっています。</p>

<p>それでも対応が出来てないパッケージなどもある可能性があるので
できれば<strong>/home/linuxbrew</strong>を使ったほうが安全ですしbottleを常に使える分インストールが速いです。</p>

<p>ただ、Linuxbrewを使いたいのは<code>yum</code>/<code>apt-get</code>などで<strong>/usr/bin</strong>に
インストールすることが出来ない権限のユーザーが自分用にパッケージを入れたい、
という場合が多いと思います。
その場合は<strong>/home/linuxbrew</strong>を作れないことがほとんどだと思うので
<strong>$HOME/.linuxbrew</strong>にインストールすることになります。</p>

<p>Macの場合と違い、LinuxではOSからして色々あり
環境によっては上手く動かない場合もまだあるみたいですが、
この辺りもHomebrewに統合されてユーザーが増えればどんどん改善されていくと思います。</p>

<h2 id="homebrewlinuxのインストール">Homebrew@Linuxのインストール</h2>

<p>準備として最低限<code>curl</code>が入っていることが必要です。</p>

<p>また、<strong>/home/linuxbrew</strong>を作れず<strong>$HOME/.linuxbrew</strong>にインストールする場合には
<code>gcc</code>もあらかじめインストールされている必要があります。</p>

<p><a href="http://linuxbrew.sh/">公式ページには</a></p>

<p>Debian or Ubuntu:</p>

<pre><code>$ sudo apt-get install build-essential curl file git
</code></pre>

<p>Fedora, CentOS, or Red Hat</p>

<pre><code>$ sudo yum groupinstall 'Development Tools' &amp;&amp; sudo yum install curl file git
</code></pre>

<p>の各インストールが要請されていますが、
<code>git</code>などはインストール過程でHomebrew版がインストールされます。
(Homebrewのインストール過程で<strong>/usr/bin/which: no git in…</strong>みたいなwarningが出て
通常最初にインストールされるものがインストールされなかったりしますが取り敢えずそのまま続けて大丈夫です。)</p>

<p><code>gcc</code>も<strong>/home/linuxbrew</strong>にインストールする場合はbottleからインストールされるので
別途必要ありません。</p>

<p>HOMEにインストールする場合、Homebrewのインストール自体は出来ますが、
その後なにかインストールしようとすると</p>

<pre><code>$ brew install go
Error: The following formula
  curl
cannot be installed as binary package and must be built from source.
Install Clang or brew install gcc
Error: The following formula
  git
cannot be installed as binary package and must be built from source.
Install Clang or brew install gcc
Error: Git must be installed and in your PATH!
Error: The following formula
  go
cannot be installed as binary package and must be built from source.
Install Clang or brew install gcc
</code></pre>

<p>みたいなエラーが出ます。<code>curl</code>はシステムにあってもHomebrewのものを別途インストールしようとするのですが、
その際、HOMEに入れる場合はbottleからでなくコンパイルが必要なので<code>gcc</code>が必要になりエラーが出ます。</p>

<p>とりあえず<code>curl</code>や<code>gcc</code>などはなんとかシステムレベルでインストールするか
なんとかする必要があります。</p>

<p>準備が出来たら
Linuxでは以下のコマンドでHomebrewをインストールします。</p>

<pre><code>$ sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
</code></pre>

<p>インストールスクリプトに関してはMac版のForkですがちょっと手を加えてあり
まだ統合されておらず別のものになっています。</p>

<p><a href="https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh">https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh</a>
は<a href="https://raw.githubusercontent.com/Linuxbrew/install/master/install">https://raw.githubusercontent.com/Linuxbrew/install/master/install</a>
のラッパースクリプトになっていて、この<strong>install</strong>の方は
Mac版(<a href="https://raw.githubusercontent.com/Homebrew/install/master/install">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)のForkです。</p>

<p><strong>install.sh</strong>の中ではRubyが入ってない場合に別途インストールするスクリプトが最初に走る様になっています。</p>

<p><strong>install</strong>スクリプトの中では<strong>/home/linuxbrew</strong>を作ったり書き込みができればそこへ、
そうでない場合には<strong>$HOME</strong>にインストールするようなチェックが入っています。</p>

<p>この際、ちょっと特殊な場合で、<code>sudo</code>がNOPASSWDで許可された上で許可されたコマンドがない、
という設定になっている場合<strong>/home/linuxbrew</strong>を使おうとしてしまい結果使えずにエラー終了します。</p>

<p>これに関してはPull Requestを出しています。</p>

<blockquote>
  <p><a href="https://github.com/Linuxbrew/install/pull/47">fixed sudo checks by rcmdnk · Pull Request #47 · Linuxbrew/install</a></p>
</blockquote>

<p>ちょっとごちゃごちゃしてしまいましたが一応レビューは終わった状態ですが、
そのタイミングで止まってしまっています。が、多分そのうちMergeされると思います。</p>

<div class="postscript">
  <p><strong>追記: 2019/03/07 </strong></p>

  <p>Mergeされたので本家のほうを使ってインストールできます。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>もしこの問題に当たってる人がいたら、</p>

<ul>
  <li><a href="https://github.com/rcmdnk/install/blob/master/install-ruby">rcmdnk/install/install-ruby</a> (Rubyのインストールが必要な場合)</li>
  <li><a href="https://github.com/rcmdnk/install/blob/master/install">rcmdnk/install/install</a></li>
</ul>

<p>を取ってきて直接走らせればインストール出来るかと思います。</p>

<p>インストール時に起こった他の問題として、
上に書いたstow-getで自分の環境下に別途OpenSSLをインストールしていたところ、</p>

<pre><code>==&gt; Installing curl dependency: openssl
...
Warning: The post-install step did not complete successfully
You can try again using `brew postinstall openssl`
==&gt; Caveats
A CA file has been bootstrapped using certificates from the SystemRoots
keychain. To add additional certificates (e.g. the certificates added in
the System keychain), place .pem files in
  /home/user/.linuxbrew/etc/openssl/certs

and run
  /home/user/.linuxbrew/opt/openssl/bin/c_rehash
==&gt; Summary
...
==&gt; Installing git dependency: patchelf
...
curl: (77) error setting certificate verify locations:
  CAfile: /home/user/.linuxbrew/etc/openssl/cert.pem
  CApath: /home/user/.linuxbrew/etc/openssl/certs
Error: Failed to download resource "patchelf"
</code></pre>

<p>と言ったエラーが出てしまいました。
これに関することは</p>

<blockquote>
  <p><a href="https://github.com/Linuxbrew/brew/wiki/FAQ">FAQ · Linuxbrew/brew Wiki</a></p>
</blockquote>

<p>にもありますが、ちょっと状況が違うようで、
どうもローカルにインストールしてあった<code>curl</code>および<code>openssl</code>が変に作用して途中で
きちんとしたインストールが出来てないようでした。</p>

<p>一旦<code>brew</code>がインストールされてしまえば、無理やりなんとかできそうですが、
最初の時点でコケるので面倒。</p>

<p>今回は環境の作り直しということで、一旦stow-getでインストールしたものは退避させた状態で
Homebrewをインストールしたところ上手く行きました。</p>

<h2 id="formulaについて">Formulaについて</h2>

<p>Formulaは基本Macと同じものです。</p>

<ul>
  <li><a href="https://github.com/Homebrew/linuxbrew-core">Homebrew/linuxbrew-core</a></li>
</ul>

<p>いくつかのLinux Specificなものは別途用意されていてこのレポジトリもあらかじめタップしてあるので
中にあるFormulaは最初から使えます。</p>

<ul>
  <li><a href="https://github.com/Linuxbrew/homebrew-extra">Linuxbrew/homebrew-extra</a></li>
</ul>

<p>Formulaが基本的に同じなので自作のFormulaとかもそのまま使えます。
次に出てくるHomebrew-fileなんかも同じ様に入れられます。</p>

<h2 id="linuxでhomebrew-file">LinuxでHomebrew-file</h2>

<p>HomebrewではHomebrew-fileを使ってパッケージリストの管理を行っています。</p>

<div class="github-widget" data-repo="rcmdnk/homebrew-file"></div>

<p>Homebrew自体にもbundleというBrewfileへのdump、及びファイルを読み込みリストにあるものをインストール
する機能はありますが、
Homebrew-fileではBrewfileをパッケージをインストールするごとに更新したり
GitHubのレポジトリを用いてBrewfileをバージョン管理したりする機能もあります。</p>

<p>これをそのままLinuxで使おうとしたところ、<code>cask</code>や<code>mas</code>などMacでしか使わないものの関連で
おかしくなってしまう部分があったのでちょっと手を加えました。</p>

<pre><code>$ brew install rcmdnk/file/brwe-file
</code></pre>

<p>でインストールでき、<code>brew file</code>コマンドが使える様になります。</p>

<p>MacとLinuxではアプリのインストールの部分でどうしても違いが出てしまうので
現状ではそれぞれ別のレポジトリやファイルを使った管理をするべきです。</p>

<p>今はMac用とLinux様に分けて管理しています。</p>

<ul>
  <li><a href="https://github.com/rcmdnk/Brewfile">rcmdnk/Brewfile</a> (Mac用)</li>
  <li><a href="https://github.com/rcmdnk/Brewfile.linux">rcmdnk/Brewfile.linux</a> (Linux用)</li>
</ul>

<p>Linuxに関しては環境ごとに色々必要なものが変わってくることもあるので
あまりに差が出るようならLinuxの中でも分けたほうが良いかもしれません。
(Macでも色々用途が違うものを複数使ってるならあれですが。。。)</p>

<p>とりあえず今の所特に問題なくLinuxでも動いていることを確認していますが、
もし使ってみて問題があればIssuesとかに出してもらえるとありがたいです。</p>

<h2 id="現状起こっている問題">現状起こっている問題</h2>

<p>完全に環境依存で、他の環境で試したら問題なかったりするものなのですが、1つは
<code>LD_LIBRARY_PATH</code>に<strong>$HOME/.linuxbrew/lib</strong>を加えると</p>

<pre><code>$ ls
ls: 0s": ELF: x: Error 1325453653
$ ls
ls: a: ELF: x: Error 18446744072590418261
</code></pre>

<p>の様にいくつかの基本的なコマンドがバグる状態。
真面目にライブラリの依存性を考えればよいのでしょうが、まだ何が悪いかまではわかってないです。</p>

<p>もう1つは関連してgoをインストールしたところ、</p>

<pre><code>$ go
go: relocation error: /usr/lib64/libc.so.6: symbol _dl_starting_up, version GLIBC_PRIVATE not defined in file ld-linux-x86-64.so.2 with link time reference
</code></pre>

<p>というエラーが出て使えない状態です。
この必要なlibcは<strong>$HOME/.linuxbrew/lib/libc.so.6</strong>にもインストールされていて、これを使えば問題なく動きます。</p>

<p>ただ、これを使うために</p>

<pre><code>$ export LD_LIBRARY_PATH=$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH
</code></pre>

<p>をすると上のエラーが置きてしまうわけです。</p>

<p>この問題は他のパッケージでも起こることなのでやはりLD_LIBRARY_PATHの問題は解決しないといけないのですが、
差し当たりどうしても必要な<code>vim</code>、<code>screen</code>、<code>python</code>、<code>python@2</code>などは問題なく入れられたので
また時間を見てちゃんとみたいと思っています。。。</p>

<div class="postscript">
  <p><strong>追記: 2019/05/08 </strong></p>

  <p>とりあえず現状の解決法。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/05/08/computer-linux-homebrew/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20190208_homebrew_120_90.jpg" width="120" height="90" alt="20190208_homebrew_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/05/08/computer-linux-homebrew/">Linuxbrew改めHomebrew@Linuxでrelocation errorに対する対処法</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新しいMacへのHomebrewなどを使ったアプリとかのインストール]]></title>
    <link href="https://rcmdnk.com/blog/2018/04/18/computer-mac-homebrew-brew-file/"/>
    <updated>2018-04-18T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/04/18/computer-mac-homebrew-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0006FGZCQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0006FGZCQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51gFQueAjRL._SS200_.jpg" alt="上戸彩 in インストール [DVD]" /></a>
</div>

<p>新しいMacで最初に取り敢えず入れるアプリやパッケージのインストール、設定について。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#homebrew--brew-fileをインストール" id="markdown-toc-homebrew--brew-fileをインストール">Homebrew &amp; Brew-fileをインストール</a></li>
  <li><a href="#brewfileを設定して一通りインストール" id="markdown-toc-brewfileを設定して一通りインストール">Brewfileを設定して一通りインストール</a></li>
  <li><a href="#mackupを使ってアプリの設定を移行" id="markdown-toc-mackupを使ってアプリの設定を移行">mackupを使ってアプリの設定を移行</a></li>
  <li><a href="#その他手動コピーファイル" id="markdown-toc-その他手動コピーファイル">その他手動コピーファイル</a></li>
  <li><a href="#まずはdropboxevernote" id="markdown-toc-まずはdropboxevernote">まずはDropbox/Evernote</a></li>
  <li><a href="#dotfilesscriptsなどをインストール" id="markdown-toc-dotfilesscriptsなどをインストール">dotfiles/scriptsなどをインストール</a></li>
  <li><a href="#再起動" id="markdown-toc-再起動">再起動</a></li>
  <li><a href="#もろもろアプリの設定" id="markdown-toc-もろもろアプリの設定">もろもろアプリの設定</a>    <ul>
      <li><a href="#finder" id="markdown-toc-finder">Finder</a></li>
      <li><a href="#iterm" id="markdown-toc-iterm">iTerm</a></li>
      <li><a href="#hyperswitch" id="markdown-toc-hyperswitch">HyperSwitch</a></li>
      <li><a href="#karabiner-elements" id="markdown-toc-karabiner-elements">Karabiner-Elements</a></li>
      <li><a href="#bettertouchtool" id="markdown-toc-bettertouchtool">BetterTouchTool</a></li>
      <li><a href="#google日本語入力" id="markdown-toc-google日本語入力">Google日本語入力</a></li>
      <li><a href="#menubargmail" id="markdown-toc-menubargmail">MenuBarGmail</a></li>
      <li><a href="#chrome" id="markdown-toc-chrome">Chrome</a></li>
      <li><a href="#firefox" id="markdown-toc-firefox">Firefox</a></li>
      <li><a href="#controlplane" id="markdown-toc-controlplane">ControlPlane</a></li>
      <li><a href="#clipy" id="markdown-toc-clipy">Clipy</a></li>
      <li><a href="#cafenine" id="markdown-toc-cafenine">Cafenine</a></li>
      <li><a href="#pocket" id="markdown-toc-pocket">Pocket</a></li>
      <li><a href="#skype" id="markdown-toc-skype">Skype</a></li>
      <li><a href="#teamviewer" id="markdown-toc-teamviewer">TeamViewer</a></li>
      <li><a href="#volumecontrol" id="markdown-toc-volumecontrol">VolumeControl</a></li>
      <li><a href="#weatherbug" id="markdown-toc-weatherbug">WeatherBug</a></li>
      <li><a href="#google日本語入力-1" id="markdown-toc-google日本語入力-1">Google日本語入力</a></li>
      <li><a href="#geektool" id="markdown-toc-geektool">GeekTool</a></li>
      <li><a href="#xrg" id="markdown-toc-xrg">XRG</a></li>
      <li><a href="#simplefloatingclock" id="markdown-toc-simplefloatingclock">SimpleFloatingClock</a></li>
      <li><a href="#garageband" id="markdown-toc-garageband">Garageband</a></li>
    </ul>
  </li>
  <li><a href="#dockの整理" id="markdown-toc-dockの整理">Dockの整理</a></li>
  <li><a href="#crontab" id="markdown-toc-crontab">crontab</a></li>
  <li><a href="#メール設定" id="markdown-toc-メール設定">メール設定</a></li>
  <li><a href="#powのインストール" id="markdown-toc-powのインストール">powのインストール</a></li>
  <li><a href="#スクリーンショットの設定" id="markdown-toc-スクリーンショットの設定">スクリーンショットの設定</a></li>
  <li><a href="#システム環境設定" id="markdown-toc-システム環境設定">システム環境設定</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="homebrew--brew-fileをインストール">Homebrew &amp; Brew-fileをインストール</h2>

<pre><code>$ curl -fsSL https://raw.github.com/rcmdnk/homebrew-file/install/install.sh |sh
</code></pre>

<p>SIPで<strong>/usr/local/</strong>がどうのこうのというのがありましたが
特に何もせずに<strong>/usr/local/</strong>以下にHomebrewをインストールすることが出来ました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B016AZMAIS?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B016AZMAIS&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/510n9cnBIrL._SS90_CR0,0,120,90_.jpg" alt="The Complete Beginners Guide to Mac OS X El Capitan: (For MacBook, MacBook Air, MacBook Pro, iMac, Mac Pro, and Mac Mini) (English Edition)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/10/10/computer-mac/">OS X 10.11 El CapitanのSystem Integrity Protection(SIP) (rootless)についてちょっと詳しく</a></div></li></ul>

<p>また、以前はXcodeのコマンドラインツールを事前にインストールする必要があったと思いますが、
その辺も自動でやってくれるようになったみたいです。</p>

<h2 id="brewfileを設定して一通りインストール">Brewfileを設定して一通りインストール</h2>

<pre><code>$ brew file set_repo
$ brew file install
</code></pre>

<p>GitHubにあるBrewfileレポジトリをセットして取ってきて
それに従ってインストールを開始。</p>

<p>コマンドラインパッケージ、外部アプリ、AppStoreのアプリと一通りインストールするものが全部入ります。</p>

<p>古いバージョンで今は無いものがBrewfileに残っていたりとかいくつか問題が出ましたが
それほど面倒なく全部入れられました。</p>

<p>なんだかんだ他のことしながらというのもあって1時間位。
その間、色々macOSの設定をいじったりとか。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/04/16/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180416_setting_120_90.png" width="120" height="90" alt="20180416_setting_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/16/computer-mac/">Touch Bar付きmacOS High Sierraの設定</a></div></li></ul>

<p>ちょっと起こった問題としては</p>

<ul>
  <li>w3mのインストールで<strong>/usr/local/share/man/de</strong>、<strong>/usr/local/share/man/whatis</strong>というディレクトリがroot所有になっていたためにドキュメントとかがインストールできなかった、というエラーが出た。
    <ul>
      <li><code>sudo chown -R $USER /usr/local/share/man</code>して<code>brew link w3m</code>で対応。</li>
    </ul>
  </li>
  <li>AppStoreのアプリでいくつかすでに配布されてないアプリがあった。
    <ul>
      <li>Should I Sleep: カメラで顔とかを認証してスリープをしないようにするアプリ。代用品見つからず。便利だしあっても良さそうなのですが。</li>
      <li>Farensius/Degrees: 天気アプリ。メニューバーに天気を表示しておく用に。これは<a href="https://www.weatherbug.com/">WeatherBug</a>というアプリに変えました。こちらのが最新高機能。</li>
    </ul>
  </li>
</ul>

<h2 id="mackupを使ってアプリの設定を移行">mackupを使ってアプリの設定を移行</h2>

<p>以下に書いた通りアプリの設定を前のマシンから持ってきて入れます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01N4S1KPH?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01N4S1KPH&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51QwYcYcZWL._SS90_CR0,0,120,90_.jpg" alt="2&nbsp;x 2&nbsp;x 8.5&nbsp;CM ( 0.78&nbsp;&quot; x0.78&nbsp;x3.34」)長方形クラフト紙ギフトボックスMerchandiseリップスティックTobe MackupショッピングFavorパッケージボックス化粧品クラフトEssential Oilボトルストレージボックス 2x2x8.5cm (0.78&quot;x0.78&quot;x3.34&quot;) ブラック" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/15/computer-mac/">mackupを使った新しいMacへの設定移行方法</a></div></li></ul>

<h2 id="その他手動コピーファイル">その他手動コピーファイル</h2>

<p>dotfilesはGitHubのレポジトリのクローンがそのままDropboxの中に入っているのでそこからリンクを貼れば良いのですが、
一部<strong>dotfiles</strong>な管理をしてないものがあるのでそれを前のマシンからコピー。</p>

<ul>
  <li>.ssh/</li>
  <li>.localrc</li>
</ul>

<p><strong>.ssh/</strong>はパーミッションを700へ。
中にあるものは全部600へ変更。</p>

<p>また、<strong>octopress</strong>フォルダも<strong>~/Documents</strong>以下にコピー。</p>

<p>ResetApps.appを<strong>~/Applications</strong>にコピー。</p>

<h2 id="まずはdropboxevernote">まずはDropbox/Evernote</h2>

<p>大量に同期しなきゃいけないのでまずDropboxとEvernoteの設定から。</p>

<p>設定はmackupで大体済んでるのでとりあえず起動させると同期し始めます。</p>

<p>Evernoteの方はマシン起動時に立ち上がる設定が反映されてなかったので、
環境設定<i class="fa fa-arrow-right"></i>全般で</p>

<ul>
  <li><strong>コンピュータのログイン時にEvernote Helperを起動する</strong>、にチェックを入れる。</li>
  <li><strong>コンピュタにログインした時にEvernoteを起動</strong>、はチェックを入れない。</li>
</ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-dropbox/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/Dropbox_120_90.jpg" width="120" height="90" alt="Dropbox_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-dropbox/">Dropboxの初期設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-evernote/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/WinApp/thumbnail/Evernote_120_90.png" width="120" height="90" alt="Evernote_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-evernote/">Evernoteの設定</a></div></li></ul>

<h2 id="dotfilesscriptsなどをインストール">dotfiles/scriptsなどをインストール</h2>

<p>Dropboxで同期が終わった後。</p>

<pre><code>$ mkdir -p ~/usr/share/
$ cd !$
$ ln -s /Users/user/Dropbox/settings/git
$ cd dotfiles &amp;&amp; ./install.sh &amp;&amp; cd -
$ cd scripts &amp;&amp; ./install.sh &amp;&amp; cd -
$ cd AppScript &amp;&amp; ./install.sh &amp;&amp; cd -
</code></pre>

<p>AppleScriptは<code>osadecompile</code>したテキストファイルが入っていてそれを<code>osacompile</code>して<strong>~/Library/Scripts/</strong>にインストールするんですが、
GeekToolに関連するものが<code>osadecompile</code>でエラーがでました。</p>

<p>これは一度GeekTool起動後に試したらエラーなくコンパイルできました。</p>

<h2 id="再起動">再起動</h2>

<p>この辺で一度再起動。
OSアップデートとかが入って1時間くらいかかりました。</p>

<h2 id="もろもろアプリの設定">もろもろアプリの設定</h2>

<p>mackupで移行出来ないアプリや移行出来ない設定などをちょこちょこと。</p>

<h3 id="finder">Finder</h3>

<p><strong>表示</strong>で、<strong>パスバーを表示</strong>、<strong>ステータスバーを表示</strong>をチェック。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/19/computer-mac-finder/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/XtraFinder_120_90.png" width="120" height="90" alt="XtraFinder_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/19/computer-mac-finder/">MacでのFinderの設定</a></div></li></ul>

<h3 id="iterm">iTerm</h3>

<p>mackupであまり上手く引き継がれていなかった?</p>

<p>とりあえず下を見ながら必要なところを変更。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-iterm2/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/iTerm2_120_90.png" width="120" height="90" alt="iTerm2_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-iterm2/">iTerm2の設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/10/06/computer-mac-iterm/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20161006_itermprofileskeys_120_90.jpg" width="120" height="90" alt="20161006_itermprofileskeys_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/10/06/computer-mac-iterm/">MacのiTerm/ターミナルでメタキー(Alt)を使う方法</a></div></li></ul>

<h3 id="hyperswitch">HyperSwitch</h3>

<p>起動して
<strong>Run HyperSwitch in the background</strong>にチェック。</p>

<h3 id="karabiner-elements">Karabiner-Elements</h3>

<p>起動する。(自動起動は自動で設定。)</p>

<p>現在<i class="key">Control</i>-<i class="key">FnX</i>な動作を他のキーに割り当てようとするとうまくいかない。
(TouchBarで元の物理キーボードがないため?)</p>

<h3 id="bettertouchtool">BetterTouchTool</h3>

<p>一度立ち上げるとセキュリティーの設定が必要で再起動が必要。</p>

<p>macupによってタッチパッドジェスチャーはすべて同期されていた。</p>

<p>立ち上げると<strong>Trial 45 days left</strong>となってる。</p>

<p>BetterTouchToolは現在有料だがBetterSnapToolを買うとBetterTouchToolも使える。(直接BetterTouchToolのライセンスを買うよりも安い。)</p>

<p>ということで、BetterSnapToolをAppStoreからインストール。
これでBetterTouchToolの方から認証をBetterSnapToolでしようとすると認証がおりる。</p>

<p>BetterSnapToolは残念ながら自分の使い方だと使いようが無いので削除。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-btt/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/BetterTouchTool_120_90.png" width="120" height="90" alt="BetterTouchTool_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-btt/">BetterTouchToolの設定</a></div></li></ul>

<h3 id="google日本語入力">Google日本語入力</h3>

<p>環境設定の<strong>一般</strong>で、<strong>キー設定の選択</strong>を<strong>MS-IME</strong>に。(<i class="key">Ctrl</i>-<i class="key">I</i>でカタカナにしたい。ことえりだと違うキー。)</p>

<h3 id="menubargmail">MenuBarGmail</h3>

<p>立ち上げGmail認証、<strong>Start at Login</strong>にチェック。</p>

<h3 id="chrome">Chrome</h3>

<p>起動してデフォルトブラウザに。
アカウント設定して設定を同期。</p>

<p>拡張機能の設定は</p>

<ul>
  <li>LastPass: アカウント設定</li>
  <li>cVim: cvimrcの設定</li>
  <li>New Tab Redirect: <strong>Redirect URL</strong>を<strong>https://www.google.co.jp</strong>に。</li>
  <li>Authy: アカウント設定</li>
  <li>Grammarly: アカウント設定</li>
  <li>Poper Blocker, Evernote Cliperなどが<strong>無効になりました</strong>状態になっていたので権限を許可して有効に。</li>
  <li>拡張機能のページからショートカットの設定: cVimの設定は同期されていた。はてなブックマークの設定がCtrl-Shift-Bなのでこれを削除。(Macだとあまり問題なけど、WindowsだとCtrl-Bなので必ず削除する。)</li>
</ul>

<h3 id="firefox">Firefox</h3>

<p>アカウント設定して同期。</p>

<p>拡張機能ではLastPassのアカウント設定を行う。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/15/computer-mac-firefox/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/Firefox_120_90.png" width="120" height="90" alt="Firefox_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/15/computer-mac-firefox/">MacでのFirefoxの設定</a></div></li></ul>

<h3 id="controlplane">ControlPlane</h3>

<p>立ち上げ、<strong>Start ControlPlane at login</strong>にチェック。</p>

<h3 id="clipy">Clipy</h3>

<p>立ち上げて確認すると起動時に立ち上がる設定は出来ていた。
が、スニペットとかは引き継がれていない。</p>

<p>Clipy自体にスニペットをxml形式でエキスポート、インポートできる機能があるので
これを使って前のMacでエキスポートしインポート。</p>

<p>環境設定から<strong>ログイン時に起動</strong>にチェックが付いてるかチェック。(付いてなかった。)
ショートカットなどはきちんと引き継がれていた。</p>

<h3 id="cafenine">Cafenine</h3>

<p>立ち上げ、Pereferenceを開いて<strong>Automatically start Caffeine at login</strong>にチェック。</p>

<h3 id="pocket">Pocket</h3>

<p>立ち上げアカウント設定。</p>

<h3 id="skype">Skype</h3>

<p>立ち上げアカウント設定。</p>

<h3 id="teamviewer">TeamViewer</h3>

<p>Caskでインストールする際にウィザードが立ち上がってそのまま起動するようになっている。</p>

<p>アカウント設定と
無人アクセスセットアップを行う。</p>

<p><strong>環境設定</strong><i class="fa fa-arrow-right"></i><strong>全般</strong>で
<strong>黒と白のメニューバーアイコンを使用します</strong>をチェック。</p>

<h3 id="volumecontrol">VolumeControl</h3>

<p>起動。
メニューから<strong>Mute</strong>、<strong>Open at login</strong>にチェック。</p>

<h3 id="weatherbug">WeatherBug</h3>

<p>起動。環境設定でFからC、ml/hからkm/h、inchesからmb。</p>

<h3 id="google日本語入力-1">Google日本語入力</h3>

<p>環境設定のキーボードからGoogle日本語入力だけにする様に設定。</p>

<p>アイコンを設定。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B005DPF08E?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B005DPF08E&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41hxsD8RHOL._SS90_CR0,0,120,90_.jpg" alt="Apple Keyboard テンキー付き -US MB110LL/B" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/10/30/computer-mac-inputsource/">Mavericksでのキーボードレイアウトの設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/15/computer-mac-ime/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/GoogleIME_120_90.png" width="120" height="90" alt="GoogleIME_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/15/computer-mac-ime/">MacでのIMEの設定</a></div></li></ul>

<h3 id="geektool">GeekTool</h3>

<p>mackupでPropertiesは残っているようだがそれを実際に使えるようには上手くできなかった。</p>

<p>仕方ないので前の設定をみながら作成。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B007BQNM56?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B007BQNM56&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41Qc%2BMAXYuL._SS90_CR0,0,120,90_.jpg" alt="A Guide to GeekTool" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/19/computer-macc-geektool/">MacでのGeekToolの設定</a></div></li></ul>

<h3 id="xrg">XRG</h3>

<p>mackupにないので手動で設定をコピー。</p>

<p>Dockアイコン右クリックメニューで<strong>オプション</strong><i class="fa fa-arrow-right"></i><strong>割り当て先</strong>で<strong>全てのデスクトップ</strong>、を選ぶ。</p>

<p>起動時に起こすオプションが無いのでユーザのログイン項目に手動追加。</p>

<h3 id="simplefloatingclock">SimpleFloatingClock</h3>

<p>mackupにないので手動で設定をコピー。</p>

<p>GMT+2(CET)とGMT+8(JST)を作成。それぞれ:</p>

<ul>
  <li>Features:
    <ul>
      <li>size: 104</li>
      <li>Border: check</li>
      <li>Pip Style: Arabic</li>
      <li>Check followings:
        <ul>
          <li>Seconds</li>
          <li>Date</li>
          <li>Day of Week</li>
          <li>AM/PM indicator</li>
          <li>Time Zone</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Colors:
    <ul>
      <li>全部白に。</li>
      <li>Face Opaclty: 0</li>
      <li>Hands Opaclty: max</li>
      <li>Display Font Helvetica</li>
    </ul>
  </li>
</ul>

<p>Menubar iconから</p>

<ul>
  <li><strong>Launch at Login</strong>にチェック</li>
  <li><strong>All Spaces</strong>にチェック</li>
  <li><strong>Layer</strong><i class="fa fa-arrow-right"></i><strong>Desktop</strong>に設定。</li>
</ul>

<p>最後に<strong>Hide Menubar Icon</strong>。</p>

<h3 id="garageband">Garageband</h3>

<p>元から入っているけど絶対使わないくせに結構大きい(2GBほど)ので削除。</p>

<h2 id="dockの整理">Dockの整理</h2>

<p>DockからFinder、システム環境設定、Download、ゴミ箱以外を全部削除。</p>

<p>HOME、/ApplicationsをDownloadの左に追加。</p>

<p>アクティビティモニタを環境設定の右に追加。</p>

<h2 id="crontab">crontab</h2>

<p>Homebrewなどを更新する設定をコピーして追加。</p>

<h2 id="メール設定">メール設定</h2>

<p>何故か送れる。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4839918937?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4839918937&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51XTHPZVJFL._SS90_CR0,0,120,90_.jpg" alt="メーラーだえもんさんへの手紙" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/11/14/computer-mac/">MacでGmailのSMTPサーバーを使ってコマンドラインからメールを送れるようにする</a></div></li></ul>

<h2 id="powのインストール">powのインストール</h2>

<p>Homebrewでもインストール出来ますが色々手動で設定しなくちゃいけなくなるので
スクリプトを使って直接インストール。</p>

<p>iTermからインストールしようとすると何故かうまくいかない、という現象があるので
ターミナル.appを立ち上げ、</p>

<pre><code>$ export POW_DOMAINS=test,local
$ curl get.pow.cx/install.sh | sh
</code></pre>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/05/20/blog-octopress/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130520_preview_120_90.jpg" width="120" height="90" alt="20130520_preview_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/05/20/blog-octopress/">Octopressでのプレビュー方法</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00R75RZ4U?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00R75RZ4U&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51DHyKq2YOL._SS90_CR0,0,120,90_.jpg" alt="Amazon.co.jp: Maximizing Microsofts Azure for Dev, Test, and DevOps Scenarios (Mini-Book Technology Series 3) (English Edition) 電子書籍: Rand Morimoto, Guy Yardeni: Kindleストア" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/12/27/blog-octopress/">powの.devドメインがChromeで使えなくなったので.testも使える様にする</a></div></li></ul>

<h2 id="スクリーンショットの設定">スクリーンショットの設定</h2>

<p><a href="https://www.titanium-software.fr/en/onyx.html">OnyX</a>
とか使うと簡単に設定できる。</p>

<ul>
  <li>png<i class="fa fa-arrow-right"></i>jpg</li>
  <li>場所: DropboxのScreenshot (英語）へ</li>
  <li>名前: スクリーンショットからmacへ(prefix的なものしか変えられない）</li>
  <li>影の設定は出来ない</li>
</ul>

<p>もしくはコマンドラインで。</p>

<pre><code>$ defaults write com.apple.screencapture location /Users/user/Dropbox/Screenshot # 場所変更
$ defaults write com.apple.screencapture disable-shadow -boolean true # 影をなくす
$ defaults write com.apple.screencapture name mac # prefixの変更
$ defaults write com.apple.screencapture type jpg # 保存タイプの変更
$ killall SystemUIServer # 設定の反映
</code></pre>

<p>Prefixの変更がどちらの場合も効いてなくて<strong>スクリーンショット….</strong>という名前になってしまっている。</p>

<p>また、Dropbox内に<strong>Screenshot</strong>という英語の名前のディレクトリがあるにもかかわらず、この設定でも
<strong>スクリーンショット</strong>という日本語名のディレクトリに保存されてしまう。</p>

<p>どこかに<strong>日本語</strong><i class="fa fa-arrow-right"></i><strong>英語</strong>のエイリアスみたいのがあってそれを使ってる?</p>

<h2 id="システム環境設定">システム環境設定</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/04/16/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180416_setting_120_90.png" width="120" height="90" alt="20180416_setting_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/16/computer-mac/">Touch Bar付きmacOS High Sierraの設定</a></div></li></ul>
]]></content>
  </entry>
  
</feed>
