<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Brew-file | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/brew-file/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2018-08-23T00:51:36+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[新しいMacへのHomebrewなどを使ったアプリとかのインストール]]></title>
    <link href="https://rcmdnk.com/blog/2018/04/18/computer-mac-homebrew-brew-file/"/>
    <updated>2018-04-18T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/04/18/computer-mac-homebrew-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0006FGZCQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0006FGZCQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51gFQueAjRL._SS200_.jpg" alt="上戸彩 in インストール [DVD]" /></a>
</div>

<p>新しいMacで最初に取り敢えず入れるアプリやパッケージのインストール、設定について。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#homebrew--brew-fileをインストール" id="markdown-toc-homebrew--brew-fileをインストール">Homebrew &amp; Brew-fileをインストール</a></li>
  <li><a href="#brewfileを設定して一通りインストール" id="markdown-toc-brewfileを設定して一通りインストール">Brewfileを設定して一通りインストール</a></li>
  <li><a href="#mackupを使ってアプリの設定を移行" id="markdown-toc-mackupを使ってアプリの設定を移行">mackupを使ってアプリの設定を移行</a></li>
  <li><a href="#その他手動コピーファイル" id="markdown-toc-その他手動コピーファイル">その他手動コピーファイル</a></li>
  <li><a href="#まずはdropboxevernote" id="markdown-toc-まずはdropboxevernote">まずはDropbox/Evernote</a></li>
  <li><a href="#dotfilesscriptsなどをインストール" id="markdown-toc-dotfilesscriptsなどをインストール">dotfiles/scriptsなどをインストール</a></li>
  <li><a href="#再起動" id="markdown-toc-再起動">再起動</a></li>
  <li><a href="#もろもろアプリの設定" id="markdown-toc-もろもろアプリの設定">もろもろアプリの設定</a>    <ul>
      <li><a href="#finder" id="markdown-toc-finder">Finder</a></li>
      <li><a href="#iterm" id="markdown-toc-iterm">iTerm</a></li>
      <li><a href="#hyperswitch" id="markdown-toc-hyperswitch">HyperSwitch</a></li>
      <li><a href="#karabiner-elements" id="markdown-toc-karabiner-elements">Karabiner-Elements</a></li>
      <li><a href="#bettertouchtool" id="markdown-toc-bettertouchtool">BetterTouchTool</a></li>
      <li><a href="#google日本語入力" id="markdown-toc-google日本語入力">Google日本語入力</a></li>
      <li><a href="#menubargmail" id="markdown-toc-menubargmail">MenuBarGmail</a></li>
      <li><a href="#chrome" id="markdown-toc-chrome">Chrome</a></li>
      <li><a href="#firefox" id="markdown-toc-firefox">Firefox</a></li>
      <li><a href="#controlplane" id="markdown-toc-controlplane">ControlPlane</a></li>
      <li><a href="#clipy" id="markdown-toc-clipy">Clipy</a></li>
      <li><a href="#cafenine" id="markdown-toc-cafenine">Cafenine</a></li>
      <li><a href="#pocket" id="markdown-toc-pocket">Pocket</a></li>
      <li><a href="#skype" id="markdown-toc-skype">Skype</a></li>
      <li><a href="#teamviewer" id="markdown-toc-teamviewer">TeamViewer</a></li>
      <li><a href="#volumecontrol" id="markdown-toc-volumecontrol">VolumeControl</a></li>
      <li><a href="#weatherbug" id="markdown-toc-weatherbug">WeatherBug</a></li>
      <li><a href="#google日本語入力-1" id="markdown-toc-google日本語入力-1">Google日本語入力</a></li>
      <li><a href="#geektool" id="markdown-toc-geektool">GeekTool</a></li>
      <li><a href="#xrg" id="markdown-toc-xrg">XRG</a></li>
      <li><a href="#simplefloatingclock" id="markdown-toc-simplefloatingclock">SimpleFloatingClock</a></li>
      <li><a href="#garageband" id="markdown-toc-garageband">Garageband</a></li>
    </ul>
  </li>
  <li><a href="#dockの整理" id="markdown-toc-dockの整理">Dockの整理</a></li>
  <li><a href="#crontab" id="markdown-toc-crontab">crontab</a></li>
  <li><a href="#メール設定" id="markdown-toc-メール設定">メール設定</a></li>
  <li><a href="#powのインストール" id="markdown-toc-powのインストール">powのインストール</a></li>
  <li><a href="#スクリーンショットの設定" id="markdown-toc-スクリーンショットの設定">スクリーンショットの設定</a></li>
  <li><a href="#システム環境設定" id="markdown-toc-システム環境設定">システム環境設定</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="homebrew--brew-fileをインストール">Homebrew &amp; Brew-fileをインストール</h2>

<pre><code>$ curl -fsSL https://raw.github.com/rcmdnk/homebrew-file/install/install.sh |sh
</code></pre>

<p>SIPで<strong>/usr/local/</strong>がどうのこうのというのがありましたが
特に何もせずに<strong>/usr/local/</strong>以下にHomebrewをインストールすることが出来ました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B016AZMAIS?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B016AZMAIS&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/510n9cnBIrL._SS90_CR0,0,120,90_.jpg" alt="The Complete Beginners Guide to Mac OS X El Capitan: (For MacBook, MacBook Air, MacBook Pro, iMac, Mac Pro, and Mac Mini) (English Edition)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/10/10/computer-mac/">OS X 10.11 El CapitanのSystem Integrity Protection(SIP) (rootless)についてちょっと詳しく</a></div></li></ul>

<p>また、以前はXcodeのコマンドラインツールを事前にインストールする必要があったと思いますが、
その辺も自動でやってくれるようになったみたいです。</p>

<h2 id="brewfileを設定して一通りインストール">Brewfileを設定して一通りインストール</h2>

<pre><code>$ brew file set_repo
$ brew file install
</code></pre>

<p>GitHubにあるBrewfileレポジトリをセットして取ってきて
それに従ってインストールを開始。</p>

<p>コマンドラインパッケージ、外部アプリ、AppStoreのアプリと一通りインストールするものが全部入ります。</p>

<p>古いバージョンで今は無いものがBrewfileに残っていたりとかいくつか問題が出ましたが
それほど面倒なく全部入れられました。</p>

<p>なんだかんだ他のことしながらというのもあって1時間位。
その間、色々macOSの設定をいじったりとか。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/04/16/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180416_setting_120_90.png" width="120" height="90" alt="20180416_setting_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/16/computer-mac/">Touch Bar付きmacOS High Sierraの設定</a></div></li></ul>

<p>ちょっと起こった問題としては</p>

<ul>
  <li>w3mのインストールで<strong>/usr/local/share/man/de</strong>、<strong>/usr/local/share/man/whatis</strong>というディレクトリがroot所有になっていたためにドキュメントとかがインストールできなかった、というエラーが出た。
    <ul>
      <li><code>sudo chown -R $USER /usr/local/share/man</code>して<code>brew link w3m</code>で対応。</li>
    </ul>
  </li>
  <li>AppStoreのアプリでいくつかすでに配布されてないアプリがあった。
    <ul>
      <li>Should I Sleep: カメラで顔とかを認証してスリープをしないようにするアプリ。代用品見つからず。便利だしあっても良さそうなのですが。</li>
      <li>Farensius/Degrees: 天気アプリ。メニューバーに天気を表示しておく用に。これは<a href="https://www.weatherbug.com/">WeatherBug</a>というアプリに変えました。こちらのが最新高機能。</li>
    </ul>
  </li>
</ul>

<h2 id="mackupを使ってアプリの設定を移行">mackupを使ってアプリの設定を移行</h2>

<p>以下に書いた通りアプリの設定を前のマシンから持ってきて入れます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01N4S1KPH?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01N4S1KPH&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51QwYcYcZWL._SS90_CR0,0,120,90_.jpg" alt="2&nbsp;x 2&nbsp;x 8.5&nbsp;CM ( 0.78&nbsp;&quot; x0.78&nbsp;x3.34」)長方形クラフト紙ギフトボックスMerchandiseリップスティックTobe MackupショッピングFavorパッケージボックス化粧品クラフトEssential Oilボトルストレージボックス 2x2x8.5cm (0.78&quot;x0.78&quot;x3.34&quot;) ブラック" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/15/computer-mac/">mackupを使った新しいMacへの設定移行方法</a></div></li></ul>

<h2 id="その他手動コピーファイル">その他手動コピーファイル</h2>

<p>dotfilesはGitHubのレポジトリのクローンがそのままDropboxの中に入っているのでそこからリンクを貼れば良いのですが、
一部<strong>dotfiles</strong>な管理をしてないものがあるのでそれを前のマシンからコピー。</p>

<ul>
  <li>.ssh/</li>
  <li>.localrc</li>
</ul>

<p><strong>.ssh/</strong>はパーミッションを700へ。
中にあるものは全部600へ変更。</p>

<p>また、<strong>octopress</strong>フォルダも<strong>~/Documents</strong>以下にコピー。</p>

<p>ResetApps.appを<strong>~/Applications</strong>にコピー。</p>

<h2 id="まずはdropboxevernote">まずはDropbox/Evernote</h2>

<p>大量に同期しなきゃいけないのでまずDropboxとEvernoteの設定から。</p>

<p>設定はmackupで大体済んでるのでとりあえず起動させると同期し始めます。</p>

<p>Evernoteの方はマシン起動時に立ち上がる設定が反映されてなかったので、
環境設定<i class="fa fa-arrow-right"></i>全般で</p>

<ul>
  <li><strong>コンピュータのログイン時にEvernote Helperを起動する</strong>、にチェックを入れる。</li>
  <li><strong>コンピュタにログインした時にEvernoteを起動</strong>、はチェックを入れない。</li>
</ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-dropbox/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/Dropbox_120_90.jpg" width="120" height="90" alt="Dropbox_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-dropbox/">Dropboxの初期設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-evernote/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/WinApp/thumbnail/Evernote_120_90.png" width="120" height="90" alt="Evernote_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-evernote/">Evernoteの設定</a></div></li></ul>

<h2 id="dotfilesscriptsなどをインストール">dotfiles/scriptsなどをインストール</h2>

<p>Dropboxで同期が終わった後。</p>

<pre><code>$ mkdir -p ~/usr/share/
$ cd !$
$ ln -s /Users/user/Dropbox/settings/git
$ cd dotfiles &amp;&amp; ./install.sh &amp;&amp; cd -
$ cd scripts &amp;&amp; ./install.sh &amp;&amp; cd -
$ cd AppScript &amp;&amp; ./install.sh &amp;&amp; cd -
</code></pre>

<p>AppleScriptは<code>osadecompile</code>したテキストファイルが入っていてそれを<code>osacompile</code>して<strong>~/Library/Scripts/</strong>にインストールするんですが、
GeekToolに関連するものが<code>osadecompile</code>でエラーがでました。</p>

<p>これは一度GeekTool起動後に試したらエラーなくコンパイルできました。</p>

<h2 id="再起動">再起動</h2>

<p>この辺で一度再起動。
OSアップデートとかが入って1時間くらいかかりました。</p>

<h2 id="もろもろアプリの設定">もろもろアプリの設定</h2>

<p>mackupで移行出来ないアプリや移行出来ない設定などをちょこちょこと。</p>

<h3 id="finder">Finder</h3>

<p><strong>表示</strong>で、<strong>パスバーを表示</strong>、<strong>ステータスバーを表示</strong>をチェック。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/19/computer-mac-finder/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/XtraFinder_120_90.png" width="120" height="90" alt="XtraFinder_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/19/computer-mac-finder/">MacでのFinderの設定</a></div></li></ul>

<h3 id="iterm">iTerm</h3>

<p>mackupであまり上手く引き継がれていなかった?</p>

<p>とりあえず下を見ながら必要なところを変更。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-iterm2/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/iTerm2_120_90.png" width="120" height="90" alt="iTerm2_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-iterm2/">iTerm2の設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/10/06/computer-mac-iterm/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20161006_itermprofileskeys_120_90.jpg" width="120" height="90" alt="20161006_itermprofileskeys_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/10/06/computer-mac-iterm/">MacのiTerm/ターミナルでメタキー(Alt)を使う方法</a></div></li></ul>

<h3 id="hyperswitch">HyperSwitch</h3>

<p>起動して
<strong>Run HyperSwitch in the background</strong>にチェック。</p>

<h3 id="karabiner-elements">Karabiner-Elements</h3>

<p>起動する。(自動起動は自動で設定。)</p>

<p>現在<i class="key">Control</i>-<i class="key">FnX</i>な動作を他のキーに割り当てようとするとうまくいかない。
(TouchBarで元の物理キーボードがないため?)</p>

<h3 id="bettertouchtool">BetterTouchTool</h3>

<p>一度立ち上げるとセキュリティーの設定が必要で再起動が必要。</p>

<p>macupによってタッチパッドジェスチャーはすべて同期されていた。</p>

<p>立ち上げると<strong>Trial 45 days left</strong>となってる。</p>

<p>BetterTouchToolは現在有料だがBetterSnapToolを買うとBetterTouchToolも使える。(直接BetterTouchToolのライセンスを買うよりも安い。)</p>

<p>ということで、BetterSnapToolをAppStoreからインストール。
これでBetterTouchToolの方から認証をBetterSnapToolでしようとすると認証がおりる。</p>

<p>BetterSnapToolは残念ながら自分の使い方だと使いようが無いので削除。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-btt/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/BetterTouchTool_120_90.png" width="120" height="90" alt="BetterTouchTool_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/14/computer-mac-btt/">BetterTouchToolの設定</a></div></li></ul>

<h3 id="google日本語入力">Google日本語入力</h3>

<p>環境設定の<strong>一般</strong>で、<strong>キー設定の選択</strong>を<strong>MS-IME</strong>に。(<i class="key">Ctrl</i>-<i class="key">I</i>でカタカナにしたい。ことえりだと違うキー。)</p>

<h3 id="menubargmail">MenuBarGmail</h3>

<p>立ち上げGmail認証、<strong>Start at Login</strong>にチェック。</p>

<h3 id="chrome">Chrome</h3>

<p>起動してデフォルトブラウザに。
アカウント設定して設定を同期。</p>

<p>拡張機能の設定は</p>

<ul>
  <li>LastPass: アカウント設定</li>
  <li>cVim: cvimrcの設定</li>
  <li>New Tab Redirect: <strong>Redirect URL</strong>を<strong>https://www.google.co.jp</strong>に。</li>
  <li>Authy: アカウント設定</li>
  <li>Grammarly: アカウント設定</li>
  <li>Poper Blocker, Evernote Cliperなどが<strong>無効になりました</strong>状態になっていたので権限を許可して有効に。</li>
  <li>拡張機能のページからショートカットの設定: cVimの設定は同期されていた。はてなブックマークの設定がCtrl-Shift-Bなのでこれを削除。(Macだとあまり問題なけど、WindowsだとCtrl-Bなので必ず削除する。)</li>
</ul>

<h3 id="firefox">Firefox</h3>

<p>アカウント設定して同期。</p>

<p>拡張機能ではLastPassのアカウント設定を行う。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/15/computer-mac-firefox/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/Firefox_120_90.png" width="120" height="90" alt="Firefox_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/15/computer-mac-firefox/">MacでのFirefoxの設定</a></div></li></ul>

<h3 id="controlplane">ControlPlane</h3>

<p>立ち上げ、<strong>Start ControlPlane at login</strong>にチェック。</p>

<h3 id="clipy">Clipy</h3>

<p>立ち上げて確認すると起動時に立ち上がる設定は出来ていた。
が、スニペットとかは引き継がれていない。</p>

<p>Clipy自体にスニペットをxml形式でエキスポート、インポートできる機能があるので
これを使って前のMacでエキスポートしインポート。</p>

<p>環境設定から<strong>ログイン時に起動</strong>にチェックが付いてるかチェック。(付いてなかった。)
ショートカットなどはきちんと引き継がれていた。</p>

<h3 id="cafenine">Cafenine</h3>

<p>立ち上げ、Pereferenceを開いて<strong>Automatically start Caffeine at login</strong>にチェック。</p>

<h3 id="pocket">Pocket</h3>

<p>立ち上げアカウント設定。</p>

<h3 id="skype">Skype</h3>

<p>立ち上げアカウント設定。</p>

<h3 id="teamviewer">TeamViewer</h3>

<p>Caskでインストールする際にウィザードが立ち上がってそのまま起動するようになっている。</p>

<p>アカウント設定と
無人アクセスセットアップを行う。</p>

<p><strong>環境設定</strong><i class="fa fa-arrow-right"></i><strong>全般</strong>で
<strong>黒と白のメニューバーアイコンを使用します</strong>をチェック。</p>

<h3 id="volumecontrol">VolumeControl</h3>

<p>起動。
メニューから<strong>Mute</strong>、<strong>Open at login</strong>にチェック。</p>

<h3 id="weatherbug">WeatherBug</h3>

<p>起動。環境設定でFからC、ml/hからkm/h、inchesからmb。</p>

<h3 id="google日本語入力-1">Google日本語入力</h3>

<p>環境設定のキーボードからGoogle日本語入力だけにする様に設定。</p>

<p>アイコンを設定。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B005DPF08E?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B005DPF08E&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41hxsD8RHOL._SS90_CR0,0,120,90_.jpg" alt="Apple Keyboard テンキー付き -US MB110LL/B" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/10/30/computer-mac-inputsource/">Mavericksでのキーボードレイアウトの設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/05/15/computer-mac-ime/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/GoogleIME_120_90.png" width="120" height="90" alt="GoogleIME_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/15/computer-mac-ime/">MacでのIMEの設定</a></div></li></ul>

<h3 id="geektool">GeekTool</h3>

<p>mackupでPropertiesは残っているようだがそれを実際に使えるようには上手くできなかった。</p>

<p>仕方ないので前の設定をみながら作成。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B007BQNM56?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B007BQNM56&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41Qc%2BMAXYuL._SS90_CR0,0,120,90_.jpg" alt="A Guide to GeekTool" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/19/computer-macc-geektool/">MacでのGeekToolの設定</a></div></li></ul>

<h3 id="xrg">XRG</h3>

<p>mackupにないので手動で設定をコピー。</p>

<p>Dockアイコン右クリックメニューで<strong>オプション</strong><i class="fa fa-arrow-right"></i><strong>割り当て先</strong>で<strong>全てのデスクトップ</strong>、を選ぶ。</p>

<p>起動時に起こすオプションが無いのでユーザのログイン項目に手動追加。</p>

<h3 id="simplefloatingclock">SimpleFloatingClock</h3>

<p>mackupにないので手動で設定をコピー。</p>

<p>GMT+2(CET)とGMT+8(JST)を作成。それぞれ:</p>

<ul>
  <li>Features:
    <ul>
      <li>size: 104</li>
      <li>Border: check</li>
      <li>Pip Style: Arabic</li>
      <li>Check followings:
        <ul>
          <li>Seconds</li>
          <li>Date</li>
          <li>Day of Week</li>
          <li>AM/PM indicator</li>
          <li>Time Zone</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Colors:
    <ul>
      <li>全部白に。</li>
      <li>Face Opaclty: 0</li>
      <li>Hands Opaclty: max</li>
      <li>Display Font Helvetica</li>
    </ul>
  </li>
</ul>

<p>Menubar iconから</p>

<ul>
  <li><strong>Launch at Login</strong>にチェック</li>
  <li><strong>All Spaces</strong>にチェック</li>
  <li><strong>Layer</strong><i class="fa fa-arrow-right"></i><strong>Desktop</strong>に設定。</li>
</ul>

<p>最後に<strong>Hide Menubar Icon</strong>。</p>

<h3 id="garageband">Garageband</h3>

<p>元から入っているけど絶対使わないくせに結構大きい(2GBほど)ので削除。</p>

<h2 id="dockの整理">Dockの整理</h2>

<p>DockからFinder、システム環境設定、Download、ゴミ箱以外を全部削除。</p>

<p>HOME、/ApplicationsをDownloadの左に追加。</p>

<p>アクティビティモニタを環境設定の右に追加。</p>

<h2 id="crontab">crontab</h2>

<p>Homebrewなどを更新する設定をコピーして追加。</p>

<h2 id="メール設定">メール設定</h2>

<p>何故か送れる。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4839918937?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4839918937&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51XTHPZVJFL._SS90_CR0,0,120,90_.jpg" alt="メーラーだえもんさんへの手紙" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/11/14/computer-mac/">MacでGmailのSMTPサーバーを使ってコマンドラインからメールを送れるようにする</a></div></li></ul>

<h2 id="powのインストール">powのインストール</h2>

<p>Homebrewでもインストール出来ますが色々手動で設定しなくちゃいけなくなるので
スクリプトを使って直接インストール。</p>

<p>iTermからインストールしようとすると何故かうまくいかない、という現象があるので
ターミナル.appを立ち上げ、</p>

<pre><code>$ export POW_DOMAINS=test,local
$ curl get.pow.cx/install.sh | sh
</code></pre>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/05/20/blog-octopress/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130520_preview_120_90.jpg" width="120" height="90" alt="20130520_preview_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/05/20/blog-octopress/">Octopressでのプレビュー方法</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00R75RZ4U?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00R75RZ4U&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51DHyKq2YOL._SS90_CR0,0,120,90_.jpg" alt="Amazon.co.jp: Maximizing Microsofts Azure for Dev, Test, and DevOps Scenarios (Mini-Book Technology Series 3) (English Edition) 電子書籍: Rand Morimoto, Guy Yardeni: Kindleストア" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/12/27/blog-octopress/">powの.devドメインがChromeで使えなくなったので.testも使える様にする</a></div></li></ul>

<h2 id="スクリーンショットの設定">スクリーンショットの設定</h2>

<p><a href="https://www.titanium-software.fr/en/onyx.html">OnyX</a>
とか使うと簡単に設定できる。</p>

<ul>
  <li>png<i class="fa fa-arrow-right"></i>jpg</li>
  <li>場所: DropboxのScreenshot (英語）へ</li>
  <li>名前: スクリーンショットからmacへ(prefix的なものしか変えられない）</li>
  <li>影の設定は出来ない</li>
</ul>

<p>もしくはコマンドラインで。</p>

<pre><code>$ defaults write com.apple.screencapture location /Users/user/Dropbox/Screenshot # 場所変更
$ defaults write com.apple.screencapture disable-shadow -boolean true # 影をなくす
$ defaults write com.apple.screencapture name mac # prefixの変更
$ defaults write com.apple.screencapture type jpg # 保存タイプの変更
$ killall SystemUIServer # 設定の反映
</code></pre>

<p>Prefixの変更がどちらの場合も効いてなくて<strong>スクリーンショット….</strong>という名前になってしまっている。</p>

<p>また、Dropbox内に<strong>Screenshot</strong>という英語の名前のディレクトリがあるにもかかわらず、この設定でも
<strong>スクリーンショット</strong>という日本語名のディレクトリに保存されてしまう。</p>

<p>どこかに<strong>日本語</strong><i class="fa fa-arrow-right"></i><strong>英語</strong>のエイリアスみたいのがあってそれを使ってる?</p>

<h2 id="システム環境設定">システム環境設定</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/04/16/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180416_setting_120_90.png" width="120" height="90" alt="20180416_setting_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/16/computer-mac/">Touch Bar付きmacOS High Sierraの設定</a></div></li></ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacでHomebrew関連のパッケージやアプリを整理した]]></title>
    <link href="https://rcmdnk.com/blog/2018/04/17/computer-mac-homebrew-brew-file/"/>
    <updated>2018-04-17T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/04/17/computer-mac-homebrew-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4478104565?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4478104565&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51J1FtFuMNL._SS200_.jpg" alt="人生を変える断捨離" /></a>
</div>

<p>新しいMacを設定する前に
余計なパッケージやアプリを入れないように
これまで使っていたMacでBrew-fileのリストを整理しました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#brewfileでの管理" id="markdown-toc-brewfileでの管理">Brewfileでの管理</a></li>
  <li><a href="#brewパッケージの整理" id="markdown-toc-brewパッケージの整理">brewパッケージの整理</a></li>
  <li><a href="#caskアプリの整理" id="markdown-toc-caskアプリの整理">caskアプリの整理</a></li>
  <li><a href="#app-storeのアプリの整理" id="markdown-toc-app-storeのアプリの整理">App Storeのアプリの整理</a></li>
  <li><a href="#整理結果" id="markdown-toc-整理結果">整理結果</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="brewfileでの管理">Brewfileでの管理</h2>

<p>Homebrewでインストールしたりするパッケージに関しては
Brew-fileを使ってBrewfileでリストを管理しています。</p>

<div class="github-widget" data-repo="rcmdnk/homebrew-file"></div>

<p>これのインストールは</p>

<pre><code>$ brew install rcmdnk/file/brew-file
</code></pre>

<p>で出来ます。
コマンドは<code>brew file &lt;subcommand&gt;</code>になります。</p>

<p>一方Homebrewには一応公式的な<code>bundle</code>というコマンドもあります。</p>

<div class="github-widget" data-repo="Homebrew/homebrew-bundle"></div>

<p>どちらもHomebrew関連(brew or cask, + Apple Storeアプリをmasで管理)で
いれたパッケージ/アプリをBrewfileに書き出したり、
Brewfileをもとにまとめてインストールしたりするコマンドです。</p>

<p>Brew-fileでは加えて</p>

<ul>
  <li><code>brew install</code>や<code>brew uninstall</code>時に自動的にBrewfileをアップデートする。</li>
  <li>GitHubのレポジトリなどを使って管理が出来る。他のマシンとの共用がやりやすい(dotfiles的な)。</li>
  <li>複数のファイル形式がある(bundleの出力も読み込める)。</li>
</ul>

<p>単にファイルにリストを書き出してそれをもとにインストールするだけなら、
<code>brew list</code>とかと簡単なシェルスクリプトでも出来てしまうことですが、
この辺の自動で管理することがしたくてBrew-fileを使っています。</p>

<h2 id="brewパッケージの整理">brewパッケージの整理</h2>

<p>これが一番やっかいですが、Homebrewでは
他のパッケージに依存しているものをインストールする際には
依存先のパッケージが入っていなければ自動的にインストールされます。</p>

<p>元のアンインストールする際にはそれらのパッケージはアンインストールされないので
長いこと使ってると使わないのに入ってるパッケージとかも結構あるはずです。</p>

<p>インストールした時に直接入れたのか何かの依存パッケージとして入ったのかは
去年、Homebrew導入された
<code>installed_on_request</code>/<code>installed_as_dependency</code>
という情報で見ることが出来ます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B000AXZCUU?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B000AXZCUU&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61VsA7nL8VL._SS90_CR0,0,120,90_.jpg" alt="We Get Requests" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/07/31/computer-mac-homebrew-brew-file/">Homebrewで直接インストールしたか依存関係でインストールされたか確認出来る様になった</a></div></li></ul>

<p>ただ、この指標が導入される前にインストールされたパッケージに関しては
これらの値が<code>true</code>とか<code>false</code>でなくて<code>null</code>になってるので
分からない場合もあります。</p>

<p>また、たとえば<code>python</code>とかは普通に入れたいものだったりするかもしれませんが、
自分で入れるよりも先に他のパッケージの依存として入っていると
<code>installed_on_request</code>が<code>false</code>になってることもあります。</p>

<p>なので、使うとしたら見覚えのないパッケージを調べて<code>installed_as_dependency</code>が<code>true</code>かどうか見る、と言った感じでしょうか。</p>

<p>一方で、現在インストールされてるパッケージの依存関係などは</p>

<pre><code>$ brew deps --tree --installed
...
vim
├── perl
├── ruby
│   ├── libyaml
│   ├── openssl
│   └── readline
└── python
    ├── gdbm
    ├── openssl
    ├── readline
    ├── sqlite
    │   └── readline
    └── xz
...
</code></pre>

<p>みたいな感じで確認することが出来ます。</p>

<p>さらに、どのパッケージからも依存されてないパッケージは</p>

<pre><code>$ brew leaves
</code></pre>

<p>というコマンドでリストを得る事ができます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/0399254978?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=0399254978&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31FmZwvavHL._SS90_CR0,0,120,90_.jpg" alt="Leaves" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/06/29/computur-mac-homebrew-brew-file/">Brew-fileにトップパッケージだけ残せるオプションを追加</a></div></li></ul>

<p>ここで出て来るリストで見慣れない物があったら</p>

<pre><code>$ brew info --json=v1 vim
[{"name":"vim","full_name":"vim","desc":"Vi 'workalike' with many additional features","homepage":"https://www.vim.org/","oldname":null,"aliases":["vim@8.0"],"versions":{"stable":"8.0.1600","bottle":true,"devel":null,"head":"HEAD"},"revision":0,"version_scheme":0,"installed":[{"version":"8.0.1600","used_options":["--with-lua"],"built_as_bottle":false,"poured_from_bottle":false,"runtime_dependencies":[{"full_name":"perl","version":"5.26.1"},{"full_name":"libyaml","version":"0.1.7"},{"full_name":"openssl","version":"1.0.2n"},{"full_name":"readline","version":"7.0.3"},{"full_name":"ruby","version":"2.5.0"},{"full_name":"gdbm","version":"1.14.1"},{"full_name":"sqlite","version":"3.22.0"},{"full_name":"xz","version":"5.2.3"},{"full_name":"python","version":"3.6.4"},{"full_name":"lua","version":"5.3.4"}],"installed_as_dependency":false,"installed_on_request":true}],"linked_keg":"8.0.1600","pinned":false,"outdated":false,"keg_only":false,"dependencies":["perl","ruby","python","gettext","lua","luajit","python@2"],"recommended_dependencies":["python"],"optional_dependencies":["gettext","lua","luajit","python@2"],"build_dependencies":[],"conflicts_with":["ex-vi"],"caveats":null,"requirements":[],"options":[{"option":"--with-override-system-vi","description":"Override system vi"},{"option":"--with-gettext","description":"Build vim with National Language Support (translated messages, keymaps)"},{"option":"--with-client-server","description":"Enable client/server mode"},{"option":"--with-python@2","description":"Build vim with python@2 instead of python[3] support"},{"option":"--with-lua","description":"Build vim with lua support"},{"option":"--with-tcl","description":"Build vim with tcl support"},{"option":"--without-python","description":"Build vim without python support"},{"option":"--with-luajit","description":"Build with luajit support"}],"bottle":{"stable":{"rebuild":0,"cellar":"/usr/local/Cellar","prefix":"/usr/local","root_url":"https://homebrew.bintray.com/bottles","files":{"high_sierra":{"url":"https://homebrew.bintray.com/bottles/vim-8.0.1600.high_sierra.bottle.tar.gz","sha256":"a119989b2ffa4f5fff6a5366923a0f5672c04185c865d0861262edbb3b89154a"},"sierra":{"url":"https://homebrew.bintray.com/bottles/vim-8.0.1600.sierra.bottle.tar.gz","sha256":"84ddf8ede3f4eb0ec0aa5ba0986a3d89b10811c48363f24616c376596047f82d"},"el_capitan":{"url":"https://homebrew.bintray.com/bottles/vim-8.0.1600.el_capitan.bottle.tar.gz","sha256":"0d3302bc827c3b07589d9f57e6067b53e7080d27ac9622069c11fdc4d4c1764f"}}}}}]
</code></pre>

<p>とかして<code>installed_on_request</code>が<code>true</code>かどうか確認します。</p>

<p>ちょっとわかりにくいので、もし<a href="https://stedolan.github.io/jq/">jq</a>コマンドとか入れてあれば</p>

<pre><code>$ brew info --json=v1 vim|jq '.[].installed[].installed_on_request'
true
</code></pre>

<p>と確認出来ます。
見慣れないものでこれが<code>false</code>なら何かのパッケージの依存で入れられてその元のパッケージは既に
アンインストールされたものなので既に要らないものになっていると思います。</p>

<p>そんな感じで<code>brew leaves</code>の結果を見ながら要らないものを削除していきますが、
削除時にそのパッケージだけが必要として入れられた依存先のパッケージも削除しないと
今度はそのパッケージが<code>breww leaves</code>の結果に出てきてまた削除する、みたいな面倒が起こります。</p>

<p>そこで、
<a href="https://github.com/beeftornado/homebrew-rmtree">rmtree</a>という<code>brew</code>のサブコマンドを導入して依存先のパッケージも同時に削除します。</p>

<p>インストール方法は</p>

<pre><code>$ brew tap beeftornado/rmtree
</code></pre>

<p>これで<code>brew rmtree</code>というサブコマンドが使える様になります。</p>

<p>実行すると</p>

<pre><code>$ brew rmtree vim
==&gt; Examining installed formulae required by vim...
 /
Can safely be removed
----------------------
vim
ruby
libyaml

Proceed?[y/N]:
</code></pre>

<p>こんな感じで依存先のパッケージも含めて一気に削除するかどうか聞かれます。
上の<code>deps</code>の結果から分かるように<code>vim</code>は他にもいくつかのパッケージに依存していますが、
それらは他のパッケージからも依存されているのでそういったパッケージはここには出てきません。</p>

<p>なので表示にもあるようにsafelyに消せるものだけを消すことが出来ます。</p>

<p>また、消す前に確認もされるので、この場合<code>ruby</code>は削除したくない、というのであれば
<code>N</code>を押して終了して</p>

<pre><code>$ brew uninstall vim libyaml
</code></pre>

<p>と必要ないものだけをアンインストールすることも出来ます。</p>

<p>こんな感じで、</p>

<ul>
  <li><code>brew leaves</code>の結果から必要ないものを<code>rmtree</code>で削除する。
    <ul>
      <li>良くわからないものは<code>brew info --json=v1</code>で確認。</li>
      <li><code>rmtree</code>の出力で残したいものがあれば個々に<code>uninstall</code>。</li>
    </ul>
  </li>
</ul>

<p>と言った作業を繰り返します。</p>

<p><code>installed_on_request</code>が<code>true</code>で無いものを一斉に削除したい場合は
Brew-fileの<code>clean_non_request</code>コマンドを使うことも出来ます。</p>

<pre><code>$ brew file clean_non_request
</code></pre>

<p>これだとdry runモードですが<code>leaves</code>なものでかつ<code>installed_on_request</code>が<code>true</code>で無いものを
リストしてくれます。
実際に全て<code>uninstall</code>したい場合は</p>

<pre><code>$ brew file clean_non_request -C
</code></pre>

<p>とします。</p>

<h2 id="caskアプリの整理">caskアプリの整理</h2>

<p><code>cask</code>で入れたアプリに関しては<code>cask list</code>に出てくるアプリで要らないものを削除するだけです。</p>

<p><code>brew cask uninstall</code>すればいいんですが、直接やってしまうと
通常は設定ファイルとかは残ったままになります。</p>

<p>ごみも残したくない場合は
<a href="https://freemacsoft.net/appcleaner/">AppCleaner</a>
とかを使って直接削除した後
<code>brew cask uninstall</code>を行います。</p>

<p>また、Brew-fileの<code>casklist</code>機能を使ってインストールされているアプリの中で
<code>cask</code>でインストールできるけど直接インストールされたもの、などを探します。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4150736049?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4150736049&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61NK6E4FJHL._SS90_CR0,0,120,90_.jpg" alt="樽 (ハヤカワ・ミステリ文庫)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/03/09/computer-mac-homebrew/">Brew-fileのcasklistコマンドの改善</a></div></li></ul>

<p>もしあれば<code>cask</code>でインストールをし直します。</p>

<p>また、<code>cask</code>もなく、App Storeやシステムアプリでも無いもので直接インストールしたものがあれば
<code>cask</code>の自作も可能な限り行います。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B004BED8V4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B004BED8V4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41NKOYyTRkL._SS90_CR0,0,120,90_.jpg" alt="CASKダーツ LOVERS" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/05/13/computer-mac-homebrew/">Homebrew Caskのアップデート等</a></div></li></ul>

<p>整理している時に、<code>brew uninstall</code>を行っても<code>brew cask list</code>に残り続ける
アプリが出てくる事がありますが、これは
<strong>/usr/local/Caskroom/</strong>にアプリ名のディレクトリが残っていて
中身はすでに削除されてる様な状態です。(上の記事参照。)</p>

<p><strong>/usr/local/Caskroom/</strong>にあるディレクトリを調べて中身が無いディレクトリは
何らかの不具合で残ってしまったゴミなので直接ディレクトリを削除してします。</p>

<p>どうもCaskの名前が変わったり他のアプリとまとめてインストールされる様になったりした際に
元のCaskのディレクトリが空のまま残ってしまったりするようです。</p>

<p>当然新しいマシンで<code>brew cask install</code>しようとするとエラーが出るので
きちんと削除しておいた方が良いです。</p>

<h2 id="app-storeのアプリの整理">App Storeのアプリの整理</h2>

<p>Brew-fileでは
<a href="https://github.com/mas-cli/mas">mas</a>
コマンドを使ってApp Storeのアプリも管理できます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4150736049?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4150736049&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61NK6E4FJHL._SS90_CR0,0,120,90_.jpg" alt="樽 (ハヤカワ・ミステリ文庫)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/03/09/computer-mac-homebrew/">Brew-fileのcasklistコマンドの改善</a></div></li></ul>

<pre><code>$ mas list
</code></pre>

<p>とすればApp Store経由で入れたアプリ一覧が出るので必要ないものを削除。</p>

<p>今回は無駄に数GBの容量を食っているGrageBandを削除しました。
楽曲を作れるアプリでmacOSでもiOS(iPhone)でも最初から入ってるアプリですが
ほとんどの人は使わないままただただディスクを使われてるものだと思います。(そして意外と大きい。。。)</p>

<p><a href="https://freemacsoft.net/appcleaner/">AppCleaner</a>
を使って削除しましたが
それ以外にもゴミが残ってる可能性があるので以下も参照。</p>

<blockquote>
  <p><a href="http://smallbusiness.chron.com/delete-garageband-mac-29847.html">How to Delete “GarageBand” from My Mac  Chron.com</a></p>
</blockquote>

<p>私の環境では一度も使ったことが無かったからか、上の記事にある<strong>Audio</strong>の中のファイル等は一切ありませんでした。
(あったとしてもAppCleanerが見つけてくれるかもしれません。)</p>

<p>まあ、これに関してはここで削除しても新しい環境では最初からインストールされているので
新しい環境では手でアンインストールするか、
<code>brew file init</code>する前に<code>brew file clean -C</code>する必要があります。</p>

<h2 id="整理結果">整理結果</h2>

<p>整理した結果以下の様に減りました。</p>

<ul>
  <li>brew package: 158<i class="fa fa-arrow-right"></i>98</li>
  <li>cask application: 60<i class="fa fa-arrow-right"></i>55</li>
  <li>App Store: 16<i class="fa fa-arrow-right"></i>12</li>
</ul>

<p><code>brew leaves</code>で出てくるのは58個ほど。
もうちょっと減らせる感もありますが、無理して消すほどでもないのでこの程度でいいかな、と。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brew-fileでの記述順の整理]]></title>
    <link href="https://rcmdnk.com/blog/2017/10/11/computer-brew-file/"/>
    <updated>2017-10-11T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2017/10/11/computer-brew-file</id>
    <content type="html"><![CDATA[<p>Brew-fileで書き出すBrewfileのFormula等の書き出し順を
整理して出す様にしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#brew-fileでの記述順の整理" id="markdown-toc-brew-fileでの記述順の整理">Brew-fileでの記述順の整理</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="brew-fileでの記述順の整理">Brew-fileでの記述順の整理</h2>

<div class="github-widget" data-repo="rcmdnk/homebrew-file"></div>

<p>これまでは結構ばらばらで、
特に<code>--leaves</code>を付けると順番が前後したりすることもあったりしましたが
書き出し時に整理してから書き出すようにしました。</p>

<p>現在は公式なFormulaも<strong>homebrew/core</strong>をタップして使う様になってるので、
まずは<strong>homebrew/core</strong>に関して、
次は<strong>homebrew/</strong>に関して、
次に<strong>caskroom/cask</strong>に関して、
その次に<strong>caskroom/</strong>に関して、
後はその他、という感じで書き出します。</p>

<p>それぞれの項目についてはアルファベット順でソート。</p>

<pre><code>tap homebrew/core
brew ant
...

tap homebrew/x11
...

tap caskroom/cask
cask imageoptim
...

tap caskroom/fonts
cask font-hack-nerd-font
...

tap rcmdnk/file
brew brew-file
...
</code></pre>

<p>な感じ。</p>

<p>特にBrewfileをGitHubを使って管理している様な場合、
今後は履歴が今までより綺麗になるはずです。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brew-file用Brewfileのデフォルト置き場を~/.config/へ変更]]></title>
    <link href="https://rcmdnk.com/blog/2017/09/28/computer-mac-homebrew-brew-file/"/>
    <updated>2017-09-28T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2017/09/28/computer-mac-homebrew-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4879664251?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4879664251&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/514mvpJq1fL._SS200_.jpg" alt="はじめてのCONFIG.SYS (はじめての…シリーズ)" /></a>
</div>

<p>最近色々なコマンドが<strong>~/.config</strong>の中に設定ファイルとかを入れる様になってきて、
確かにHOMEを汚さ無いのは良いな、と思ったので
Brew-fileでも<strong>~/.config</strong>を使う様にしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#brew-file用brewfileのデフォルト置き場" id="markdown-toc-brew-file用brewfileのデフォルト置き場">Brew-file用Brewfileのデフォルト置き場</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="brew-file用brewfileのデフォルト置き場">Brew-file用Brewfileのデフォルト置き場</h2>

<p>もともとHomebrewがインストールされる<strong>/usr/local/</strong>に置いたりもしてましたが
色々問題があったので<strong>~/.brewfile/</strong>の下に置くようにしていました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B005G73D1U?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B005G73D1U&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31FWRehx0fL._SS90_CR0,0,120,90_.jpg" alt="鍵の置き場所に♪キープット【Key Put】メープル" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/12/17/computer-homebrew-brew-file-mac/">Brew-fileのBrewfileのデフォルト置き場を変更</a></div></li></ul>

<p>これを今回の変更で<strong>/.config/brewfile/Brewfile</strong>が
デフォルトのBrewfile置き場になります。</p>

<p>レポジトリを使って管理してる場合には
<strong>/.config/brewfile/</strong>の中にレポジトリがcloneされます。</p>

<p>ただし、<strong>/.config/brewfile/Brewfile</strong>がまだ無くて、
<strong>~/.brewfile/Brewfile</strong>がある場合はそちらを使うので
今までと同じ置き場でよければそのまま使うことが出来ます。</p>

<p>変更したい場合には</p>

<pre><code>$ mkdir -p ~/.config
$ mv ~/.brewfile ~/.config/brewfile
</code></pre>

<p>みたいな感じで移動してもらえればそちらを使う様になります。</p>

<p>他の場所にしたい場合には</p>

<pre><code>export HOMEBREW_BREWFILE=~/Dropbox/Brewfile
</code></pre>

<p>みたいな感じに<code>HOMEBREW_BREWFILE</code>の値を<strong>.bashrc</strong>/<strong>.zshrc</strong>などで
指定しておけばそれを使う様になります。
(レポジトリを使う場合には基本的に<strong>Brewfile</strong>があるディレクトリにcloneされます。)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrewで直接インストールしたか依存関係でインストールされたか確認出来る様になった]]></title>
    <link href="https://rcmdnk.com/blog/2017/07/31/computer-mac-homebrew-brew-file/"/>
    <updated>2017-07-31T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2017/07/31/computer-mac-homebrew-brew-file</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B000AXZCUU?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B000AXZCUU&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61VsA7nL8VL._SS200_.jpg" alt="We Get Requests" /></a>
</div>

<p>MacでHomebrewを使ってパッケージを管理していると
インストールした覚えの無いパッケージも大量に入っている事がありますが、
それはインストールしようとしたパッケージが必要とするモジュールなどを含むパッケージを自動でインストールしてくれているからです。</p>

<p>パッケージのリストを管理したい時にこういった依存先のパッケージも全て記録していくと
後々元のパッケージが要らなくなっても残ってしまったりします。</p>

<p>Homebrewでは最近パッケージのインストール時に直接インストールされたのか、
依存関係によってインストールされたのか確認出来る様なフラッグが導入されました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#installed_on_requestinstalled_as_dependency" id="markdown-toc-installed_on_requestinstalled_as_dependency">installed_on_request/installed_as_dependency</a></li>
  <li><a href="#brew-fileでの取扱" id="markdown-toc-brew-fileでの取扱">brew-fileでの取扱</a></li>
  <li><a href="#leavesとの違い" id="markdown-toc-leavesとの違い">leavesとの違い</a></li>
  <li><a href="#必要のないパッケージの削除" id="markdown-toc-必要のないパッケージの削除">必要のないパッケージの削除</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="installed_on_requestinstalled_as_dependency">installed_on_request/installed_as_dependency</h2>

<p>Homebrewでインストールされたパッケージを確認するには通常
<code>brew list</code>としますが、これだと全てのインストールされたパッケージが表示されます。</p>

<p>直接インストールされたのか、依存関係によってインストールされたのか
を確認するには</p>

<pre><code>$ brew info --json=v1 &lt;package&gt;
</code></pre>

<p>を使います。</p>

<pre><code>$ brew info --json=v1 brew-file|jq .
[
  {
    "name": "brew-file",
    "full_name": "rcmdnk/file/brew-file",
    "desc": "Brewfile manager for Homebrew.",
    "homepage": "https://github.com/rcmdnk/homebrew-file/",
    "oldname": null,
    "aliases": [],
    "versions": {
      "stable": "4.2.0",
      "bottle": false,
      "devel": null,
      "head": "HEAD"
    },
    "revision": 0,
    "version_scheme": 0,
    "installed": [
      {
        "version": "4.2.0",
        "used_options": [],
        "built_as_bottle": false,
        "poured_from_bottle": false,
        "runtime_dependencies": [],
        "installed_as_dependency": false,
        "installed_on_request": true
      }
    ],
    "linked_keg": "4.2.0",
    "pinned": false,
    "outdated": false,
    "keg_only": false,
    "dependencies": [],
    "recommended_dependencies": [],
    "optional_dependencies": [],
    "build_dependencies": [],
    "conflicts_with": [],
    "caveats": null,
    "requirements": [],
    "options": [
      {
        "option": "--without-completions",
        "description": "Disable bash/zsh completions"
      }
    ],
    "bottle": {}
  }
]
</code></pre>

<p>こんな感じでJSON形式でパッケージの情報がとってこれます<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p>この中の<code>installed</code>の項目にある
<code>installed_as_dependency</code>/<code>installed_on_request</code>というのが
最近導入された値です。</p>

<p><code>installed_as_dependency</code>が<code>true</code>なら他のパッケージが依存するものとしてインストールされたものになります。
<code>installed_on_request</code>が<code>true</code>なら直接<code>brew install &lt;package&gt;</code>でインストールされたものになります。</p>

<p>通常はこれらはどちらかが<code>true</code>でどちらかが<code>false</code>と反対になっているはずですが、
一部、両方<code>true</code>だったりするものもあってちょっと良く分かりません。
(ただのバグか、導入の段階でちょっと混乱が起きてるのか。。。?)</p>

<p>また、この値が導入されたのは最近(6月中旬頃<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>)なので
それ以前にインストールされたパッケージについては
これらの値は<code>null</code>になっています。</p>

<p>これらの値を更新するには<code>reinstall</code>などする必要があります。</p>

<h2 id="brew-fileでの取扱">brew-fileでの取扱</h2>

<div class="github-widget" data-repo="rcmdnk/homebrew-file"></div>

<p>そもそもこの情報はbrew-fileのIssuesでこれ使えないか、と教えてもらったもので
実際にこれらの情報を使える様にしてみました。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/homebrew-file/issues/75">Use new <code>installed_on_request</code> and <code>installed_as_dependency</code> flags · Issue #75 · rcmdnk/homebrew-file</a></p>
</blockquote>

<p><code>brew file init</code>に新しく<code>--on_request</code>というオプションを追加して</p>

<pre><code>$ brew file init --on_request
</code></pre>

<p>とすると、<code>installed_on_request</code>が<code>true</code>のものだけをBrewfileに書き出す様になります。</p>

<p>もしくは環境変数で</p>

<pre><code>export HOMEBREW_BREWFILE_ON_REQUEST=1
</code></pre>

<p>と設定しておくと常に<code>--on_request</code>を付加している状態になります。</p>

<p>ただし、まだこの値が<code>null</code>のものもあるのでそういったものに関してはそのまま書き出す様にしています。</p>

<p>なので今現在<code>--on_request</code>をしてもほとんどのパッケージが書き出されてしまう可能性がありますが
今後徐々に値が入っているパッケージが増えていくので徐々に使える様になるはずです。</p>

<h2 id="leavesとの違い">leavesとの違い</h2>

<p>以前、これに近いことを<code>brew leaves</code>の出力を使ってやっていました。
<code>brew leaves</code>はどのパッケージからも依存されていないパッケージだけを表示するコマンドです。</p>

<pre><code>$ brew file init --leaves
</code></pre>

<p>もしくは環境変数で</p>

<pre><code>export HOMEBREW_BREWFILE_LEAVES=1
</code></pre>

<p>としておくとこの<code>brew leaves</code>の結果だけを書き出す様になります。</p>

<p>この<code>leaves</code>を使う問題点としては、
例えば<code>go</code>を必要として最初にインストールした場合、
他の<code>go</code>に依存したパッケージを後からインストールすると
<code>go</code>は<code>brew leaves</code>に残らなくなります。</p>

<p>これだと困るのでとりあえずの処置として</p>

<pre><code>export HOMEBREW_BREWFILE_TOP_PACKAGES=go,coreutils
</code></pre>

<p>の様に環境変数で設定しておくとこれらのパッケージは常に書き出すことが出来る様にしています。</p>

<p>ただし、逆に何かの依存関係でインストールされたものも
その親のパッケージがアンインストールされると今度はそれが<code>leaves</code>として残る様になってしまいます。
これらは正直いらないパッケージなのですがこれまでだと自分でそのパッケージを判断する以外に確認のしようがありませんでした。</p>

<p>これらを解決してくれるのが上の<code>installed_on_request</code>などの値で、
実際にインストール時に値が振られるので
その後親のパッケージの削除などに左右される事無く値を見ることが出来ます。</p>

<p>今の自分の環境で調べてみると</p>

<ul>
  <li>全てのパッケージ: 223</li>
  <li>leaves: 127</li>
  <li>on_request (null含む): 210</li>
</ul>

<p>となっています。
<code>null</code>なものが多いのでほとんどのパッケージが書き出されている状態ですが、
全ての値が埋まれば大体同じ数になるはずで、
違いは</p>

<ul>
  <li><code>on_request</code>だけど後から入れたパッケージが依存している場合(<code>on_request</code>のみに載る)、</li>
  <li><code>as_dependency</code>だけど親のパッケージがアンインストールされた場合(<code>leaves</code>のみに載る)</li>
</ul>

<p>になります。</p>

<h2 id="必要のないパッケージの削除">必要のないパッケージの削除</h2>

<p>その様な確認が出来る様になったので、何かのパッケージの依存パッケージとしてインストールされたものの、
親のパッケージがアンインストールされて最早不要になったパッケージを削除する事も出来ます。</p>

<p>brew-fileを使えば</p>

<pre><code>$ brew file clean_non_request
brew uninstall unixodbc

###########################################
# This is dry run.
# If you want to enforce cleanup, use '-C':
#     $ brew-file clean_non_request -C
###########################################
</code></pre>

<p>とすることでその様なパッケージを探すことが出来ます。</p>

<pre><code>$ brew file clean_non_request -C
</code></pre>

<p>とするとそれらのパッケージを実際に削除します。</p>

<h2 id="まとめ">まとめ</h2>

<p>Homebrewは未だにかなりアクティブに更新があって
細かな情報確認も出来る様になってきています。</p>

<p>なかなか全部追うのは大変ですが、まだ気付いてない機能もありそうなので
暇があったらちょっとずつ見ていきたいと思います。</p>
]]></content>
  </entry>
  
</feed>
