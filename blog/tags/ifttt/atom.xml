<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: IFTTT | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/ifttt/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T10:06:03+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Withingsのスマート睡眠パッド:Withings Sleepを使い始めた]]></title>
    <link href="https://rcmdnk.com/blog/2020/05/15/computer-iot-shopping/"/>
    <updated>2020-05-15T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/05/15/computer-iot-shopping</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B7KVTS9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7KVTS9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/81XXJgLHVkL._SS200_.jpg" alt="Withings フランス生まれのスマート睡眠パッド 睡眠サイクル分析 心拍計測 Sleep IFFFT対応【日本正規代理店品】 WSM02-ALL-JP" /></a>
</div>

<p>Withingsの体重計を使い始めてちょっと気になっていた
睡眠パッド、Withings Sleepを買って使い始めてみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#withings" id="markdown-toc-withings">Withings</a></li>
  <li><a href="#スマート体重計" id="markdown-toc-スマート体重計">スマート体重計</a></li>
  <li><a href="#withings-sleep" id="markdown-toc-withings-sleep">Withings Sleep</a></li>
  <li><a href="#実際に測ってみて" id="markdown-toc-実際に測ってみて">実際に測ってみて</a></li>
  <li><a href="#ifttt連携" id="markdown-toc-ifttt連携">IFTTT連携</a></li>
  <li><a href="#他の睡眠測定手段" id="markdown-toc-他の睡眠測定手段">他の睡眠測定手段</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="withings">Withings</h2>

<p><a href="https://www.withings.com/">Withings</a>はフランスのIoTなどを開発販売している会社で
Wi-Fi接続できる体重計をいち早く販売していた会社です。</p>

<p>一時期Nokiaに買収されたしてましたがまた独立しています。</p>

<p>ここではスマート体重計を始め、スマートウォッチ、睡眠を見るスマートスリープ、スマート体温計、スマート血圧計、なども作っています。</p>

<h2 id="スマート体重計">スマート体重計</h2>

<p>先日ここの体重計を買いました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B4TRQ3G?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B4TRQ3G&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71FI0z8gdzL._SS90_CR0,0,120,90_.jpg" alt="Withings Body Cardio フランス生まれのスマート体重計 ブラック Wi-Fi/Bluetooth対応 心臓の健康チェック&amp;体組成計 【日本正規代理店品】 WBS04-BLACK-ALL-ASIA" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2020/03/08/life-shopping/">ワイヤレスリンク対応体重計: Withings Body Cardio (Wi-Fi)への移行</a></div></li></ul>

<p>スマート体重計は日本のメーカーも沢山出してるんですが、
Wi-Fiに対応してるのは今は殆どない状態です。
一時期対応していた所も撤退しています。</p>

<p>恐らくクラウド経由での管理になるので、そのクラウドサーバーの管理のコストか、
管理そのものが上手く出来ないからなんだと思います。</p>

<p>唯一エレコムが出してますが、今後の事も考えるといつ撤退するかわからないし、
アプリも微妙、ということで、長いこと使い続けるなら
長年の実績があるWithingsが良いかな、と思って買いました。</p>

<p>しばらく使ってますがかなり良いです。
ただ乗るだけで色々測れて毎日勝手にデータが溜まりスマホのアプリでもPCからでも見ることが出来ます。</p>

<p>最初、ちょっと乗るのにコツがいる(というか体重が偏っているという三角マークの方向を逆に捉えてた)
状態でしたが慣れれば特に計測時間も気にならないです。</p>

<p>以前のSDカード版では殆どPCにデータ移すことなかったですし、
Bluetooth版だとしても毎回そこまでスマホ持っていってスタンバイするのは多分してなかった。</p>

<p>ということで、Withingsの商品に満足していた所、
睡眠の計測ができるものもあったのでほしいな、と思ってたんですが今回買ってみました。</p>

<h2 id="withings-sleep">Withings Sleep</h2>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B7KVTS9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7KVTS9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/81XXJgLHVkL._SS200_.jpg" alt="Withings フランス生まれのスマート睡眠パッド 睡眠サイクル分析 心拍計測 Sleep IFFFT対応【日本正規代理店品】 WSM02-ALL-JP" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07B7KVTS9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7KVTS9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Withings フランス生まれのスマート睡眠パッド 睡眠サイクル分析 心拍計測 Sleep IFFFT対応【日本正規代理店品】 WSM02-ALL-JP</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07B7KVTS9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7KVTS9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWithings+Sleep%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWithings+Sleep%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>スマート睡眠パッド、というもの。1万5千円位。</p>

<p>マットレスの下に敷いておいて、寝ると自動で睡眠時間や
睡眠の質などを測ってくれます。</p>

<p>測定値はWi-Fiで自動でクラウドに同期します。</p>

<p>対応するマットレスの厚さは10cm~40cmということですが、
一応ある程度厚い布団なら使えないことはないみたいです。
余り薄いとこれが気になって眠れなくなるかも。</p>

<p>あと、寝てるかどうか、とかをパッドにかかっている重みで
測ったりしていて、昼間の寝てない時に定期的に寝てない状態、を計測して校正するらしく
布団を毎回仕舞う様だとそれが出来ずに上手く計測出来ない場合があります。</p>

<p>これはマットレスでも仕舞うようなものだと同じですが。</p>

<p>実際、毎日じゃないですがたまに昼間ガーガー突然鳴ってたりします。
(一番最初に付けた時にも鳴ります。)</p>

<p>うちはベッドの上に10cmほどのマットレスを敷いてますが
多分良い感じに測れてます。</p>

<p>測れるものは</p>

<ul>
  <li>睡眠スコア
    <ul>
      <li>睡眠時間</li>
      <li>(睡眠の)深さ(そのサイクル)</li>
      <li>(過去の睡眠から見る)規則性</li>
      <li>睡眠の中断回数</li>
      <li>眠るまでの時間</li>
      <li>眠るまでの時間</li>
    </ul>
  </li>
  <li>心拍数</li>
  <li>呼吸の乱れ</li>
  <li>いびき</li>
</ul>

<p>といったところ。</p>

<p>後、最近ヨーロッパの方では睡眠時無呼吸検出機能、というのが追加されたらしいです。
日本だとまだですが、医療認可とかが必要とからしく
後、最近ヨーロッパの方では睡眠時無呼吸検出機能、というのが追加されたらしいです。
日本だとまだですが、医療認可とかが必要とからしくちょっと先ですが数週間以内には世界の他の地域でも提供予定だとか。</p>

<h2 id="実際に測ってみて">実際に測ってみて</h2>

<p>まず、10cmほどのマットレスでの使用感ですが、
下に何か敷いている、という感じは全くしません。</p>

<p>睡眠時間、ですが、ベッドに入ってから出るまで、に加えて実際に
寝ていた状態やその状態も計測してくれます。</p>

<p>寝るまでの時間、というのは正直自分でもわからないのですが、
結構幅があって10分から1時間ほど。まあ実際その位差があってもおかしくは無い気はします。</p>

<p>ただ、起きるまでの時間、というのが毎日ほぼゼロで、
起床時間、はベッドを出たタイミングになっています。
が、朝布団の中でしばらくスマホいじってる時もあったのでちょっと正確でない?</p>

<p>そのうちの一回は中断回数が1になっていて、朝方10分ほど一回中断してまた寝て、みたいな感じのときがありましたが、
このときはベッドの中でうだうだしている状態でした。
多分、起きてしばらく携帯いじりながらゴソゴソした後、
少し静かに携帯見てたんだと思います。</p>

<p>アプリのこの計測欄に<strong>より良い朝を迎えるために</strong>という欄があって、</p>

<ul>
  <li>これから始まる1日に感謝しましょう。</li>
  <li>携帯電話遊びで1日を始めないでください。</li>
  <li>目が冷めたらすぐに起きましょう。</li>
</ul>

<p>と言われてるのでそうしましょう(できない。。。)</p>

<p>睡眠サイクルは<strong>とても浅い眠り</strong>、<strong>浅い眠り</strong>、<strong>深い眠り</strong>に分けられていて、
<strong>とても浅い眠り</strong>がレム睡眠、<strong>深い眠り</strong>がノンレム睡眠です。
<strong>浅い眠り</strong>というのも多分レム睡眠だと思いますが。</p>

<p>アプリでの説明だと、中間の<strong>浅い眠り</strong>というのが
生理学的には重要だが回復は最小、で簡単に目が覚めやすい状態、とのこと。</p>

<p>各睡眠が<strong>とても浅い眠り</strong>が20%以上、<strong>深い眠り</strong>が25%以上だと良い睡眠となるようです。</p>

<p>上の画像にある薄い水色が<strong>とても浅い眠り</strong>、水色が<strong>浅い眠り</strong>、青が<strong>深い眠り</strong>に当たり、あんな感じでグラフにしてくれます。</p>

<p>グラフの感じは結構荒目ですが、そこまで正確性を求めるものでもないので大体わかればよいか、という感じなので十分かな、と。</p>

<p>何日か計測してみましたが<strong>深い眠り</strong>が大体10%代で余り良くない感じ。。。</p>

<p>ちょっとアプリ(Health Mate)で不満なところが睡眠時間のグラフが
週毎にしか見れないこと。
(<a href="https://healthmate.withings.com/">Web版</a>でも同じ。)</p>

<p>一月全体で見ようとすると各日が良かったかどうか、の印のカレンダーだけしか見れません。
簡単にできそうなものなのになぜしないのか。。。?</p>

<p>ただ、これに関してはGoogle FitかApple Healthと連携すると
そちらで1ヶ月まとめて見ることが出来まるので一応。</p>

<blockquote>
  <p><a href="https://support.withings.com/hc/ja/articles/204988697-Partner-Apps-Google-Fit-%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%A8-Withings-%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%A8%E3%82%92%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%99%E3%82%8B">Partner Apps - Google Fit アカウントと Withings アカウントとをリンクする – Withing</a></p>
</blockquote>

<blockquote>
  <p><a href="https://support.withings.com/hc/ja/articles/203728916-Partner-Apps-Withings-%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88-%E3%81%A8-Apple-Health-%E3%81%AE%E3%83%AA%E3%83%B3%E3%82%AF">Partner Apps - Withings アカウント と Apple Health のリンク – Withing</a></p>
</blockquote>

<p>Google Fitの方だとHealth Mate同様な何時から何時、という浮動棒グラフに加え、
単純に毎日の長さの棒グラフも見れて便利だったりします。</p>

<p>改めて睡眠時間(ベッドの上にいる時間)をグラフで見てみると
結構ひどくバラバラで良くなくないな、と思い知らされました。。。</p>

<p>心拍数は大体眠るときが70~80bpmで最小50位になって起きる時に70bpm位、となってました。
これは結構正確?</p>

<p>呼吸の乱れやいびきは特に問題が出るレベルではなかったらしくて一安心。
(正確であってほしい。。。)</p>

<p>こんな感じで睡眠情報を後から見れるというのは思った以上に面白いな、と思いました。
それも自動でモニターできるというのが良いところ。
いびき測定とかだと寝る前後で設定して、とかありますが、
睡眠なのでその前後でなにかする、というのは非常に不便なので。</p>

<p>それこそ眠るまでの時間、とかは自分では測りようがないですし。</p>

<p>睡眠時刻の不規則性を自分で見ると治そうという気が(少しは)起こります。</p>

<p>後、今後ちょっと体調が悪くなったときとかに直近の睡眠状況とか見ると
やっぱりな、と思うこともあるかもしれません。</p>

<p>なんにしろセットさえしてしまえば後は勝手に測ってくれてくので、
体重計よりも便利です。</p>

<h2 id="ifttt連携">IFTTT連携</h2>

<p>そんなWithings Sleepですが、睡眠計測以外に、寝たとき、起きた時をトリガーにして
家電操作とかも出来ます。</p>

<p>実際にはベッドに入ったとき、とベッドから起き上がったとき、になりますが、
それらをトリガーとしてIFTTTを使って司令を出せます。</p>

<blockquote>
  <p><a href="https://ifttt.com/WithingsSleep">Withings Sleep works better with IFTTT</a></p>
</blockquote>

<p>IoTといえばIFTTT。</p>

<p>これで、Nature Remoとか使っていれば
ベッドに入ったら自動で電気を消して、
起きたら電気を付ける、とかも出来る様になります。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0792PG3S9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0792PG3S9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61gEsO54W%2BL._SS90_CR0,0,120,90_.jpg" alt="Echo Dot 第3世代 - スマートスピーカー with Alexa、チャコール" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/09/life-iot/">住まいのIoT化計画</a></div></li></ul>

<p>まだ来てないけど起きたらカーテン開ける、も入れたい。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/10/24/life-iot/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20191024_switchbotcurtain_120_90.jpg" width="120" height="90" alt="20191024_switchbotcurtain_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/10/24/life-iot/">SwitchBotの自動カーテン開閉マシンを申し込んだ</a></div></li></ul>

<p>ベッドに入ったら、なのでベッドの上で本読もう、とかするとあれですが、
寝るだけにしている状態だと結構便利です。</p>

<p>最近は寝る時にGoogleにお願いしてたのがそれを発声する必要がなくなりました。</p>

<p>なにより自分の行動に合わせて勝手にやってくれてる感が心地良いです。</p>

<h2 id="他の睡眠測定手段">他の睡眠測定手段</h2>

<p>同じ様なものをタニタが出しています。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B071R37VG4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B071R37VG4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51HfPqgn%2B4L._SS200_.jpg" alt="タニタ 睡眠計 WI-FI スリープスキャン SL-511-WF2 睡眠の質をデータ管理 日本製" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B071R37VG4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B071R37VG4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">タニタ 睡眠計 WI-FI スリープスキャン SL-511-WF2 睡眠の質をデータ管理 日本製</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B071R37VG4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B071R37VG4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E3%82%BF%E3%83%8B%E3%82%BF+%E7%9D%A1%E7%9C%A0%E8%A8%88+%E3%82%B9%E3%83%AA%E3%83%BC%E3%83%97%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3+%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E3%82%BF%E3%83%8B%E3%82%BF+%E7%9D%A1%E7%9C%A0%E8%A8%88+%E3%82%B9%E3%83%AA%E3%83%BC%E3%83%97%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3+%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>ただ、4万円ほどと結構高く、またWi-Fiでクラウド同期するには
月額有料サービスの「からだカルテ」を使わないといけません。
(最初の3年とかはただらしいですが。)</p>

<p>測定の質や、体重計との連携結果を見てのカルテの結果がもしかしたら質が高いものが
あったりするかもしれませんが、
スマート家電と考えてデータ管理やIFTTT連携とかを考えるとWithings Sleepかな、と。</p>

<p>日本製でデモとか見ても薄い布団で使ってたりするので、
Withings Sleepだと使えない薄い布団で使える、という利点があるかもしれません。
(Withings Sleepが厚さ5mmなのに対してタニタのは2mm。)</p>

<p>としてはブレスレッド型、時計型のものもあります。</p>

<p>Withingsもおしゃれな感じのを出してます。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0711Z1Q56?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0711Z1Q56&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71sQtyKdWyL._SS200_.jpg" alt="Withings Steel HR フランス生まれのスマートウォッチ 心拍&amp;アクティビティモニター(36mmモデル) ブラック 【日本正規代理店品】 HWA03-36BLACK-ALL-JP" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B0711Z1Q56?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0711Z1Q56&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Withings Steel HR フランス生まれのスマートウォッチ 心拍&amp;アクティビティモニター(36mmモデル) ブラック 【日本正規代理店品】 HWA03-36BLACK-ALL-JP</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B0711Z1Q56?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0711Z1Q56&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWithings+Steel+HR+%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWithings+Steel+HR+%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>あと、有名どころだとFitbitとか。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B06Y2ZRYBX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B06Y2ZRYBX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61HFZnAN0UL._SS200_.jpg" alt="Fitbit AltaHR フィットネストラッカー BlueGray L [日本正規品] FB408SGYL-CJK" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B06Y2ZRYBX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B06Y2ZRYBX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Fitbit AltaHR フィットネストラッカー BlueGray L [日本正規品] FB408SGYL-CJK</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B06Y2ZRYBX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B06Y2ZRYBX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FFitbit+AltaHR%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FFitbit+AltaHR%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>色々あるんですが、個人的には、まず、寝てる時に腕に何か付けたままにするのが好きではないので使えないかな、と思ってます。
こういうのだと、日中の記録も取れて、使ってみたいな、とは思うんですが、
日中もパソコンとか使ってると腕時計も邪魔になって外して、とか良くするんで
多分付けっぱなしに出来ないかと。</p>

<p>ジョギングとかの記録を取りたい、というのであればありかな、とは思うんですが。</p>

<p>そもそも、普段色々腕時計を付けたいのでこういうのに囚われたくない。。。</p>

<p>これらは最低1万円位するものですが、
オムロンがねむり時間計、という1000円を切るものを出しています。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01HCY0C8Q?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01HCY0C8Q&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31E9pxqAoIL._SS200_.jpg" alt="オムロン ねむり時間計 レッド HSL-004T-R" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B01HCY0C8Q?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01HCY0C8Q&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">オムロン ねむり時間計 レッド HSL-004T-R</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B01HCY0C8Q?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01HCY0C8Q&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E3%82%AA%E3%83%A0%E3%83%AD%E3%83%B3+%E3%81%AD%E3%82%80%E3%82%8A%E6%99%82%E9%96%93%E8%A8%88+HSL-004T-R%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E3%82%AA%E3%83%A0%E3%83%AD%E3%83%B3+%E3%81%AD%E3%82%80%E3%82%8A%E6%99%82%E9%96%93%E8%A8%88+HSL-004T-R%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>手のひらサイズでベッドの体の近くに置いておく、というもの。</p>

<p>特に面白いのが起きる<strong>時間帯</strong>を指定しておくと、睡眠のなかで
起きやすいタイミングでアラートを鳴らしてくれる、というもの。</p>

<p>データ同期はスマホとのBluetoothで朝転送作業しないといけないのがちょっとネック。</p>

<p>ただ安いですし、良い感じの時に起こしてくれる目覚まし、として買ってみるのはありかも、と思ってます。</p>

<p>なんか頑張ればスマホのアプリだけでもできそうな感じもしないでもないですが、
と思ったらそれっぽいものもありました。</p>

<div class="app-box">
  <div class="app-img">
  <a href="//itunes.apple.com/jp/app/id599456380?at=10lc94" rel="nofollow" target="_blank"><img src="http://is3.mzstatic.com/image/thumb/Purple123/v4/8c/8b/60/8c8b60fb-c10d-9124-475b-b861583d30bc/AppIcon-1x_U007emarketing-0-5-0-0-85-220.png/200x200bb.jpg" alt="Sleep Meister - 睡眠サイクルアラームLite" /></a>
</div>

  <div class="app-title">
    <a href="//itunes.apple.com/jp/app/id599456380?at=10lc94" rel="nofollow" target="_blank">Sleep Meister - 睡眠サイクルアラームLite</a>
  </div>
  <div class="app-developer">
    デベロッパ: <a href="https://apps.apple.com/jp/developer/naoya-araki/id435849505" target="_blank" rel="nofollow">Naoya Araki</a>
  </div>
  <div class="app-price">無料</div>
  <div class="app-links">
    <span class="itunes-link"><a href="//itunes.apple.com/jp/app/id599456380?at=10lc94" target="_blank" rel="nofollow"><img src="https://rcmdnk.com/images/appstore-lrg-ja.svg" alt="App Store" /></a></span>
    <span class="android-link"><a href="//play.google.com/store/search?q=Sleep Meister - 睡眠サイクルアラームLite&amp;c=apps" target="_blank" rel="nofollow"><img src="https://rcmdnk.com/images/google-play-badge-ja.png" alt="Google Play" /></a></span>
  </div>
</div>

<p>ちょっと使ってみよう。</p>

<h2 id="まとめ">まとめ</h2>

<p>自分の生活記録の出来ることが増えました。</p>

<p>体重というのは昔からも測っていたもので、
自動で記録できる、とは言ってもなんとなしに自分の体重の推移はわかってるものでした。</p>

<p>睡眠時間に関してはきちんと記録とかをとったことが無いので
新鮮で面白いです。
あと、体重と違ってこっちは完全自動記録(寝るのは必然なのでわざわざ体重計に乗る、ということがない)、なところもうれしい。</p>

<p>これから長期間測っていくとまた面白いこともわかるかもしれません。</p>

<p>あとはやっぱりIFTTT連携で寝たり起きたりする時に自動で電気がOff/On出来たりするのが楽しいです。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IFTTT経由でTweetする際にURLを短縮しないようにする]]></title>
    <link href="https://rcmdnk.com/blog/2019/08/22/blog-ifttt/"/>
    <updated>2019-08-22T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/08/22/blog-ifttt</id>
    <content type="html"><![CDATA[<div class="app-img">
  <a href="//itunes.apple.com/jp/app//Twitter,?at=10lc94" rel="nofollow" target="_blank"><img src="http://is3.mzstatic.com/image/thumb/Purple123/v4/90/3d/58/903d582a-0a9f-ca31-b1c5-f42058c360cb/ProductionAppIcon-0-1x_U007emarketing-0-0-GLES2_U002c0-512MB-sRGB-0-0-0-85-220-0-0-0-7.png/200x200bb.jpg" alt="Twitter" /></a>
</div>

<p>このブログで記事を投稿するとRSSで発信されたのを見てツイートする、
みたいなことを
<a href="https://ifttt.com/">IFTTT</a>
経由で行っていますが、これまでは短縮URLを載せていました。</p>

<p>それを短縮しないURLにしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#以前の方法" id="markdown-toc-以前の方法">以前の方法</a></li>
  <li><a href="#直接ツイートする" id="markdown-toc-直接ツイートする">直接ツイートする</a></li>
  <li><a href="#設定変更" id="markdown-toc-設定変更">設定変更</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="以前の方法">以前の方法</h2>

<p>相当前に設定したものですが、TwitterがまだURLとかも文字数として数えていて
普通にURLを貼ってたんじゃ足りない状態でした。</p>

<p>また、今はIFTTTで自動でURLの短縮機能があるのですが、
確か最初の頃はIFTTTではURLの短縮などなかったと思います。(あったかも)</p>

<p>ということで、やっていたのは
<a href="https://bitly.com/">Bitly</a>
というURL短縮サービスを使ってURLの短縮を行ってそれをツイートしていました。</p>

<p>IFTTTのAppletは2つ必要で、</p>

<ul>
  <li>RSSで新しいポストが来たら &lt;i class=”fa fa-arrow-right”&gt;&lt;/i&gt; Bitlyで短縮URLを作成</li>
  <li>Bitlyで新しい短縮URLが出来たら &lt;i class=”fa fa-arrow-right”&gt;&lt;/i&gt; URLとタイトルをツイート</li>
</ul>

<p>という感じでした。これで<strong>bit.ly/XXXX</strong>といった短縮URLで送られます。</p>

<p>2つ目をIFTTTで行う代わりに
<a href="https://publish.buffer.com/profile/516812888bd7f81e13000004/tab/queue">Buffer</a>
で短縮URLを取得して決まった時刻に流すようにする、
みたいなことも一時期していました。</p>

<h2 id="直接ツイートする">直接ツイートする</h2>

<p>最近IoT関係でIFTTTを色々設定するようになったので見直していたところ、
この辺もアップデートしたいな、と思って直すことにしました。</p>

<p>Twitterではとっくの昔にURLなどは140文字のカウントには入らないようになっています。</p>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Say more about what&#39;s happening! Rolling out now: photos, videos, GIFs, polls, and Quote Tweets no longer count toward your 140 characters. <a href="https://t.co/I9pUC0NdZC">pic.twitter.com/I9pUC0NdZC</a></p>&mdash; Twitter (@Twitter) <a href="https://twitter.com/Twitter/status/777915304261193728?ref_src=twsrc%5Etfw">September 19, 2016</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>よくわからない短縮URLよりもドメイン名が入っていた方が良いな、と思ったので
URLをそのまま載せるようにしたいと思います。</p>

<p>bit.lyなんかだとどれだけクリックされたか的な統計も手に入ったりしますが、
特に見てないので要らないかな、と。</p>

<p>また、Bufferも何やら使いづらくなってることもあって、
そういうのを挟まずに送ることに。</p>

<p>ということで</p>

<ul>
  <li>RSSで新しいポストが来たら &lt;i class=”fa fa-arrow-right”&gt;&lt;/i&gt; URLとタイトルをツイート</li>
</ul>

<p>という単純なものを作りました。</p>

<p>ただ、これだと今度は<strong>ift.tt/XXX</strong>といった短縮URLが送られていました。</p>

<p>IFTTTはデフォルトでURLをツイートする際には短縮URLにしてくれてしまうようです。</p>

<h2 id="設定変更">設定変更</h2>

<p>これは設定から変更することでURLをそのままにすることも出来ます。</p>

<p>Web版の方でログインし、右上の人形マークをクリックして<strong>Acccount</strong>を選びます。</p>

<p><img src="https://rcmdnk.com/images/post/20190822_iftttaccount.jpg" alt="20190822_iftttaccount.jpg" class="pic" /></p>

<p>そうすると色々設定項目がありますが、下の方に<strong>URL shortening</strong>という項目があるかと思います。</p>

<p>ここにある<strong>Auto-shorten URLs</strong>のチェックを外せばツイートなどにURLを渡す際
URLをそのまま渡すようになります。</p>

<p>下にあるように、デフォルトでは<strong>ift.tt</strong>を使いますが、
これはIFTTTがbit.lyのサービスを利用していて、
自分のbit.lyのアカウントで独自のドメインを使ってる場合にはそれを指定することも出来ます。</p>

<p>で、この設定ですが、なぜか(iPhoneの?)あぷりからだと設定できません。</p>

<p><img src="https://rcmdnk.com/images/post/20190822_settingsonapp.jpg" alt="20190822_settingsonapp.jpg" class="pic" /></p>

<p>アプリで見るとなぜかこの項目だけ消えてます。
ちょうど上にある2段階認証をこの時点でしてなかったので試しに設定してみたりもしてみましたが
やはりアプリには出ません。</p>

<p>もちろｎスマホでもWebからIFTTTのページに行ってログインすればURL shorteningの項目はありました。</p>

<p>単に忘れてるだけなのか何か意図があるのかわかりませんが、
アプリの設定だけ見て見つからない、という場合には慌てずにWeb版で設定してみてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blynkを使ってRaspberryi Piをスマホから操作する]]></title>
    <link href="https://rcmdnk.com/blog/2019/08/18/computer-iot-raspberrypi/"/>
    <updated>2019-08-18T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/08/18/computer-iot-raspberrypi</id>
    <content type="html"><![CDATA[<div class="app-img">
  <a href="//itunes.apple.com/jp/app//Blynk?at=10lc94" rel="nofollow" target="_blank"><img src="http://is3.mzstatic.com/image/thumb/Purple123/v4/87/a9/97/87a997f8-cefc-9978-ee04-11b756c0e20b/AppIcon-0-1x_U007emarketing-0-0-85-220-0-5.png/200x200bb.jpg" alt="Blynk - IoT for Arduino, ESP32" /></a>
</div>

<p><a href="http://octopress.test/blog/2019/08/17/computer-iot-raspberrypi/">この前</a>
Raspberry PiからSwitch Botを動かせるようになりましたが、
今度はネットワーク経由で動かせるようにします。</p>

<p>これで外出先からでも動かせるようになるはずです。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#raspberry-piの設定" id="markdown-toc-raspberry-piの設定">Raspberry Piの設定</a></li>
  <li><a href="#blynk" id="markdown-toc-blynk">Blynk</a></li>
  <li><a href="#初期セットアップ" id="markdown-toc-初期セットアップ">初期セットアップ</a></li>
  <li><a href="#新しいプロジェクトを作る" id="markdown-toc-新しいプロジェクトを作る">新しいプロジェクトを作る</a></li>
  <li><a href="#raspberry-pi側でblynkサーバーを立ち上げる" id="markdown-toc-raspberry-pi側でblynkサーバーを立ち上げる">Raspberry Pi側でBlynkサーバーを立ち上げる</a></li>
  <li><a href="#スマホから接続チェック" id="markdown-toc-スマホから接続チェック">スマホから接続チェック</a></li>
  <li><a href="#アプリでボタンの設置" id="markdown-toc-アプリでボタンの設置">アプリでボタンの設置</a></li>
  <li><a href="#ボタンの削除" id="markdown-toc-ボタンの削除">ボタンの削除</a></li>
  <li><a href="#課金について" id="markdown-toc-課金について">課金について</a></li>
  <li><a href="#ボタンの動作を設定する" id="markdown-toc-ボタンの動作を設定する">ボタンの動作を設定する</a></li>
  <li><a href="#デーモンプログラムにする" id="markdown-toc-デーモンプログラムにする">デーモンプログラムにする</a></li>
  <li><a href="#スマホ以外からblynkを操作する" id="markdown-toc-スマホ以外からblynkを操作する">スマホ以外からBlynkを操作する</a></li>
  <li><a href="#ifttt経由でgoogle-homeから操作する" id="markdown-toc-ifttt経由でgoogle-homeから操作する">IFTTT経由でGoogle Homeから操作する</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="raspberry-piの設定">Raspberry Piの設定</h2>

<p>今使ってるのはRaspberry Pi Zero WHです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07GYRVHJ9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07GYRVHJ9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61lN0oNqz6L._SS90_CR0,0,120,90_.jpg" alt="Raspberry Pi Zero WH スターターセット (ANKER超小型電源、SanDisk MicroSD 高速型 32GB、USBスイッチケーブル付き)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/16/computer-iot-raspberrypi/">Raspberry Piの初期設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B4D9KVX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B4D9KVX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31pXS40xBZL._SS90_CR0,0,120,90_.jpg" alt="SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/17/computer-iot-raspberrypi/">Raspberry PiからSwitch Botを操作する</a></div></li></ul>

<p>この前のところまででSwitch BotをRaspberry Piから動かせるようにはなりました。</p>

<p>今回はネットワーク経由でRaspberry Piに信号を送って、ネットワーク経由で
Switch Botを動かせるようにしてみます。</p>

<h2 id="blynk">Blynk</h2>

<div class="app-box">
  <div class="app-img">
  <a href="//itunes.apple.com/jp/app/id808760481?at=10lc94" rel="nofollow" target="_blank"><img src="http://is3.mzstatic.com/image/thumb/Purple123/v4/87/a9/97/87a997f8-cefc-9978-ee04-11b756c0e20b/AppIcon-0-1x_U007emarketing-0-0-85-220-0-5.png/200x200bb.jpg" alt="Blynk - IoT for Arduino, ESP32" /></a>
</div>

  <div class="app-title">
    <a href="//itunes.apple.com/jp/app/id808760481?at=10lc94" rel="nofollow" target="_blank">Blynk - IoT for Arduino, ESP32</a>
  </div>
  <div class="app-developer">
    デベロッパ: <a href="https://apps.apple.com/jp/developer/blynk-inc/id808760484" target="_blank" rel="nofollow">Blynk Inc</a>
  </div>
  <div class="app-price">無料</div>
  <div class="app-links">
    <span class="itunes-link"><a href="//itunes.apple.com/jp/app/id808760481?at=10lc94" target="_blank" rel="nofollow"><img src="https://rcmdnk.com/images/appstore-lrg-ja.svg" alt="App Store" /></a></span>
    <span class="android-link"><a href="//play.google.com/store/apps/details?id=cc.blynk" target="_blank" rel="nofollow"><img src="https://rcmdnk.com/images/google-play-badge-ja.png" alt="Google Play" /></a></span>
  </div>
</div>

<p>BlynkはRaspberry Piなどのmicrocomputerを簡単にスマホから操作出来る様にしてくれるアプリ/サービスです。
iPHone、Androidともにアプリがあります。</p>

<p>Raspberry PiなどでBlynkサービスを実行しておき、
スマホからBlynkサーバー経由でそこへアクセスして操作したり情報を取ってきたり出来ます。</p>

<p>基本的に無料で、より多くのボタンなどを使いたい場合などには課金する様な料金体制になっています。</p>

<p>非常に多機能でまだ使いこなせてませんが、とりあえず簡単な使い方だけ。</p>

<h2 id="初期セットアップ">初期セットアップ</h2>

<p>まずはメールアドレスなどを登録する必要があります。
インストールしたアプリに従って。</p>

<h2 id="新しいプロジェクトを作る">新しいプロジェクトを作る</h2>

<p>設定が済むと<strong>Project</strong>を作れるようになります。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkcreateproject.png" alt="20190818_blynkcreateproject.png" class="pic" /></p>

<p>こんな画面から<strong>New Project</strong>を選ぶと、名前(Project Name)とデバイスの種類(CHOSE DEVICE)、
接続の方法(CONNECTION TYPE)を選ぶ様になります。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynknewprojectinit.png" alt="20190818_blynknewprojectinit.png" class="pic" /></p>

<p>名前は適当に<strong>リモコン</strong>とか入れて、デバイスの種類を選びますが、ここにRaspberry Pi Zeroはありません。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkdevice.png" alt="20190818_blynkdevice.png" class="pic" /></p>

<p>ただ、ピン配列などは2014年発売のRaspberry Pi 1 Model B+以前のものと、それ以降で違うだけなので、
現行モデルの他のものを選んでおけばとりあえずは大丈夫です。</p>

<blockquote>
  <p><a href="https://www.raspberrypi.org/documentation/usage/gpio/README.md">GPIO - Raspberry Pi Documentation</a></p>
</blockquote>

<blockquote>
  <p><a href="https://ja.wikipedia.org/wiki/Raspberry_Pi">Raspberry Pi - Wikipedia</a></p>
</blockquote>

<p>機能によってはZeroだと使えないものもあるかもしれませんが、
簡単なコマンドを送ったり、GPIOピンの電圧レベルを変えたりすることは出来ます。</p>

<p>ということで、<strong>Raspberry Pi 3 B</strong>を選びます。</p>

<p>CONNECTION TYPEはWiFiを選べばBlynkサーバー経由でネットワークから操作できますし、
その他BluetoothやUSB/Ethernetなど物理的につなげることも可能です。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkconnection.png" alt="20190818_blynkconnection.png" class="pic" /></p>

<p>今回はネットワークでやりたいのでWiFiを選択。</p>

<p>プロジェクトを作るとAuth Tokenが作られ、登録したメールで送られてきます。</p>

<p>プロジェクトの初期画面はこんな感じ。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkprojectinit.png" alt="20190818_blynkprojectinit.png" class="pic" /></p>

<p>また、このTokenはプロジェクトの設定画面からも確認できます。
右上の三角の左側のナットみたいな設定ボタンを押して、</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkprojectsettings.png" alt="20190818_blynkprojectsettings.png" class="pic" /></p>

<p>このProject Seeingsのところの<strong>AUTH TOKEN</strong>という項目にあります。</p>

<h2 id="raspberry-pi側でblynkサーバーを立ち上げる">Raspberry Pi側でBlynkサーバーを立ち上げる</h2>

<p>BlynkがBlynk用のライブラリを公開しています。</p>

<div class="github-widget" data-repo="blynkkk/blynk-library"></div>

<p>どうやら<strong>blynk</strong>というユーザー名はすでに居て取れなかったために<strong>blinkkk</strong>にした模様。(<strong>blynkk</strong>は居ないけどわかりやすく区別するために3つのk?)</p>

<p><a href="https://github.com/blynkkk/blynk-library/blob/master/linux/README.md">Linux用のREADMEy</a>
を参考に、Raspberry Piで、</p>

<pre><code>pi@raspberrypi:~ $ sudo apt install wiringpi
pi@raspberrypi:~ $ git clone https://github.com/blynkkk/blynk-library.git
pi@raspberrypi:~ $ cd blynk-library/linux
pi@raspberrypi:~/blynk-library/linux $ make clean all target=raspberry
</code></pre>

<p>これで<strong>~/blink-libary/linux</strong>に<code>blink</code>という実行ファイルが出来ているはずです。</p>

<p>ここで先程作ったプロジェクトのTokenが必要になります。
Tokenを確認して、</p>

<pre><code>pi@raspberrypi:~/blynk-library/linux $ sudo ./blynk --token=&lt;YourToken&gt;

[0]
    ___  __          __
   / _ )/ /_ _____  / /__
  / _  / / // / _ \/  '_/
/____/_/\_, /_//_/_/\_\
        /___/ v0.6.1 on Linux


[5] Connecting to blynk-cloud.com:80
[187] Ready (ping: 81ms).
</code></pre>

<p><strong>&lt;YourToken&gt;</strong>のところは作ったプロジェクトのTokenにしてください。
正しいTokenであれば上の様にBlynkのロゴが出てきて<strong>blynk-cloud.com</strong>に接続し、
<strong>Ready</strong>な状態になります。</p>

<p>これでRaspberry Pi側の初期設定はOK。</p>

<p>とりあえずターミナルはそのまま<code>blynk</code>を実行したままにしておきます。</p>

<h2 id="スマホから接続チェック">スマホから接続チェック</h2>

<p>さて、ここで一回スマホに戻って先程作ったプロジェクトのページに行きます。</p>

<p>Raspberry PiでBlynkサーバーが立ち上がっていれば接続出来るはずです。</p>

<p>プロジェクトの右上の
▷マークを押せば接続できるはずです。</p>

<p>▷マークが□になったら実行モードで、
この状態でその隣のマークを押すと接続情報が確認出来ます。
(ちょっとすでにボタンを設置したあとの画像になってしまっていますが。)</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkconnected.png" alt="20190818_blynkconnected.png" class="pic" /></p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkcheck.png" alt="20190818_blynkcheck.png" class="pic" /></p>

<h2 id="アプリでボタンの設置">アプリでボタンの設置</h2>

<p>□を押して最初の編集モードに入ります。
そうするとなにもないページになってると思います。
右上のマークが□でなく▷になってることを確認してください。</p>

<p>▷状態だと編集モード、
□状態だと実行モードになります。</p>

<p>それぞれボタンを押すとそっち(▷:実行、□:停止)になるよ、という意味かと。</p>

<p>編集モードだと画面がが基盤の様な点々になってるかと思いますが、
この適当なところをタップします。</p>

<p>そうすると<strong>Widget Box</strong>が出てくるので、その中から<strong>Button</strong>をタップして設置します。</p>

<p>設置したボタンをタップすると、<strong>Button Settings</strong>画面になります。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkv1setting.png" alt="20190818_blynkv1setting.png" class="pic" /></p>

<p>ここで</p>

<ul>
  <li>一番上の<strong>Button</strong>を適当な名前に</li>
  <li><strong>PIN</strong>を<strong>Virtual</strong>の<strong>V1</strong></li>
  <li>その横の数字は<strong>0</strong>と<strong>1</strong>のまま</li>
  <li><strong>MODE</strong>は<strong>PUSH</strong>のまま</li>
  <li>ON/OFF LABELSはそのままでも良いですがここでの例では解錠ボタンに使ってるので<strong>解錠</strong>にしてあります。
    <ul>
      <li>1の状態だと<strong>ON</strong>のものが表示されますが、今回は<strong>PUSH</strong>ですぐに戻るので表示をごちゃごちゃしないために同じ文字列にしています。それでも押すと1になってる間はボタンの色が変わります。</li>
    </ul>
  </li>
</ul>

<p>とします。</p>

<p><strong>PIN</strong>は<strong>DIGITAL</strong>となっている方の<strong>GP2</strong>、<strong>GP3</strong>…などはRaspberry PiのGPIOのピン番号になり、
出力電圧の盛業が出来るようになります。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkbuttonpin.png" alt="20190818_blynkbuttonpin.png" class="pic" /></p>

<p><strong>Virtual</strong>の<strong>V0</strong>、<strong>V1</strong>…は仮想的なボタンで物理的には何もしませんが、
状態を受け取ってRaspberry Pi側でプログラムを動かしたりするのに使えます。</p>

<p><strong>MODE</strong>では<strong>PUSH</strong>であれば一度1にあげて0に落とす、信号がそれぞれ送られます。
(数字は上の<strong>PIN</strong>の横で設定したもの。)</p>

<p><strong>SWITCH</strong>にすれば片方ずつ信号が送られる様になるわけです。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkv1.png" alt="20190818_blynkv1.png" class="pic" /></p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkconnected.png" alt="20190818_blynkconnected.png" class="pic" /></p>

<p>準備ができたらプロジェクトページに戻り右上の▷ボタンを押して実行モードにします。</p>

<p>そして作ったボタンをタップしてみます。</p>

<p>タップする時に先程<code>blynk</code>を走らせていたターミナルを確認します。</p>

<p>上手く行けば下の様に<strong>Got a value: 1</strong>、<strong>Got a value: 0</strong>
という2つの行がスマホ上のボタンをタップするたびに出てきます。</p>

<pre><code>pi@raspberrypi:~/blynk-library/linux $ sudo ./blynk --token=&lt;YourToken&gt;
[0]
    ___  __          __
   / _ )/ /_ _____  / /__
  / _  / / // / _ \/  '_/
/____/_/\_, /_//_/_/\_\
        /___/ v0.6.1 on Linux


[5] Connecting to blynk-cloud.com:80
[187] Ready (ping: 81ms).
Got a value: 1
Got a value: 0
Got a value: 1
Got a value: 0
Got a value: 1
Got a value: 0
Got a value: 1
Got a value: 0
Got a value: 1
Got a value: 0
</code></pre>

<p>スマホからRaspberry Piに信号を送ることが出来ました。</p>

<h2 id="ボタンの削除">ボタンの削除</h2>

<p>作ったボタンの削除は編集モードでボタンを長押しするとドラッグできるようになり上に
２つのマークが出てくるので右側のリサイクルぽいマークの方に持っていくと削除できます。</p>

<p>左の方は複製を作る機能になっています。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_blynkdelete.png" alt="20190818_blynkdelete.png" class="pic" /></p>

<h2 id="課金について">課金について</h2>

<p>ここで<strong>Button</strong>を一つ設置しましたが、
<strong>Widget Box</strong>の上のところの<strong>YOUR ENERGY BALANCE</strong>の数字が2000から1800になってるかと思います。</p>

<p><strong>Button</strong>の下に200とあるので1つボタンを設置するのに200のENERGY BALANCEが必要、ということで、
つまり1つのアプリで使えるボタンは10個まで、ということになります。</p>

<p>他のWidgetも色々違うENERGYで900の<strong>SuperChart</strong>とかもあります。</p>

<p>この<strong>YOUR ENERGY BARANCE</strong>は全てのプロジェクトで共有されています。</p>

<p>増やしたい場合は<strong>YOUR ENERGY BARANCE</strong>の右にある<strong>Add</strong>ボタンから課金して増やすことになります。</p>

<p>1000ENERGYで240円、5000で600円、など。</p>

<h2 id="ボタンの動作を設定する">ボタンの動作を設定する</h2>

<p>今の所ただ来た信号を表示しているだけですが、
実際に何かやりたいときは
<strong>blynk-library/linux</strong>ディレクトリにある<strong>main.cpp</strong>の中身を編集して再コンパイルします。</p>

<p>一度<code>blynk</code>を<i class="key">Ctrl</i>-<i class="key">C</i>などで止めます。</p>

<p><strong>main.cpp</strong>を<code>vi</code>とかで開いてみると</p>

<figure class="code"><figcaption><span>main.cpp </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span></span><span class="n">BLYNK_WRITE</span><span class="p">(</span><span class="n">V1</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Got a value: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asStr</span><span class="p">());</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんなコードがあると思います。</p>

<p><strong>BLYNK_WRITE(PIN)</strong>という関数が引数の番号のバーチャルピンへの信号が来た時に実行される関数になります。
(関数名やPIN番号はマクロで実際のものに定義されているのでこんな感じの型名のない形になってます。)</p>

<p>同様に<strong>BLYNK_READ(PIN)</strong>という関数もあって、こちらはスマホからこの番号への要求が来ると
なんらかの返り値を返しスマホに返すようになります。
ボタンの設定では使いませんが、<strong>Virtual Display</strong>など返って来た値を表示するWidgetもあるのでそういった所でつかいます。</p>

<p>とりあえず今は
<strong>BLYNK_WRITE(V1)</strong>
というV1ピンに信号が送られてきた時に実行される関数について。</p>

<p>デフォルトで<strong>Got a value: ….</strong>という<code>printf</code>するだけの関数になっているのがわかります。</p>

<p>また、これ以外に<strong>BLYNK_WRITE</strong>などの関数が無いのもわかると思います。</p>

<p>なので<strong>V1</strong>以外のVirtualピンを指定してボタンをタップしても今の時点では何も起こりませんし出力もされません。
<strong>BLYNK_WRITE(V2)</strong>
とかを作ればV2に送られてきた信号に対してなにか出来るようになります。</p>

<p>V1への信号に対してSwitch Botを操作する様なコマンドを実行する様にしてみます。</p>

<figure class="code"><figcaption><span>main.cpp  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span></span><span class="n">BLYNK_WRITE</span><span class="p">(</span><span class="n">V1</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Got a value for V%d: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">V1</span><span class="p">,</span> <span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asStr</span><span class="p">());</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
</span><span class="line">      <span class="n">system</span><span class="p">(</span><span class="s">&quot;sudo python3 /home/pi/python-host/switchbot_py3.py --device &lt;BLE MAC ADDRESS&gt;&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>確認のため<code>printf</code>は残したまま、
変更を確認するためちょっと余計にピン番号を書くように足しています。
(V1, V2はInt型の1, 2, …にマクロで定義されています<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。)</p>

<p><a href="https://rcmdnk.com/blog/2019/08/17/computer-iot-raspberrypi/">Raspberry PiからSwitch Botを操作する</a>
で出来るようになったコマンドを<code>system</code>関数で実行するようにしています。</p>

<p><strong>PUSH</strong>だとボタンをタップするたびに1と0がそれぞれ送られてくるので
1のときだけ実行するようにもしています。</p>

<p><code>param</code>という変数は
<a href="https://github.com/blynkkk/blynk-library/blob/master/src/Blynk/BlynkParam.h">BlynkParam</a>
というクラスのオブジェクトの配列で
このオブジェクトはスマホから送られてきた信号が入っていますが、
<code>toStr()</code>とか<code>toInt()</code>など適当な型に変更して返してくれるメンバ関数を持っています。</p>

<p>今回のボタンからは0か1が送られてくるので比較のときはInt型で比較。</p>

<p>ここまで出来たら再コンパイルします。</p>

<pre><code>pi@raspberrypi:~/blynk-library/linux $ make clean all target=raspberry
</code></pre>

<p>うまくいったらまた<code>blynk</code>を実行します。</p>

<pre><code>pi@raspberrypi:~/blynk-library/linux $ sudo ./blynk --token=&lt;YourToken&gt;
[0]
    ___  __          __
   / _ )/ /_ _____  / /__
  / _  / / // / _ \/  '_/
/____/_/\_, /_//_/_/\_\
        /___/ v0.6.1 on Linux


[6] Connecting to blynk-cloud.com:80
[241] Ready (ping: 81ms).
Got a value for V1: 1
Got a value for V1: 0
Got a value for V1: 1
Got a value for V1: 0
</code></pre>

<p>と、ターミナル上では変更が有効になっていることが確認出来るかと思います。</p>

<p>同時にSwitch Botも動くのが確認できればOKです。</p>

<p>上手く行かない場合は直接<code>system</code>に渡したコマンドを実行してみたりして確かめてみてください。</p>

<p>Ref:</p>

<blockquote>
  <p><a href="http://docs.blynk.cc/">Blynk docs</a></p>
</blockquote>

<blockquote>
  <p><a href="http://blog.livedoor.jp/victory7com/archives/48432885.html">Raspberry Piブログ : 第3回 CPUの温度/周波数/負荷状態を見よう - 連載 IoTサービス「Blynk」を使ってRaspberry Piをスマホからコントロールしよう</a></p>
</blockquote>

<h2 id="デーモンプログラムにする">デーモンプログラムにする</h2>

<p>これでスマホからネットワーク経由でSwitch Botが操作できるようになりました。
Switch Bot Hub Plusは必要ありません。</p>

<p>ただ、今のままだと毎回Raspberry Piを立ち上げて、接続して<code>blynk</code>コマンドを実行しておかないといけません。
これを回避するためにデーモンとして自動で立ち上がるようにします。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4798044911?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4798044911&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41cVV6Rkp2L._SS90_CR0,0,120,90_.jpg" alt="CentOS7システム管理ガイドsystemd/NetworkManager/Firewalld徹底攻略" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/09/10/computer-linux/">CentOS 7などのSystemdに対応したデーモンプログラムを作る</a></div></li></ul>

<p>これを参考に
<code>/etc/systemd/system/blynk.service</code>というファイルを以下の様な内容で作ります<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>。</p>

<figure class="code"><figcaption><span>/etc/systemd/system/blynk.service </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span></span><span class="o">[</span>Unit<span class="o">]</span>
</span><span class="line"><span class="nv">Description</span> <span class="o">=</span> Blynk service
</span><span class="line">
</span><span class="line"><span class="o">[</span>Service<span class="o">]</span>
</span><span class="line"><span class="nv">ExecStart</span> <span class="o">=</span> /home/pi/blynk-library/linux/blynk --token<span class="o">=</span>&lt;YourToken&gt;
</span><span class="line"><span class="nv">ExecStop</span> <span class="o">=</span> /bin/kill <span class="nv">$MAINPID</span>
</span><span class="line"><span class="nv">Restart</span> <span class="o">=</span> always
</span><span class="line">
</span><span class="line"><span class="o">[</span>Install<span class="o">]</span>
</span><span class="line"><span class="nv">WantedBy</span> <span class="o">=</span> multi-user.target
</span></code></pre></td></tr></table></div></figure>

<p>ここでも<strong>&lt;YourToken&gt;</strong>は自分のBlynkプロジェクトのものに変更してください。</p>

<p>もっとちゃんとやりたければ、
<strong>/etc/blynk.conf</strong>とかを読み込んでTokenを取得してそれを使って<code>blynk</code>を実行する様な
ラッパースクリプトを作っても良いかもしれません。</p>

<p>とりあえず今回はそのまま(<code>blynk</code>もpiユーザーのHomeに置いたままであれですが。。。)。</p>

<p>ファイルを書けたらデーモンとして実行してみます。</p>

<pre><code>pi@raspberrypi:/etc/systemd/system $ sudo systemctl start blynk
pi@raspberrypi:/etc/systemd/system $ journalctl -f -u blynk
-- Logs begin at Sat 2019-08-17 06:17:02 JST, end at Sat 2019-08-17 10:58:50 JST
Aug 17 10:58:50 raspberrypi systemd[1]: Started Blynk service.
Aug 17 10:58:50 raspberrypi blynk[1389]: [0]
Aug 17 10:58:50 raspberrypi blynk[1389]:     ___  __          __
Aug 17 10:58:50 raspberrypi blynk[1389]:    / _ )/ /_ _____  / /__
Aug 17 10:58:50 raspberrypi blynk[1389]:   / _  / / // / _ \/  '_/
Aug 17 10:58:50 raspberrypi blynk[1389]:  /____/_/\_, /_//_/_/\_\
Aug 17 10:58:50 raspberrypi blynk[1389]:         /___/ v0.6.1 on Linux
Aug 17 10:58:50 raspberrypi blynk[1389]: [8] Connecting to blynk-cloud.com:80
Aug 17 10:58:50 raspberrypi blynk[1389]: [355] Ready (ping: 81ms).
</code></pre>

<p>どうやら動いているようです。</p>

<p>この状態でスマホのボタンを押して<strong>Got a value…</strong>という表示が<code>journalctl</code>で確認でき
Switch Botが動くのを確認してください。</p>

<p>次に起動時に実行される様に設定します。</p>

<pre><code>pi@raspberrypi:~ $ systemctl is-enabled blynk
disabled
pi@raspberrypi:~ $ sudo systemctl enable blynk
Created symlink /etc/systemd/system/multi-user.target.wants/blynk.service → /etc/systemd/system/blynk.service.
pi@raspberrypi:~ $ systemctl is-enabled blynk
enabled
</code></pre>

<p><code>enabled</code>になっていれば今後Raspberry Piが起動した時に<code>blynk</code>がデーモンとして実行されるようになります。</p>

<p>ここで一度試しに再起動してみます。</p>

<pre><code>pi@raspberrypi:~ $ sudo reboot
</code></pre>

<p>しばらく待って再起動したくらいでスマホのボタンをタップしてちゃんとSwitch Botが動くことを確認します。</p>

<p>上手く行かない場合はRaspberry Piに接続して、</p>

<pre><code>pi@raspberrypi:/etc/systemd/system $ journalctl -u blynk
</code></pre>

<p>で<code>blynk</code>の出力を確認してちゃんと起動しているか、変なエラーが起こってないか確認してください。</p>

<p><code>/etc/systemd/system/blynk.service</code>を再度編集する場合には、編集後必ず</p>

<pre><code>pi@raspberrypi:~ $ systemctl daemon-reload
</code></pre>

<p>をして反映させるのを忘れないように。</p>

<p>以上でスマホからの操作に関しては終了です。</p>

<h2 id="スマホ以外からblynkを操作する">スマホ以外からBlynkを操作する</h2>

<p>BlynkではWebAPIが公開されていて、これを使うとスマホのアプリがなくても
Raspberry piを操作できるようになります。</p>

<blockquote>
  <p><a href="https://blynkapi.docs.apiary.io/#reference/0/write-pin-value-via-get/write-pin-value-via-get">Blynk HTTP RESTful API · Apiary</a></p>
</blockquote>

<p>これを参考に、適当なターミナルを使える(Raspberry Piではない)PCから
<code>curl</code>を使って試してみます。</p>

<pre><code>$ curl http://blynk-cloud.com/&lt;YourToken&gt;/isHardwareConnected
true
$ curl http://blynk-cloud.com/&lt;YourToken&gt;/get/V1
["0"]
$ curl http://blynk-cloud.com/&lt;YourToken&gt;/update/V1?value=1
$ curl http://blynk-cloud.com/&lt;YourToken&gt;/update/V1?value=0
</code></pre>

<p>こんな感じ。<strong>&lt;YourToken&gt;</strong>は自分のプロジェクトのものに。
(実施には<code>true</code>とかの表示のあとに改行がはいらないのですが見やすく変えてます。)</p>

<p>この最後から2番目のvalue 1を送った時にSwitch Botが動いたはずです。</p>

<p>単にブラウザでこれらのURLを開いても信号が送られて値も表示されるはずです。</p>

<pre><code>$ curl http://blynk-cloud.com/&lt;YourToken&gt;/update/V1?value=1
</code></pre>

<p>だけすると、Raspberry Piの中で<strong>V1</strong>が1の状態のままになってしまいますが、
今回の設定では1が送られてくるかどうかだけで良いのでこれだけ送れば良いことにします。
(スマホ上のボタンの表記がちょっと変わりますが)</p>

<h2 id="ifttt経由でgoogle-homeから操作する">IFTTT経由でGoogle Homeから操作する</h2>

<p>WebAPIが使えればそれをIFTTT経由で叩けるので
Google Homeからも操作できるようになります。</p>

<p>IFTTTで新しいAppletの作成画面を開き、
<strong>If This</strong>には<strong>Google Assistant</strong>を指定して
<strong>マンションの入り口開けて</strong>とかの言葉を入れます。
(ドアフォンの解錠のところのSwitch Botを操作したかったため)</p>

<p>ちなみに<strong>解錠</strong>という言葉を入れてみましたが、近くの<strong>会場</strong>を調べることがデフォルトで入っていて
上手くIFTTTにつながってくれませんでした。(何度もやってれば出来ることもたまにありますが。)</p>

<p>あと、<strong>開けゴマ</strong>というのを入れてみましたが、こちらももともと入っているようで、
アラビアンな音楽が流れてきました。</p>

<p>さておき、Thisの設定が出来たら<strong>Then That</strong>のところで、
<strong>Webhooks</strong>を選びます。</p>

<p><strong>Webhooks</strong>では</p>

<ul>
  <li>URL: 先程使ったURL</li>
  <li>Method: <strong>GET</strong></li>
  <li>Content Type: text/plain</li>
  <li>Body: 空白のママ</li>
</ul>

<p>で設定します。</p>

<p>ただし、ここでURLは先程の<strong>http://blynk-cloud.com/…</strong>だと上手く動きません。
リダイレクトがかかっているからか、IFTTTからドメイン名で指定すると上手くいかないので
IPアドレスを直接書く必要があります。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_iftttfail.png" alt="20190818_iftttfail.png" class="pic" /></p>

<p>適当なターミナルで<code>blynk-cloud.com</code>のIPアドレスをチェックします。</p>

<pre><code>$ host blynk-cloud.com
blynk-cloud.com has address 188.166.206.43
</code></pre>

<p>と出たのでURLには</p>

<pre><code>http://188.166.206.43/&lt;YourToken&gt;/update/V1?value=1
</code></pre>

<p>と入れます。</p>

<p><img src="https://rcmdnk.com/images/post/20190818_iftttwebhook.png" alt="20190818_iftttwebhook.png" class="pic" /></p>

<p>これでIFTTTのAppletを保存してGoogle Homeに<strong>マンションの入り口開けて</strong>と呼びかけて
Switch Botが動けばOK。</p>

<h2 id="まとめ">まとめ</h2>

<p>Blynkというサービスを使ってネットワーク経由でRaspberry Piに命令を出し、
Switch Botを動かせるようにしてみました。</p>

<p>Blynkを使うことで、Raspberry Pi側の設定も簡単に出来、
スマホのアプリからも簡単に操作できる様になります。</p>

<p>また、WebAPI+IFTTTを使うことでGoogle Homeなどスマートスピーカーからも簡単に操作できる様にできます。</p>

<p>Raspberry Piをネットワーク経由で操作すると言うと、
Node.jsとかのライブラリを使ってTwitterやSlackの特定のメッセージに反応するようにしたり
Webサーバーを建ててしまって直接WebAPIを受け取るようにしたり、
というのがよくありましたが、
特定のサービスに何か送らないといけなかったり、
直接Webサーバーだと固定IPとか付けないと外からアクセスできなくなります。</p>

<p>BlynkであればRaspberry Pi側での設定も簡単で、
スマホも使いやすいボタンを設置できるアプリがあるので
とても良かったです。
IFTTT+Webhooksを使えばTwitterなどから操作する設定も簡単に出来ます。
スマートスピーカーからも。</p>

<p>ということでBlynkを使ってネットワーク経由でRaspberry Piに信号を送ってSwitch Botを操作する、
ということが出来るようになりました。</p>

<p>Blynkが思った以上に使いやすくて何でもできそうなので、今後Raspberry Piで
なにかしたい時に簡単に実装できそうです。</p>

<p>今回はButtonで信号を送るだけでしたが、
Raspberry PiのCPUとかを監視したり、
湿温度計センサーを付けて湿温度計とする、みたいなこともすぐにできそうです。</p>

<p>…</p>

<p>ただし、ここでマンションの入り口を開けてみようと
外へ行って
自分の部屋番号を呼び出して
スマホのボタンを押してみましたが、
Switch Botは動いているようなのに開かない。
どうやら、ドアフォンの<strong>解錠</strong>ボタンを押す前に呼び出しに出てからでないと駄目らしい。。。
もう一つ設置するか、Switch Botをネットワーク経由で操作できるようになった、ということに満足して辞めるか。。。</p>

<div class="postscript">
  <p><strong>追記: 2019/08/18 </strong></p>

  <p>ドアフォンの通話の方にもつけて外からスマホだけで家に入れる様にしました。
半分意地な感じ。。。</p>

  <p><img src="https://rcmdnk.com/images/post/20190818_doorphone.jpg" alt="20190818_doorphone.jpg" class="pic" /></p>

  <p>こんな感じで下の通話ボタンのところにも別のSwitch Botを付けています。
ただ、このボタンは大きなボタンで、下側の方が押される様になっているのでちょっと設置が難しかったです。</p>

  <p>単に上や横に付けると十分に押せませんでした。
もちろん、ボタン上に貼り付けてしまうと押せません。
下側になにか土台を設置して、というのが一番きれいですが流石にちょっと邪魔くさいので。</p>

  <p>ということで、上の写真の様に斜めにしてなるべく真ん中下の方を押せるように設置しています。</p>

  <p>このとき、Switch Botのもともとの貼り付け用のシールはバーの方側にあって、
それだとボタン部分に大きく張り付いてしまい上手く押せません。</p>

  <p>なのでもとから付いている両面テープを一度剥がしてこんな感じで後ろの方に付け直しました。</p>

  <p><img src="https://rcmdnk.com/images/post/20190818_switchbot.jpg" alt="20190818_switchbot.jpg" class="pic" /></p>

  <p>もとのを取り忘れましたが、シールの形を見て分かる通りバーがある側に付いていたものです。</p>

  <p>後ろ側につけてしまうと、多少先が動くので通常はちゃんと先側で貼り付けた方が良いわけですが、
今回はこれでなんとか上手く動く様になってくれました。</p>

  <p>これで、Blynkに通話ボタンを押すものも登録してあげればOKです。
実際に外から試してみましたが開けることが出来ました。</p>

  <p>この状態であれば2つに分ける必要もないので、</p>

  <figure class="code"><figcaption><span>main.cpp  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span></span><span class="n">import</span> <span class="n">time</span>
</span><span class="line">
</span><span class="line"><span class="nf">BLYNK_WRITE</span><span class="p">(</span><span class="n">V1</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Got a value for V%d: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">V1</span><span class="p">,</span> <span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asStr</span><span class="p">());</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
</span><span class="line">      <span class="n">system</span><span class="p">(</span><span class="s">&quot;sudo python3 /home/pi/python-host/switchbot_py3.py --device &lt;BLE MAC ADDRESS Answer&gt;&quot;</span><span class="p">);</span>
</span><span class="line">      <span class="n">time</span><span class="p">.</span><span class="n">slee</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class="line">      <span class="n">system</span><span class="p">(</span><span class="s">&quot;sudo python3 /home/pi/python-host/switchbot_py3.py --device &lt;BLE MAC ADDRESS Unlock&gt;&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

  <p>みたいな感じで1つのボタンで両方やってしまっても良いかもしれません。
<code>sleep</code>の時間は適当に調整が必要です。</p>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry PiからSwitch Botを操作する]]></title>
    <link href="https://rcmdnk.com/blog/2019/08/17/computer-iot-raspberrypi/"/>
    <updated>2019-08-17T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/08/17/computer-iot-raspberrypi</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B4D9KVX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B4D9KVX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31pXS40xBZL._SS200_.jpg" alt="SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）" /></a>
</div>

<p>住まいのIoT化に向けて導入したSwitch BotですがBluetoothでの通信なので
そのままだと外出先とかから操作できません。
SwitchBot Hub Plusを買えばできるようになりますが、これはスマートリモコンの機能もあり
すでに別なもの(Nature Remo mini)で出来ているのでできれば買いたくありません。</p>

<p>ということで自作を楽しむという意味でもRaspberry Piを使って
ネットワーク経由で操作できるようにしてみたいな、と。</p>

<p>とりあえずRaspberry PiからSwitch Botを操作するところまで。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#raspberry-piの準備" id="markdown-toc-raspberry-piの準備">Raspberry Piの準備</a></li>
  <li><a href="#python-host" id="markdown-toc-python-host">python-host</a></li>
  <li><a href="#python2用の準備" id="markdown-toc-python2用の準備">Python2用の準備</a></li>
  <li><a href="#python3用の準備" id="markdown-toc-python3用の準備">Python3用の準備</a></li>
  <li><a href="#実際に使ってみる" id="markdown-toc-実際に使ってみる">実際に使ってみる</a></li>
  <li><a href="#raspberry-piである意味" id="markdown-toc-raspberry-piである意味">Raspberry Piである意味</a></li>
  <li><a href="#ネットワークからの操作" id="markdown-toc-ネットワークからの操作">ネットワークからの操作</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="raspberry-piの準備">Raspberry Piの準備</h2>

<p>この前セットアップしたRaspberry Pi Zero WHを使います。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07GYRVHJ9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07GYRVHJ9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61lN0oNqz6L._SS90_CR0,0,120,90_.jpg" alt="Raspberry Pi Zero WH スターターセット (ANKER超小型電源、SanDisk MicroSD 高速型 32GB、USBスイッチケーブル付き)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/16/computer-iot-raspberrypi/">Raspberry Piの初期設定</a></div></li></ul>

<p>WHにはWi-FiやBluetooth機能はもともと付いているので特に用意するものはありません。</p>

<p>ディスクとしてmicroSDとmicroUSBによる充電で動く状態であれば出来ます。</p>

<p>ということでOSをインストールして準備が出来たらやってみます。</p>

<h2 id="python-host">python-host</h2>

<p>Switch Botを作っているWonderLabsが公式にAPIを公開しています。</p>

<div class="github-widget" data-repo="OpenWonderLabs/python-host"></div>

<h2 id="python2用の準備">Python2用の準備</h2>

<p>Gitをインストール:</p>

<pre><code>$ sudo apt install -y git
</code></pre>

<p>pipをインストール:</p>

<pre><code>$ sudo apt install -y python-pip
</code></pre>

<p>python-hostのREADMEに従い、必要なライブラリーなどをインストール:</p>

<pre><code>$ sudo apt install -y python-pexpect
$ sudo apt install -y libusb-dev libdbus-1-dev libglib2.0-dev
$ sudo apt install -y libudev-dev libical-dev libreadline-dev
$ sudo pip install bluepy
</code></pre>

<p>レポジトリをとってくる:</p>

<pre><code>$ git clone https://github.com/OpenWonderLabs/python-host.git


$ cd python-host
$ sudo python switchbot.py
</code></pre>

<p>root権限を使うらしくこの実行にもsudoが必要です。</p>

<h2 id="python3用の準備">Python3用の準備</h2>

<p>Python2で使っているBluez utilsの中で使っているものがすでにBluez utilsの中でdeprecatedな状態
なものになっていてあまりよろしくない。</p>

<p>もうすぐPython2のサポートも来れることだし
用意されてるPython3用のスクリプトを使ったほうが良い。</p>

<p>pipをインストール:</p>

<pre><code>$ sudo apt install -y python3-pip
</code></pre>

<p>このまま公式通りに<code>pybluez</code>をpipでインストールしようとすると、</p>

<pre><code>bluez/btmodule.h:5:10: fatal error: bluetooth/bluetooth.h: No such file or directory
</code></pre>

<p>というエラーが出てしまうので<code>libbluetooth-dev</code>をインストール。</p>

<pre><code>$ sudo apt install -y libbluetooth-dev
</code></pre>

<p>あとは公式通り:</p>

<pre><code>$ sudo pip3 install pybluez
$ sudo apt install -y libboost-python-dev
$ sudo apt install -y libboost-thread-dev
$ sudo pip3 install gattlib
</code></pre>

<p>と、最後の<code>gattlib</code>のインストール時に、</p>

<pre><code>$ sudo pip3 install gattlib
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Collecting gattlib
  Using cached https://files.pythonhosted.org/packages/be/2f/5b1aecec551b42b59d8b399ad444b5672972efb590ca83d784dbe616a3e1/gattlib-0.20150805.tar.gz
  Building wheels for collected packages: gattlib
    Running setup.py bdist_wheel for gattlib ... |
</code></pre>

<p>の状態で固まって数十分後?にRaspberry Piが落ちてしまう、という状態に。</p>

<p>再度アクセスしようとしても駄目で、電源口横の緑色のボタンも素早く点滅している状態でどうやら何か駄目っぽい。
一度電源ケーブルを抜き差しして再起動。</p>

<p>その後で、公式にもある通り、pipで失敗した場合の別のインストール方法があるのでそれを試してみる。</p>

<pre><code>$ sudo pip3 download gattlib
$ tar xvzf ./gattlib-0.20150805.tar.gz
$ cd gattlib-0.20150805/
</code></pre>

<p>ここでsetup.pyの書き換えをsedで行っていますが、python34の設定をpython35にしています。
これを行う前に実際にインストールされているバージョンを確認。</p>

<pre><code>$ python3 --version
Python 3.7.3
</code></pre>

<p>とうことで3.7なのでpy34ではなく、py37。さらにpy37の場合は
<code>boost_python-py37</code>ではなく<code>boost_python3-py37</code>という名前になっています。</p>

<pre><code>$ ls /usr/lib/arm-linux-gnueabihf/libboost_python*
/usr/lib/arm-linux-gnueabihf/libboost_python27.a
/usr/lib/arm-linux-gnueabihf/libboost_python27.so
/usr/lib/arm-linux-gnueabihf/libboost_python27.so.1.67.0
/usr/lib/arm-linux-gnueabihf/libboost_python37.a
/usr/lib/arm-linux-gnueabihf/libboost_python37.so
/usr/lib/arm-linux-gnueabihf/libboost_python37.so.1.67.0
/usr/lib/arm-linux-gnueabihf/libboost_python3.a
/usr/lib/arm-linux-gnueabihf/libboost_python3-py37.a
/usr/lib/arm-linux-gnueabihf/libboost_python3-py37.so
/usr/lib/arm-linux-gnueabihf/libboost_python3.so
/usr/lib/arm-linux-gnueabihf/libboost_python.a
/usr/lib/arm-linux-gnueabihf/libboost_python.so
</code></pre>

<p><code>python.a</code>などは<code>python2</code>系のもの、<code>python3</code>系のものはすべて
<code>libboost_python37.so</code>を経由して
<code>libboost_python37.so.1.67.0</code>へのシンボリックリンクになっています。</p>

<p><code>libboost_python3.so</code>もそうなのでこれにしておけばPythonのバージョンが変わっても動く。
(中身が互換性がないとだめですが。)</p>

<p>ので</p>

<pre><code>$ sed -ie "s/boost_python-py34/boost_python3/" setup.py
</code></pre>

<p>とします。(単に開いて<code>boost_python-py34</code>の部分を書き換えても良いです。)</p>

<p>準備ができたらインストール:</p>

<pre><code>$ sudo pip3 install .
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Processing /home/pi/gattlib-0.20150805
Building wheels for collected packages: gattlib
  Running setup.py bdist_wheel for gattlib ... \
</code></pre>

<p>これまた同じ様なところで進みません。</p>

<p>途中で他の接続をして見てみると</p>

<pre><code>$ top -n1
top - 02:35:54 up 6 min,  2 users,  load average: 1.16, 0.68, 0.30
Tasks:  81 total,   2 running,  79 sleeping,   0 stopped,   0 zombie
%Cpu(s): 82.8 us, 17.2 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :    432.7 total,     30.0 free,    350.0 used,     52.8 buff/cache
MiB Swap:    100.0 total,     92.2 free,      7.8 used.     32.6 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
  506 pi        20   0  343212 314036  14240 R  73.9  70.9   0:50.90 cc1plus
  508 pi        20   0   10172   2828   2412 R  17.4   0.6   0:00.10 top
    1 root      20   0   32584   7424   6308 S   0.0   1.7   0:06.10 systemd
    2 root      20   0       0      0      0 S   0.0   0.0   0:00.00 kthreadd
    5 root      20   0       0      0      0 I   0.0   0.0   0:00.02 kworker/u2:0-events_unbound
    6 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 mm_percpu_wq
    7 root      20   0       0      0      0 S   0.0   0.0   0:00.39 ksoftirqd/0
    8 root      20   0       0      0      0 S   0.0   0.0   0:00.01 kdevtmpfs
    9 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 netns
   10 root      20   0       0      0      0 I   0.0   0.0   0:00.39 kworker/0:1-events
$ free
              total        used        free      shared  buff/cache   available
Mem:         443100      364068       28456        2604       50576       27868
Swap:        102396        8192       94204
$
</code></pre>

<p>といった感じでどんどんメモリ使用量が増えていってメモリが足りないようです。</p>

<p>メモリは~400MB、Swapも100MBしか用意されてないようなので、ここで一度思い切ってSwapを増やしてみます。</p>

<pre><code>$ cat /etc/dphys-swapfile
# /etc/dphys-swapfile - user settings for dphys-swapfile package
# author Neil Franklin, last modification 2010.05.05
# copyright ETH Zuerich Physics Departement
#   use under either modified/non-advertising BSD or GPL license

# this file is sourced with . so full normal sh syntax applies

# the default settings are added as commented out CONF_*=* lines


# where we want the swapfile to be, this is the default
#CONF_SWAPFILE=/var/swap

# set size to absolute value, leaving empty (default) then uses computed value
#   you most likely don't want this, unless you have an special disk situation
CONF_SWAPSIZE=100

# set size to computed value, this times RAM size, dynamically adapts,
#   guarantees that there is enough swap without wasting disk space on excess
#CONF_SWAPFACTOR=2

# restrict size (computed and absolute!) to maximally this limit
#   can be set to empty for no limit, but beware of filled partitions!
#   this is/was a (outdated?) 32bit kernel limit (in MBytes), do not overrun it
#   but is also sensible on 64bit to prevent filling /var or even / partition
#CONF_MAXSWAP=2048
$ sudo sed -i -e "s/^CONF_SWAPSIZE=.*/CONF_SWAPSIZE=2048/g" /etc/dphys-swapfile
$ sudo reboot
</code></pre>

<p>再起動後もう一度<code>sudo pip3 install .</code>に挑戦。</p>

<pre><code>$ sudo pip3 install .
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Processing /home/pi/gattlib-0.20150805
Building wheels for collected packages: gattlib
  Running setup.py bdist_wheel for gattlib ... done
  Stored in directory: /root/.cache/pip/wheels/2b/2d/d2/d62bdc868bb470d7b7e2fa672805652c9e57ff271d2ba6a8ea
Successfully built gattlib
Installing collected packages: gattlib
Successfully installed gattlib-0.20150805
</code></pre>

<p>うまくいきました。結構(10分~20分くらい?)かかりましたがなんとか終わりました。
別のモニタで見てたところ、実メモリを使い切ってswapも200MBくらいは使ってたので
2GBまでは必要なかったですがやはり100MBではたりなかった模様。</p>

<p>これで<strong>switchbot_py3.py</strong>スクリプトが呼べるようになりました。</p>

<pre><code>$ cd ~/python-host
$ python3 switchbot_py3.py --help
usage: switchbot_py3.py [-h] [--scan] [--scan-timeout SCAN_TIMEOUT]
                        [--connect-timeout CONNECT_TIMEOUT] [--device DEVICE]
                        [--interface INTERFACE]

optional arguments:
  -h, --help            show this help message and exit
  --scan, -s            Run Switchbot in scan mode - scan devices to control
  --scan-timeout SCAN_TIMEOUT
                        Device scan timeout (default: 2 seconds)
  --connect-timeout CONNECT_TIMEOUT
                        Device connection timeout (default: 5 seconds)
  --device DEVICE, -d DEVICE
                        Specify the address of a device to control
  --interface INTERFACE, -i INTERFACE
                        Name of the bluetooth adapter (default: hci0 or
                        whichever is the default)
</code></pre>

<h2 id="実際に使ってみる">実際に使ってみる</h2>

<p>この前設置したSwitch Botを動かしてみます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B7NXV4R?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7NXV4R&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31trb%2BGo8ML._SS90_CR0,0,120,90_.jpg" alt="SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/15/life-iot/">Switch Botでボタンを何でもIoT化</a></div></li></ul>

<p>とりあえずスクリプトにはSwitch Botを探せる機能もあるみたいなのでそれを試します。</p>

<p>Python2:</p>

<pre><code>pi@raspberrypi:~/python-host $ sudo python switchbot.py
Usage: "sudo python switchbot.py [mac_addr  cmd]" or "sudo python switchbot.py"
Start scanning...
scan timeout
No SwitchBot nearby, exit
</code></pre>

<p>Python3:</p>

<pre><code>pi@raspberrypi:~/python-host $ sudo python3 switchbot_py3.py --scan
No Switchbots found
</code></pre>

<p>Python2/3バージョン共に見つからない。</p>

<p>パスワードがかかっているのが駄目なのか?と思いパスワードを外してみたもののやはり見つからない。</p>

<p>試しに<code>hcitool</code>を使ってBluetoothが見えているかどうか確かめてみると。</p>

<pre><code>$ sudo hcitool lescan
LE Scan ...
XX:XX:XX:XX:XX:XX (unknown)
XX:XX:XX:XX:XX:XX (unknown)
...
</code></pre>

<p>みたいな感じでBluetoothは使えている様に見える。</p>

<blockquote>
  <p><a href="http://xx-prime.hatenablog.com/entry/2017/07/01/211509">Switch Bot が届いたのでSingle Board Computerから操作してみた - ブログ</a></p>
</blockquote>

<p>だいぶ前の(2年前)だが、この時点ですでにSwitch Botの仕様が変更され、
<code>hcitool lescan</code>でなんのデバイスか分からないようになったため
スクリプトのScanは使えなくなっているらしい。</p>

<blockquote><p>中の人によると、以下のコードも見てみてね、とのことである。</p><p>http://codegist.net/snippet/python/switchbot_bluepypy_aerialist_python</p><p>gatoolもpexpectも使わずに、より簡潔に制御できるのでこっちのほうがいいね。</p><footer><strong>Switch Bot が届いたのでSingle Board Computerから操作してみた - ブログ</strong> <cite><a href="http://xx-prime.hatenablog.com/entry/2017/07/01/211509">xx-prime.hatenablog.com/entry/&hellip;</a></cite></footer></blockquote>

<p>とありますが、これはリンク切れでした。</p>

<p>上のレポジトリのPython2バージョンは2年前、
Python3の方でも1年前のコミットでこの辺分かった後の話だとは思いますが、
現状BluetoothからSwitchBotかどうか分かる手段はないのでScanでは無理(手当り次第やる、というてはありますが)。</p>

<p>ので直接BLE Macアドレスを調べます。</p>

<p>BLE Macアドレスの確認はアプリの中の
各SwitchBotの設定画面に行き、右上の3ボタンを押すと出てきます。</p>

<p><img src="https://rcmdnk.com/images/post/20190817_switchbot.png" alt="20190817_switchbot.png" class="pic" /></p>

<p>こんな感じで表示されてるSwitchBot一覧で各Botの右上にある歯車をタップし</p>

<p><img src="https://rcmdnk.com/images/post/20190817_switchbotbotset.png" alt="20190817_switchbotbotset.png" class="pic" /></p>

<p>SwitchBotの設定画面で右上の3点ボタンを押します。
(昔は下の設定一覧の所にBLE MACアドレスがあったみたいですが、妙にこれだけわかりにくくなってます。)</p>

<p><img src="https://rcmdnk.com/images/post/20190817_switchbotblemac.png" alt="20190817_switchbotblemac.png" class="pic" /></p>

<p>そうするとこんな感じでBLE MACアドレスを見ることが出来ます。</p>

<p>このアドレスを使って試してみます。</p>

<p>Python2:</p>

<pre><code>$ sudo python switchbot.py "XX:XX:XX:XX:XX:XX" Press
Usage: "sudo python switchbot.py [mac_addr  cmd]" or "sudo python switchbot.py"
Preparing to connect.
Trigger complete
</code></pre>

<p>Python3:</p>

<pre><code>$ sudo python3 switchbot_py3.py -d "XX:XX:XX:XX:XX:XX"
Connected!
Command execution successful

(process:1599): GLib-CRITICAL **: xx:xx:xx.xxx: Source ID 4 was not found when attempting to remove it
</code></pre>

<p>の様にどうやら成功したようです。</p>

<p>Python3版の方でCRITICALなメッセージが出ていますがとりえず無視して大丈夫そうです。
バグ?<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup></p>

<p>Python2の場合には<code>Press</code>、<code>Turn On</code>、<code>Turn Off</code>のサブコマンドが使えます。</p>

<p>Python3のswitchbot_py3.pyの場合には<code>press</code>がハードコードされてるので、
<code>press</code>しか送れませんが、ちょっと改造して<code>--command on</code> (or <code>off</code>)で
<code>on</code>や<code>off</code>も送れるように改造したものを作ってみました。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/python-host/blob/command/switchbot_py3.py">python-host/switchbot_py3.py at command · rcmdnk/python-host</a></p>
</blockquote>

<p>とりあえずこれで成功している用に見えますが、
両方ともパスワードを設定していないときは上手くいきました。</p>

<p>パスワードを設定すると上と同じメッセージが出ますが、Switch Botは動きません。</p>

<p>そもそもパスワードを送るような
部分がスクリプトの中にないのでどうしたもんかと調べてみると、</p>

<blockquote>
  <p><a href="https://www.switch-bot.com/forum/general-discussion/trigger-switchbot-via-api-bluetooth-directly">Trigger SwitchBot via API/Bluetooth directly?  SwitchBot Community  SwitchBot</a></p>
</blockquote>

<p>どうやら今の所パスワード認証に関するAPIは公開してないようです。
ので、現状ではパスワードなしの状態でやらないとアプリ以外からは操作できません。</p>

<p>多分公式の記述は間違いで10mくらいまでしかBluetooth通信は届かないので、隣近所の人が
もしSwitch Botを使っていたら使われてしまうかも、という危険性はあります。
が、その場合にはこちら側のアプリにも相手側のSwitch Botがあらわれるはずです。
(たまたま他の家でSwitchBotを使っていてアプリを入れていて、隣のウチに遊びに来た、とかだとその人のアプリに出てしまうことはありますが、
そこでアプリをチェックすることは少ないはず。。。)</p>

<p>ということで、今の所周りに他のSwitch Botは見当たりませんし、パスワード無しでも大丈夫かな。。。</p>

<p>換気扇の方は別にいじられても何も問題ないわけですが、
マンションの解錠の方はどうかな、と思ったりもします。</p>

<p>ですが、実際入り口からはBluetoothで繋がりませんでしたし
届くとしたらすでにマンションの中からかな、という感じなのでそこまで心配する必要はないかな、とも。</p>

<h2 id="raspberry-piである意味">Raspberry Piである意味</h2>

<p>ここまでの操作であれば単にLinuxの動くPCでBluetoothデバイスが載っていれば出来ます。</p>

<p>WindowsだとWindows Subsystem for Linuxから使えるかな、と思いましたがBluetoothデバイスを扱えませんでした。</p>

<p>とりあえず現在は無理そう。</p>

<blockquote>
  <p><a href="https://github.com/Microsoft/WSL/issues/242">Bluetooth not supported (Built-in and USB-BT Adapter) · Issue #242 · microsoft/WSL</a></p>
</blockquote>

<p>WSL2がすでに公開されているようですが、Linuxカーネルが動くようになり大分様相が変わるので
もしかしたらいろいろなデバイスへのアクセスなども出来るようになるのかもしれません。</p>

<blockquote>
  <p><a href="https://www.atmarkit.co.jp/ait/articles/1906/14/news019.html">完全なLinuxがWindows 10上で稼働する？　「WSL 2」とは：Windows 10 The Latest - ＠IT</a></p>
</blockquote>

<p>また、Macではスクリプトはそのまま動きません。</p>

<p>スクリプトの中にService UUID(とManufacture ID)とコマンド(press/turn on/turn off)用の
信号キーがあるので、
これらを使ってWindowsでもMacでもBluetoothを操作するスクリプトを作れば同じ様なことは出来るはずです。(やってない)</p>

<p>自宅とかで常に起動しているマシンがあるならそれを使ってももちろん良いと思います。</p>

<h2 id="ネットワークからの操作">ネットワークからの操作</h2>

<p>とりあえずここまででRaspberry PiからSwitch Botを操作できるようになりました。</p>

<p>あとはネットワークから操作できるようにして、Google Homeとかからも使えるようにしたいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switch Botでボタンを何でもIoT化]]></title>
    <link href="https://rcmdnk.com/blog/2019/08/15/life-iot/"/>
    <updated>2019-08-15T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/08/15/life-iot</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B7NXV4R?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7NXV4R&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31trb%2BGo8ML._SS200_.jpg" alt="SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）" /></a>
</div>

<p><a href="https://rcmdnk.com/blog/2019/08/09/life-iot/#switch-bot">住まいのIoT化計画</a>
の中でやりたいこととしてSwitch Botを使って換気扇などのスイッチを操作したい、
というのがありましたが、注文して届いたので設置しました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#switch-bot" id="markdown-toc-switch-bot">Switch Bot</a></li>
  <li><a href="#switch-botの動作" id="markdown-toc-switch-botの動作">Switch Botの動作</a></li>
  <li><a href="#スマホとの連携" id="markdown-toc-スマホとの連携">スマホとの連携</a></li>
  <li><a href="#操作が届く距離" id="markdown-toc-操作が届く距離">操作が届く距離</a></li>
  <li><a href="#設置箇所" id="markdown-toc-設置箇所">設置箇所</a></li>
  <li><a href="#switchbot-hub-plus" id="markdown-toc-switchbot-hub-plus">SwitchBot Hub Plus</a></li>
  <li><a href="#購入について" id="markdown-toc-購入について">購入について</a></li>
  <li><a href="#switch-botの自作" id="markdown-toc-switch-botの自作">Switch Botの自作?</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="switch-bot">Switch Bot</h2>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B7NXV4R?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7NXV4R&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31trb%2BGo8ML._SS200_.jpg" alt="SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07B7NXV4R?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7NXV4R&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07B7NXV4R?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B7NXV4R&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>Switch Botはボタンを押したりしてくれる
超小型指ロボット。</p>

<p>黒色もあります。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07B4D9KVX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B4D9KVX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31pXS40xBZL._SS200_.jpg" alt="SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07B4D9KVX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B4D9KVX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">SwitchBot スイッチボット スイッチ ボタンに適用 指ロボット スマートホーム ワイヤレス タイマー スマホで遠隔操作 Alexa, Google Home, Siri, IFTTTなどに対応（ハブ必要）</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07B4D9KVX?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07B4D9KVX&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>大きさは4.2x3.7x2.4cmの40.8gで、
実際に手に持ってみると思ったよりも小さかったです。</p>

<p>四角い箱の横にスイッチングバーが付いていて、
これが降ろされる形でスイッチを押します。</p>

<p>これを適当な所に付属の両面テープで取り付けます。</p>

<h2 id="switch-botの動作">Switch Botの動作</h2>

<p>スイッチの押し方は通常の方法は一度バーが降ろされてすぐに戻るような動作です。
換気扇を止めるためのボタンなど、一回押すだけの様な形のものにはこれを使います。</p>

<p>アプリの<strong>パスワード、モード</strong>という設定から
<strong>壁スイッチを使用します</strong>というモードを選択すると
<strong>On</strong>と<strong>Off</strong>という２つのボタンがアプリ上に現れ、
<strong>On</strong>を押せばバーが下がったままの状態、<strong>Off</strong>を押せば上がった状態、
に動く様になります。</p>

<p>Switch Botにはバーの先に両面テープがつけられる付属品があり、
これを使うと電気のスイッチなどのスイッチOn/Offが出来る様になります。</p>

<p>下のリンクにある様な大きなスイッチも対応しています。</p>

<blockquote>
  <p><a href="https://www.switchbot.jp/post/switchbot-add-on">SwitchBotはパナソニック(Panasonic)コスモワイド埋込型のスイッチに対応できますか？</a></p>
</blockquote>

<h2 id="スマホとの連携">スマホとの連携</h2>

<p>Switch BotはBluetoothを経由してスマホなどから操作できるようになりますが、
Switch Botの電源がOnの状態だと常にアプリから確認出来る様になります。</p>

<p>Switch Botには外部から制御できる電源ボタンがないので、
最初に刺さっている絶縁シートを抜くと常にOnな状態なので
常に見える状態になります。</p>

<p>初期状態ではそのまますぐに操作できる様になっています。
このままでは他人に簡単に操作されてしまうので、
すぐにパスワード設定をして他人が操作出来ないようにする必要があります。</p>

<p>また、それでも他人からは見える状態になっているので
隣の部屋の人が同じアプリを使っていると見られてしまう可能性があります。
今の所それはどうしようもないみたいで、
Wi-FiのSSIDみたいに見られるのは仕方ない、としてあまり変な名前は付けない方が良さそうです。
また、パスワードもある程度ちゃんとしたものにした方が良いです。</p>

<p>逆に人と共有する場合にはアカウントは別でもパスワードを共有すればよいだけです。
他のIoTだとアカウントに直接結びつくためにアカウントの共有が必要だったりしますが、
それはWi-Fi経由かBluetooth経由か、の違いかと。</p>

<p>このパスワードを忘れたり、電池がなくなったら(電池の残りはアプリから確認出来る)
蓋を開けてリセットしたり電池交換したり出来ます。</p>

<blockquote>
  <p><a href="https://www.switchbot.jp/post/reset-bot">SwitchBot本体に設定されたパスワードを忘れてしまいました。どうすればいいですか？</a></p>
</blockquote>

<h2 id="操作が届く距離">操作が届く距離</h2>

<p>Bluetoothの規格は恐らくClass 1らしく見通しが良ければ80m程度まで届く、とあります。</p>

<blockquote><p>SwitchBot Hub(Plus)とSwitchBot間の最大通信距離はどれぐらいですか？ </p><p>SwitchBot Hub(Plus)とSwitchBot間の最大通信距離は80メートルです（見通しの良い野外）。特定の無線環境とその間の壁に応じて、距離が短くなります。</p><p>2つのSwitchBot Bluetooth（BLE）デバイス間の距離は80メートルです（見通しの良い野外）。例えば：Hubから1Botまで、Bot1からBot2まで。メッシュネットワーク機能が有効になると、各デバイスを相互に接続し、Bluetoothの範囲からデバイスを制御できるようになります。</p><footer><strong>SwitchBot | スマートホームへの簡単なスイッチ| Alexa | Google Home</strong> <cite><a href="https://www.switchbot.jp/support-page">www.switchbot.jp/support-page/&hellip;</a></cite></footer></blockquote>

<p>なので上手く行けば家の外からでも操作できる可能性があります。</p>

<p>が、試してみたところウチのマンションの外からでは届いていないようでした。
ただ、結構近くでも接続出来なかったので80m(Class 1)というのは間違いでClass 2で10m位しか届かないんじゃないかな、という感じがします。
家の中でも多少壁があるとはいえ10m以上離れていくとつながらなくなるような感じだったので。</p>

<p>この状態でも物理鍵無しでオートロックマンションに入れる、と思いましたがちょっと上手く行きませんでした。</p>

<h2 id="設置箇所">設置箇所</h2>

<p>とりあえず2つ、台所の換気扇の<strong>切る</strong>スイッチととドアフォンの<strong>解錠</strong>スイッチの所に付けてみました。</p>

<p><img src="https://rcmdnk.com/images/post/20190815_ventilator.jpg" alt="20190815_ventilator.jpg" class="pic" /></p>

<p><img src="https://rcmdnk.com/images/post/20190815_doorphone.jpg" alt="20190815_doorphone.jpg" class="pic" /></p>

<p>こんな感じ。
両方とも1回押せば良いものなので両面テープでスイッチにくっつける付属品は付けていません。</p>

<p>Switch Botはバーを下ろす時に、かなり大きめに下側に振り切れるので
接着が悪いとその力で取れてしまうので注意が必要です。
Switch Botに付いている両面テープできちんと固定されていれば、
バーはそれ以上押し込めないところまで行くと止まって戻ってくれます。</p>

<p>とりあえず2つですが、台所の換気扇のところのスイッチはやっぱりとても便利です。
今まで料理したあとにいつまで換気扇を回しておくか、その場で消していくか後でまた来て消すか
迷うところでしたが、
これでしばらくは回しておいてリビングから気が向いたら消す、ということが簡単に出来る様になりました。</p>

<p>ドアフォンの解錠については家の中ではあまり必要なものではないかもしれません。
明らかな知り合いが来るタイミングでドアフォンの前まで行かずに開けられる、というのはありますが、
まあ確認するためにもドアフォンの前には行くでしょうし。</p>

<p>やりたかったのは外からリモートで開ける、ということでしたが、
上にも書いたとおりBluetooth頼りだとどうやら難しそう。</p>

<h2 id="switchbot-hub-plus">SwitchBot Hub Plus</h2>

<p>Switch Bot自体はBluetooth通信ですが、
SwitchBot Hub Plusを使うことでWi-Fi経由で動かすことも可能になります。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07DL6M8PZ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07DL6M8PZ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31925J%2BRGQL._SS200_.jpg" alt="SwitchBot スイッチボット スマートホーム 学習リモコン グーグルホーム Alexa -IFTTT イフト Siriに対応 SwitchBot Hub Plus" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07DL6M8PZ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07DL6M8PZ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">SwitchBot スイッチボット スマートホーム 学習リモコン グーグルホーム Alexa -IFTTT イフト Siriに対応 SwitchBot Hub Plus</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07DL6M8PZ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07DL6M8PZ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot+Hub+Plus%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot+Hub+Plus%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>k</p>

<p>SwitchBot Hub Plusはいわゆるスマートリモコンで
この前買ったNature Remo miniの様に家電のリモコンの代わりになって
スマホやGoogle Homeなどのスマートスピーカーから操作せきる様にしてくれるものです。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07CWNLHJ8?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07CWNLHJ8&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51TuPxyH7XL._SS200_.jpg" alt="Nature Remo mini 家電コントロ-ラ- REMO2W1" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07CWNLHJ8?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07CWNLHJ8&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Nature Remo mini 家電コントロ-ラ- REMO2W1</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07CWNLHJ8?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07CWNLHJ8&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FNature+Remo+mini%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FNature+Remo+mini%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>Nature Remoと比べると、
Nature Remoは温度センサー、湿度センサー、照度センサー、人感センサーが付いている一方(miniは温度センサーのみ)
SwitchBot Hub Plusには環境センサーは付いていません。</p>

<p>また、Nature Remo (mini)ではあらかじめ準備されていないリモコンのボタンに関しても
追加できますが
SwitchBot Hub Plusではあらかじめ準備されたものしか使えません。
とはいえ、大概の場合はカバーされている様ですが。</p>

<p>とうことで、単純なスマートリモコン(赤外線リモコン機能)としては
Nature Remoの方が優れているように見えます。</p>

<p>SwitchBot Hub PlusはSwitch Botを含め、SwitchBot製品とBluetooth接続できることが大きな違いです。
Hub Plus自体には環境センサーはついてませんが、別途湿温度計が売っています。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07RSXJMLD?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07RSXJMLD&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/411YuHlBibL._SS200_.jpg" alt="SwitchBot スイッチボット デジタル 温湿度計 スマート家電 – 高精度 スイス製センサースマホで温度湿度管理 アラーム付き グラフ記録 Alexa, GoogleHome, IFTTT対応 (ハブ必要) SwitchBot 室温度計/" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07RSXJMLD?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07RSXJMLD&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">SwitchBot スイッチボット デジタル 温湿度計 スマート家電 – 高精度 スイス製センサースマホで温度湿度管理 アラーム付き グラフ記録 Alexa, GoogleHome, IFTTT対応 (ハブ必要) SwitchBot 室温度計/</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07RSXJMLD?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07RSXJMLD&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot+%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%83%9C%E3%83%83%E3%83%88+%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB+%E6%B8%A9%E6%B9%BF%E5%BA%A6%E8%A8%88+%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E5%AE%B6%E9%9B%BB+%E2%80%93+%E9%AB%98%E7%B2%BE%E5%BA%A6+%E3%82%B9%E3%82%A4%E3%82%B9%E8%A3%BD%E3%82%BB%E3%83%B3%E3%82%B5%E3%83%BC%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%A7%E6%B8%A9%E5%BA%A6%E6%B9%BF%E5%BA%A6%E7%AE%A1%E7%90%86+%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%A0%E4%BB%98%E3%81%8D+%E3%82%B0%E3%83%A9%E3%83%95%E8%A8%98%E9%8C%B2+Alexa%2C+GoogleHome%2C+IFTTT%E5%AF%BE%E5%BF%9C+%28%E3%83%8F%E3%83%96%E5%BF%85%E8%A6%81%29+SwitchBot+%E5%AE%A4%E6%B8%A9%E5%BA%A6%E8%A8%88%2F%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot+%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%83%9C%E3%83%83%E3%83%88+%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB+%E6%B8%A9%E6%B9%BF%E5%BA%A6%E8%A8%88+%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E5%AE%B6%E9%9B%BB+%E2%80%93+%E9%AB%98%E7%B2%BE%E5%BA%A6+%E3%82%B9%E3%82%A4%E3%82%B9%E8%A3%BD%E3%82%BB%E3%83%B3%E3%82%B5%E3%83%BC%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%A7%E6%B8%A9%E5%BA%A6%E6%B9%BF%E5%BA%A6%E7%AE%A1%E7%90%86+%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%A0%E4%BB%98%E3%81%8D+%E3%82%B0%E3%83%A9%E3%83%95%E8%A8%98%E9%8C%B2+Alexa%2C+GoogleHome%2C+IFTTT%E5%AF%BE%E5%BF%9C+%28%E3%83%8F%E3%83%96%E5%BF%85%E8%A6%81%29+SwitchBot+%E5%AE%A4%E6%B8%A9%E5%BA%A6%E8%A8%88%2F%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>あとは
<a href="https://www.amazon.co.jp/gp/product/B07FY4GDDQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07FY4GDDQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22">TP-Link スマートプラグ</a>
の様なスマートプラグもあります。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07TVSGJT4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07TVSGJT4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31ApDlcnKML._SS200_.jpg" alt="SwitchBot スイッチボット スマートプラグ Wi-Fi コンセント – タイマー 遠隔操作 音声コントロール Alexa Google Home IFTTT Siriに対応" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07TVSGJT4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07TVSGJT4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">SwitchBot スイッチボット スマートプラグ Wi-Fi コンセント – タイマー 遠隔操作 音声コントロール Alexa Google Home IFTTT Siriに対応</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07TVSGJT4?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07TVSGJT4&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot+%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%83%97%E3%83%A9%E3%82%B0%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSwitchBot+%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%83%97%E3%83%A9%E3%82%B0%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>これらを含めて操作したい場合にはSwitchBot Hub Plusの方が有用です。</p>

<p>SwitchBot Hub、という赤外線リモコン機能がつかずにSwitchBot製品だけをWi-Fiで操作できる様にする
ものも以前は売っていた様ですがいまは公式ページでも売っていない様です。</p>

<p>で、SwitchBot Hub Plusを使えばWi-Fi経由でSwitch Botを操作できるようになり、
外からでもマンションの部屋呼び出し後に解錠が出来るようになるわけですが、
すでにNature Remo miniを買っているため
被る様なものはあまり買いたくないな、と。</p>

<p>とりあえず換気扇については満足したのですぐにはこれを導入する必要なないですし、
ここまで来たらRaspberry Piを使ったBluetooth&amp;赤外線リモコンを作りたいな、
と思ってるのでまたそのうち。</p>

<p>Switch Botを動かすだけなら
公式のAPIがあるので結構簡単そう。</p>

<blockquote>
  <p><a href="http://xx-prime.hatenablog.com/entry/2017/07/01/211509">Switch Bot が届いたのでSingle Board Computerから操作してみた - ブログ</a></p>
</blockquote>

<p>加えて赤外線リモコンもつけようと思うと工作が必要
ですがやるならその辺もやりたい。</p>

<blockquote>
  <p><a href="https://qiita.com/takjg/items/e6b8af53421be54b62c9">格安スマートリモコンの作り方 - Qiita</a></p>
</blockquote>

<h2 id="購入について">購入について</h2>

<p>Switch BotはAmazonや楽天などでSwitchBotを製造販売している Wonderlabs, Inc.自身も4,500円位で売っていますが、
公式ページからも買うことが出来ます。</p>

<blockquote>
  <p><a href="https://www.switchbot.jp/store">ショップ  SwitchBot  スマートホーム化できる簡単スイッチ Alexa  Google Home</a></p>
</blockquote>

<p>こちらだと今なら4つまとめて買う場合12,980円となっています。</p>

<p>ただ、2万円?以上買わないと送料として1,100円かかる様になっているので
1つ買うだけなら同じ値段で送料無料でAmazonとかで買ったほうが得です。</p>

<p>4使うなら3500円/個位、8個買えば3250円/個位になります。</p>

<p>ただこれを英語のページに見に行くと</p>

<blockquote>
  <p><a href="https://www.switch-bot.com/store">Buy Now  SwitchBot  Your simple switch to a smart home  Alexa  Google Home</a></p>
</blockquote>

<p>1個$29、4個で$99で売っています。
こちらには送料について<strong>Free shipping on orders over $150!</strong>と
出ているので$150以上で送料無料になります。
それ以下だと$10かかります。</p>

<p>ということで1個だと$39 (~4150円)、4個で$27.25/個 (~2900円)、8個で送料無料になって$24.75/個(~2600円)
で買えることになります。</p>

<p>日本への発送は1週間位、とありましたが、まあ大分安いのでこっちで良いか、と思って
英語版のサイトから買ってみました。</p>

<p>で、しばらくすると
何故かAmazon Japanのアドレスから
Wonderlabs Incの商品をAmazon.co.jpの配送センターから発送した、という連絡が来て、
実際に届きました</p>

<p>箱はいつもながらのAmazonのものではなかったですが、
Amazonの倉庫からヤマトが運んで来てくれたようです。</p>

<p>ここまで注文から3日程。</p>

<p>Wonderlabs Incは
深センのスタートアップらしいので
てっきりそこからくるものだと思っていましたが、
すでに日本での販売経路がAmazon経由で確立している?からかそこから送ってくれる様です。</p>

<p>ちょうど休みだったのでもしかしたら普通に1営業日で送ってくれるのかも。
なので郵送が遅くなる、というデメリットもほどんど無いので
英語がどうしても苦手、
というのでなければ英語版公式サイトから買うと1個からでも安く買えます。</p>

<h2 id="switch-botの自作">Switch Botの自作?</h2>

<p>Wi-Fi操作の方はRaspberry Piで自作したいと思ってますが、
Switch Bot自体も作れるんじゃないか、という話もあります。</p>

<p>ただ、届いたものを見て改めて思いましたが、
あれだけコンパクトにきれいに纏めるのはちょっと難しそうだな、と。</p>

<blockquote>
  <p><a href="https://watako-lab.com/2018/12/22/switch_bot_proto/">赤外線リモコンで動くSwitchBotもどき – Watako-Lab.</a></p>
</blockquote>

<p>こちらの人のものがケースを3Dプリンタで作ったりまでしていてかなり完成度が高いです。
これを真似したいと思いましたが、ちょうどよいケースを準備するのが難しいな、
と思うのでとりあえずSwitch Botは買ってみました。</p>

<p>3Dプリンタを購入するまで本気を出せれば作ってみたいものですが。</p>

<h2 id="まとめ">まとめ</h2>

<p>Switch Botを導入して新たにIoTが進みました。</p>

<p>換気扇のスイッチは予想通り便利で導入してよかったです。</p>

<p>Switch Bot自体は単にスイッチを押すだけの機械なので
まだまだ別なところでも使えるところはあると思うので
使えそうなところにはまた導入したいと思っています。</p>
]]></content>
  </entry>
  
</feed>
