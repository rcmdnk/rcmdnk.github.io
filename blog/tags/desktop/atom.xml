<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Desktop | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/desktop/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T11:57:48+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macのデスクトップ上の情報表示]]></title>
    <link href="https://rcmdnk.com/blog/2013/04/19/computer-mac-desktop/"/>
    <updated>2013-04-19T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/04/19/computer-mac-desktop</id>
    <content type="html"><![CDATA[<p><a href="https://rcmdnk.com/blog/2013/04/18/computer-mac-geektool-desktop">前回</a>、<a href="http://projects.tynsoe.org/en/geektool/">GeekTool</a>の紹介をしたので、
今回は現在Macのデスクトップに常駐させている他のアプリについてまとめて
おきたいと思います。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#simple-floating-clock" id="markdown-toc-simple-floating-clock">Simple Floating Clock</a></li>
  <li><a href="#xrg" id="markdown-toc-xrg">XRG</a></li>
  <li><a href="#全体の様子" id="markdown-toc-全体の様子">全体の様子</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="simple-floating-clock">Simple Floating Clock</h2>
<p><a href="http://www.splook.com/Software/Simple_Floating_Clock.html"><img src="https://rcmdnk.com/images/MacApp/SimpleFloatingClock.png" width="100" height="100" alt="Simple Floating Clock" /></a></p>

<p><a href="http://www.splook.com/Software/Simple_Floating_Clock.html">Simple Floating Clock</a>は名前の通りシンプルな時計を表示させるアプリです。
上のキャプチャの様にアナログ時計も表示出来るし、デジタル時計も表示出来ます。</p>

<p>また、複数の時計を同時に表示させる事ができるので、
World Clock的な使い方も出来ます。</p>

<p>最初に立ち上げるとアナログ時計が表示されるので、時計を
右クリック(Control+クリック)メニューを表示させて
設定を行ないます。
(Dockにもメニューバーにも何も表示されません。)</p>

<p><img src="https://rcmdnk.com/images/post/20130419_sfc_rc.jpg" title="" alt="" /></p>

<p>以下の様に設定するとページトップに在るような時計になります。</p>

<p><img src="https://rcmdnk.com/images/post/20130419_sfc_features.jpg" title="" alt="" />
<img src="https://rcmdnk.com/images/post/20130419_sfc_colors.jpg" title="" alt="" /></p>

<p><code>Change Time Zone</code>や新しい時計を追加するために<code>New Clock</code>等を選択すると
タイムゾーンを設定する画面になるので、日本なら<code>Tokyo</code>を選びます。</p>

<p><img src="https://rcmdnk.com/images/post/20130419_sfc_timezone.jpg" title="" alt="" /></p>

<p>そんな感じで現状<code>Tokyo(JST)</code>と<code>Paris(CEST)</code>が画面上にあります。</p>

<p><code>Pass Clicks Through</code>を選択するとドラッグすることも右クリックでメニューを表示
させることも出来なくなり、その場が通常のデスクトップと同じように使える様になります。
メニューバーに表示されたボタンを押せばこの状態を戻す事が出来ます。</p>

<p><img src="https://rcmdnk.com/images/post/20130419_sfc_menubar.jpg" title="" alt="" /></p>

<p>それから<code>All Spaces</code>と言う項目があって、恐らく古いバージョンのOS Xでは
スペースを移動した時にもついてくる様に出来たんだと思うんですが、
手元にあるLionでは項目自体が有効化されてなくて、時計も他のスペースに移ると
着いて来ません。(ここだけ何とかしたい所…)</p>

<h2 id="xrg">XRG</h2>
<p><a href="http://www.gauchosoft.com/Products/XRG/"><img src="https://rcmdnk.com/images/MacApp/XRG.png" width="100" height="100" alt="XRG" /></a></p>

<p><a href="http://www.splook.com/Software/Simple_Floating_Clock.html">XRG</a>は様々な情報を数値やグラフを用いてデスクトップ上に表示してくれるアプリです。
これを使って、CPU/Memory/各パーツの温度、を表示させています。
他にもDiskやさらに天気、株情報(ただしアメリカのみ?)まで表示させる機能があります。</p>

<p>現在使っている設定は以下の通り:</p>

<p><img src="https://rcmdnk.com/images/post/20130419_xrg_setting1.jpg" title="" alt="" />
<img src="https://rcmdnk.com/images/post/20130419_xrg_setting2.jpg" title="" alt="" />
<img src="https://rcmdnk.com/images/post/20130419_xrg_setting3.jpg" title="" alt="" />
<img src="https://rcmdnk.com/images/post/20130419_xrg_setting4.jpg" title="" alt="" />
<img src="https://rcmdnk.com/images/post/20130419_xrg_setting5.jpg" title="" alt="" /></p>

<p>XRGはそのままだとアプリが開いている時にDockにアイコンが表示されますが、
基本的に起動中ずっと動かしている物なので邪魔になります。</p>

<p>そこで<a href="http://boredzo.org/cadt/">Configure Application Dock Tile</a>と
言うアプリを使って起動中もDock上非表示にします。
このアプリは起動するとメニューバーだけ表示されて<code>File</code>^rarr;<code>Open</code>から
アプリケーションを開くと</p>

<p><img src="https://rcmdnk.com/images/post/20130419_cadt.jpg" title="" alt="" /></p>

<p>と言う様なウィンドウが表れるので、表示したくない場合はチェックを外して
ウィンドウを閉じます。そうするとアプリを起動していてもDock上に表示されなくなります。</p>

<h2 id="全体の様子">全体の様子</h2>
<p>GeekToolも含めて全体ではサイドバー的に右側に集める様にこんな感じで表示させています。</p>

<p><img src="https://rcmdnk.com/images/post/20130419_sidebar.jpg" title="" alt="" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GeekTool]]></title>
    <link href="https://rcmdnk.com/blog/2013/04/18/computer-mac-geektool-desktop/"/>
    <updated>2013-04-18T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/04/18/computer-mac-geektool-desktop</id>
    <content type="html"><![CDATA[<p><a href="http://projects.tynsoe.org/en/geektool/">GeekTool</a>で使っていた
<a href="https://github.com/insanum/gcalcli">gcalcli</a>というpythonのアプリケーションが
アップデートされていたのでアップデートついでに整理しておきます。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#geektool" id="markdown-toc-geektool">GeekTool</a></li>
  <li><a href="#gcalcli" id="markdown-toc-gcalcli">gcalcli</a></li>
  <li><a href="#表示させているgeeklet-カレンダー" id="markdown-toc-表示させているgeeklet-カレンダー">表示させているGeeklet: カレンダー</a></li>
  <li><a href="#表示させているgeeklet-予定リスト" id="markdown-toc-表示させているgeeklet-予定リスト">表示させているGeeklet: 予定リスト</a></li>
  <li><a href="#表示させているgeeklet-タスクリスト" id="markdown-toc-表示させているgeeklet-タスクリスト">表示させているGeeklet: タスクリスト</a></li>
  <li><a href="#表示させているgeeklet-cpumemory情報" id="markdown-toc-表示させているgeeklet-cpumemory情報">表示させているGeeklet: CPU/Memory情報</a></li>
  <li><a href="#設定" id="markdown-toc-設定">設定</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="geektool">GeekTool</h2>

<div class="group">
<a href="http://projects.tynsoe.org/en/geektool/" target="_blank" rel="nofollow"><img width="75" class="alignleft" align="left" src="http://a3.mzstatic.com/us/r1000/101/Purple/05/02/3a/mzi.wldskqbn.75x75-65.png" style="border-radius: 11px 11px 11px 11px;-moz-border-radius: 11px 11px 11px 11px;-webkit-border-radius: 11px 11px 11px 11px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;" /></a>
<div style="font-size:small;line-height:1.2;"><a href="http://projects.tynsoe.org/en/geektool/" target="_blank" rel="nofollow"><strong>GeekTool 3.1.1（無料）</strong></a><br />カテゴリ: ユーティリティ, 開発ツール<br /> 販売元:<a href="http://projects.tynsoe.org/en/geektool/" target="_blank" rel="nofollow"> Tynsoe.org - Yann Bizeul</a>（サイズ: 1.1 MB）</div>
</div>

<p>デスクトップ上に情報を表示させる方法は沢山ありますが、
GeekToolはMacで最も自由に表示をカスタマイズ出来るアプリの1つだと思います。</p>

<p>中でも、”Shell”と言うGeeklet(情報を表示するウィンドウ)を作る事が出来て、
適当なコマンドの出力結果をデスクトップに表示することが出来ます。</p>

<p>自分の環境ではこれを使ってGoogleカレンダーの予定やCPU/Memory情報の一部などを
表示させています。</p>

<h2 id="gcalcli">gcalcli</h2>
<p><a href="https://github.com/insanum/gcalcli">gcalcli</a>はpythonで作られた
Googleカレンダーを操作することが出来るアプリケーションです。</p>

<p>インストールは上記ページから直接ダウンロードするか<code>git clone</code>で。</p>

<p>以前のパージョンでは必要なかったのですが、(v3から?)Google API Clientを使う
様になったので、これをインストールしておく必要があります。</p>

<p>gcalcliのインストールも含めて以下の様な感じで</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ cd /tmp
</span><span class="line">$ git clone git://github.com/insanum/gcalcli.git
</span><span class="line">$ mkdir -p ~/usr/bin # or as you like (in $PATH)
</span><span class="line">$ cp gcalcli/gcalcli ~/usr/bin
</span><span class="line">$ sudo  easy_install --upgrade google-api-python-client</span></code></pre></td></tr></table></div></figure>

<p>以前のバージョンをインストールしていた場合、ユーザー名や
パスワードを書いた<code>~/.gcalclirc</code>と言うファイルがあるかもしれませんが、
新しいバージョンではユーザー名等は必要ないので特に凝った設定をしてない限りは
削除するかどこかへ移動させて置いた方が良いです(でないと新しいスクリプトでは
理解出来ない項目が出てきてクラッシュします)。</p>

<p>インストールしたら</p>

<pre><code>gcalcli list
</code></pre>

<p>などとするとデフォルトブラウザが開いて</p>

<p><img src="https://rcmdnk.com/images/post/20130418_gcalcliauth.jpg" title="" alt="" /></p>

<p>の様に許可をするかどうか聞かれるので<code>アクセスを許可</code>をクリック。</p>

<p>すると、<code>$HOME</code>に<code>.gcalcli_oauth</code>と言うファイルが出来ているはずで、
これが今後認証のために使われます。</p>

<p>以降、同じように<code>gcalcli list</code>等とすればすぐにカレンダーのリストが
表れる様になります。</p>

<p><code>gcalcli agenda</code>とすると予定の一覧が見れ、さらに<code>--calendar [カレンダー名]</code>
オプションを与える事で予定を見るカレンダーを絞れます
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<h2 id="表示させているgeeklet-カレンダー">表示させているGeeklet: カレンダー</h2>
<p><img src="https://rcmdnk.com/images/post/20130418_gcalCal.jpg" title="" alt="" /></p>

<p>まず1つ目はカレンダーです。見て分かる様にコマンド<code>cal</code>の様な出力にしています。</p>

<p>この出力は<a href="https://github.com/rcmdnk/scripts/blob/master/gcalCal.sh">gcalCal.sh</a>
というスクリプトで作っています。</p>

<p>やっていることは</p>

<ul>
  <li><code>date</code>コマンドを使って今月の日付一覧と(1日や31日と同じ週にある)前後の月の
埋め合わせ日付のリストを作る。</li>
  <li>Googleカレンダーから予定のリストを取ってきて予定のある日をチェック。
    <ul>
      <li><code>Holidays</code>という名前を含むカレンダーの予定は別に取得。</li>
    </ul>
  </li>
  <li>当日は色反転、予定のある日は<code>'</code>を、休みの日にはアンダーバーを付ける様にして
出力。</li>
</ul>

<p>白黒だけでやろうとしているので<code>'</code>などを使っていますが、
色を使って良いのであれば休日は赤にして予定のある日にアンダーバーにする、
と言った方がすっきりすると思います。</p>

<h2 id="表示させているgeeklet-予定リスト">表示させているGeeklet: 予定リスト</h2>
<p><img src="https://rcmdnk.com/images/post/20130418_gcalList.jpg" title="" alt="" /></p>

<p>カレンダーの下には予定リストを表示しています。</p>

<p>場所を選ばなければ単に<code>gcallist agenda</code>の結果でも良いのですが、
オリジナルのままだと幅を取ってしまうので、
まず<code>gcalcli</code>自体を少しいじって
<code>agenda</code>の表示方法を変えています。(使っている<code>gcalcli</code>は<code>v3.1</code>)</p>

<div><script src="https://gist.github.com/5373541.js"></script>
<noscript><pre><code>diff --git a/gcalcli b/gcalcli
index f5cc390..c39bc84 100755
--- a/gcalcli
+++ b/gcalcli
@@ -1074,7 +1074,7 @@ class gcalcli:
                     new_descr += wrapper.fill(line) + &quot;\n&quot;
             return new_descr.rstrip()

-        indent = 10 * &#39; &#39;
+        indent = &#39;&#39;
         detailsIndent = 19 * &#39; &#39;

         if self.military:
@@ -1092,11 +1092,11 @@ class gcalcli:
         PrintMsg(self.dateColor, prefix)
         if event[&#39;s&#39;].hour == 0 and event[&#39;s&#39;].minute == 0 and \
            event[&#39;e&#39;].hour == 0 and event[&#39;e&#39;].minute == 0:
-            fmt = &#39;  &#39; + timeFormat + &#39;  %s\n&#39;
+            fmt = &#39; %s\n&#39;
             PrintMsg(self._CalendarColor(event[&#39;gcalcli_cal&#39;]), fmt %
-                     (&#39;&#39;, self._ValidTitle(event).strip()))
+                     (self._ValidTitle(event).strip()))
         else:
-            fmt = &#39;  &#39; + timeFormat + &#39;  %s\n&#39;
+            fmt = &#39; &#39; + timeFormat + &#39; %s\n&#39;
 #            if &#39;summary&#39; not in event:
 #                dprint(event)
             PrintMsg(self._CalendarColor(event[&#39;gcalcli_cal&#39;]), fmt %
@@ -1318,7 +1318,7 @@ class gcalcli:
             return

         # 10 chars for day and length must match &#39;indent&#39; in _PrintEvent
-        dayFormat = &#39;\n%F&#39; if yearDate else &#39;\n%a %b %d&#39;
+        dayFormat = &#39;%d(%a)/%b/%Y:\n&#39;
         day = &#39;&#39;

         for event in eventList:
@@ -1500,6 +1500,17 @@ class gcalcli:

         eventList = self._SearchForCalEvents(start, end, None)

+        # Remove duplications
+        events=[]
+        newEventList=[]
+        for e in eventList:
+            if e[&#39;summary&#39;] not in events:
+                newEventList.append(e)
+                events.append(e[&#39;summary&#39;])
+        eventList = newEventList
+
         if self.tsv:
             self._tsv(start, eventList)
         else:</code></pre></noscript></div>

<p>上の変更で、さらに同じ名前の予定が複数ある時は最初だけを表示する様にしています。
(毎週ある予定等の重複表示を避けるため)</p>

<p>この変更を行った<code>gcalcli</code>を<a href="https://github.com/rcmdnk/scripts/blob/master/gcalList.sh">gcalList.sh</a>
というスクリプトを使って最終的に表示させています。</p>

<p>このスクリプトでは
<code>gmail</code>、<code>Facebook</code>、<code>Time</code>と付いたカレンダーのみに情報を取得して
表示させています。</p>

<h2 id="表示させているgeeklet-タスクリスト">表示させているGeeklet: タスクリスト</h2>
<p>現在実際には使っていないのですが、iCalでのイベントを
コマンドラインから呼べる<a href="http://hasseg.org/icalBuddy/">icalBuddy</a>
と言うツールがあり、
これを使ってタスクリストを表示させていました。</p>

<p><code>icalBuddy</code>をインストール後</p>

<pre><code>`/usr/local/bin/icalBuddy uncompletedTasks | sed -e "s/*/-/"`
</code></pre>

<p>というコマンドを与えたGeekletです。</p>

<p>(現在はタスクリストはGoogle Taskに書き込んでいて、
iCalとは同期させていないので何も表示されません。)</p>

<h2 id="表示させているgeeklet-cpumemory情報">表示させているGeeklet: CPU/Memory情報</h2>
<p><img src="https://rcmdnk.com/images/post/20130418_myps.jpg" title="" alt="" /></p>

<p>最後にCPUやMemoryを使っているアプリの情報です。
これは<code>ps</code>の出力をちょっといじった出力にしています。</p>

<p>スクリプトは<a href="https://github.com/rcmdnk/scripts/blob/master/myps.sh">myps.sh</a>
です。</p>

<h2 id="設定">設定</h2>
<p><img src="https://rcmdnk.com/images/post/20130418_gt_gcalCal.jpg" title="" alt="" /></p>

<p>上の例はカレンダー表示の例ですが、
このように<code>Command</code>欄にスクリプトを記入します。
その下にある数字で何秒ごとに更新するか(Refresh every)、と
Timeoutの時間を設定します(上の例では5分毎)。</p>

<p>Position, Sizeは直接ウィンドウをいじっても変更出来ます。</p>

<p>フォントサイズはCPU/Memory情報が11ptで他は12ptにしています。</p>

<p>全部合わせて下の様な感じで、画面の右端に表示してあります。</p>

<p><img src="https://rcmdnk.com/images/post/20130418_geektoolAll.jpg" title="" alt="" /></p>

]]></content>
  </entry>
  
</feed>
