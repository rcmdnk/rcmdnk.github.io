<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: SVN | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/svn/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-11T22:46:49+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SVNで管理下のファイルを実行ファイルにする方法]]></title>
    <link href="https://rcmdnk.com/blog/2015/07/23/computer-svn/"/>
    <updated>2015-07-23T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2015/07/23/computer-svn</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4873114144?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4873114144&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51t4YO0oUvL._SS200_.jpg" alt="実用 Subversion 第2版" /></a>
</div>

<p>SVN Tips.</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#ファイルを実行ファイルにする" id="markdown-toc-ファイルを実行ファイルにする">ファイルを実行ファイルにする</a></li>
  <li><a href="#その他のsvn-tips" id="markdown-toc-その他のsvn-tips">その他のSVN Tips:</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="ファイルを実行ファイルにする">ファイルを実行ファイルにする</h2>

<p>SVNに実行ファイルとして登録したいとき、
最初から実行ファイルとして登録すると他でチェックアウトしても実行ファイル
として作られますが、
一度普通のファイルとして管理下に加えた後に実行ファイルとしたい場合、
<code>chmod 755 file</code>みたいにしてもSVNでのファイルのタイプは変更されません。</p>

<pre><code>$ svn ls
test.sh
$ ls -l
-rw-r--r-- ... test.sh
$ svn status
$ chmod 755 test.sh
$ svn status
$
</code></pre>

<p>と何も起こりませんしコミットもできません。</p>

<p>ファイルの内容を変更してコミットしても、他の場所で
チェックアウトすると<code>644</code>な実行ファイルでない形でコピーが作られます。</p>

<p>SVN上でのファイルタイプを変更するには</p>

<pre><code>$ svn propset svn:executable on test.sh
property 'svn:executable' set on 'test.sh'
</code></pre>

<p>と、<code>svn propset</code>(または<code>svn pset</code>、<code>svn ps</code>)というコマンドを使って
<code>svn:executable</code>という特性を追加します。</p>

<p>各ファイルがどのような特性を持ってるかは</p>

<pre><code>$ svn proplist test.sh
Properties on 'test.sh':
  svn:executable
</code></pre>

<p>と、<code>svn proplist</code>(またはi<code>svn plist</code>、<code>svn pl</code>)を使って見れます。</p>

<p>この特性を削除するには</p>

<pre><code>$ snv propdel svn:executable test.sh
property 'svn:executable' deleted from 'test.sh'.
</code></pre>

<p>と<code>svn propdel</code>(または<code>svn pdel</code>、<code>svn pd</code>)を使います。</p>

<p>後、どうでもいいことですが何故か<code>propset</code>はメッセージの後にピリオドが付いてないのに
<code>propdel</code>の方は付いてますね。
(ちょっとWebにあるexampleを幾つか見たところやはりそうらしい。。。)</p>

<h2 id="その他のsvn-tips">その他のSVN Tips:</h2>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2014/11/08/computer-svn/">SVN tips</a></p>
</blockquote>

<ul>
  <li>@入りファイル</li>
  <li>svnのdiff</li>
  <li>ファイルだけチェックアウト</li>
  <li>プロテクト</li>
  <li>SVNで接続のチェック</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN tips]]></title>
    <link href="https://rcmdnk.com/blog/2014/11/08/computer-svn/"/>
    <updated>2014-11-08T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2014/11/08/computer-svn</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4873114144?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4873114144&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51t4YO0oUvL._SS200_.jpg" alt="実用 Subversion 第2版" /></a>
</div>

<p>SVNでたまに忘れて困ることとか
便利にする方法とか。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#入りファイル" id="markdown-toc-入りファイル">@入りファイル</a></li>
  <li><a href="#svnのdiff" id="markdown-toc-svnのdiff">svnのdiff</a></li>
  <li><a href="#ファイルだけチェックアウト" id="markdown-toc-ファイルだけチェックアウト">ファイルだけチェックアウト</a></li>
  <li><a href="#プロテクト" id="markdown-toc-プロテクト">プロテクト</a></li>
  <li><a href="#svnで接続のチェック" id="markdown-toc-svnで接続のチェック">SVNで接続のチェック</a></li>
  <li><a href="#関係ないけど気をつけようと言う話" id="markdown-toc-関係ないけど気をつけようと言う話">関係ないけど気をつけよう、と言う話</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="入りファイル">@入りファイル</h2>

<p>SVNでは<code>@</code>はリビジョン指定に使います。</p>

<pre><code>$ svn rm file@aaa
</code></pre>

<p>というコマンドを打つと、<code>aaa</code>というリビジョンの<code>file</code>を操作しようとします。
<code>file@aaa</code>というファイルにはなりません。</p>

<pre><code>$ svn rm file\@aaa
</code></pre>

<p>のようにしても<code>aaa</code>リビジョンの<code>file\ </code>を見ようとします。</p>

<p>一方、<code>svn add</code>等は<code>svn add file@aaa</code>で<code>file@aaa</code>というファイルを
加える事ができたりするので、一度登録した後、後で操作しようとした時に
操作できなくて困ることがあります。</p>

<p>この様なファイルをいじるには、もう一つ<code>@</code>を加えればOK。</p>

<pre><code>$ svn rm file@aaa@
</code></pre>

<p>これは</p>

<pre><code>$ svn rm file@aaa@HEAD
</code></pre>

<p>と同じ意味になるので、通常何も付けない時のHEADからのrmと同じ意味になります。</p>

<p>ただ、SVNだけでなく、普通にコマンドラインで呼ぶときにもエスケープしなきゃいけなかったり
することもあるので、
特別な理由がない限り普段から<code>@</code>なんて入ったファイル名を作るのは避けた方が無難です。</p>

<h2 id="svnのdiff">svnのdiff</h2>

<p>以下のようなvimdiffのラッパースクリプトを用意します。</p>

<figure class="code"><figcaption><span>svndiff.sh</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span></span><span class="ch">#!/usr/bin/env bash</span>
</span><span class="line">vimdiff <span class="nv">$6</span> <span class="nv">$7</span>
</span></code></pre></td></tr></table></div></figure>

<p>これをPATHの通ったディレクトリなどに置いておいて、
SVNの<code>diff-cmd</code>に指定します。</p>

<p><code>diff-cmd</code>に渡される引数は7つあって、
例えば現在居るディレクトリに<strong>ChangeLog</strong>と言ったファイルがあって、
そのファイルで<code>svn diff ChangeLog</code>すると以下の様な引数が渡されます。</p>

<ul>
  <li><code>$1</code>: -u</li>
  <li><code>$2</code>: -L</li>
  <li><code>$3</code>: ChangeLog (revision 123)</li>
  <li><code>$4</code>: -L</li>
  <li><code>$5</code>: ChangeLog (working copy)</li>
  <li><code>$6</code>: .svn/text-base/ChangeLog.svn-base</li>
  <li><code>$7</code>: ChangeLog</li>
</ul>

<p>となります。
<code>-u</code>や<code>-L</code>は<code>diff</code>コマンドのオプションで、つまり、デフォルトでは</p>

<pre><code>$ diff diff -u -L "ChangeLog (revision 123)" -L "ChangeLog (working copy)" .svn/text-base/ChangeLog.svn-base  ChangeLog
</code></pre>

<p>というコマンドが呼ばれてることになります<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p><code>-u</code>はdiffの出力をUnified形式(patchとかで使える形式)にするためのオプション、
<code>-L</code>は入力ファイルのそれぞれのラベルを付けるためのオプション。</p>

<p><strong>.svn/text-base/ChangeLog.svn-base</strong>が現在のHEADバージョンに当たるもので
(上ではHEADのリビジョン番号123)、
それと実際に作業している<strong>ChangeLog</strong>との比較をしています。</p>

<p>なので、他のdiffツールを使いたい場合にも、
基本的に<code>$6</code>と<code>$7</code>を引数として与えれば使えます。</p>

<p><code>diff-cmd</code>の設定は<strong>~/.subversion/config</strong>へ</p>

<figure class="code"><figcaption><span>~/.subversion/config</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[helpers]
</span><span class="line">diff-cmd = svndiff.sh</span></code></pre></td></tr></table></div></figure>

<p>と設定しておけば</p>

<pre><code>$ svn diff file
</code></pre>

<p>とするだけでdiffがvimdiffで見れる様になります。</p>

<p>デフォルトの<code>diff</code>を使いたい場合には</p>

<pre><code>$ svn diff file --diff-cmd diff
</code></pre>

<p>と<code>--diff-cmd</code>で<code>diff</code>コマンドを指定します。</p>

<p>もし、通常はデフォルトdiffを使いたくてたまに<code>vimdiff</code>を使いたい場合には、
<strong>~/.subversion/config</strong>では<code>diff-cmd</code>を指定せずに、
使いたい時だけ</p>

<pre><code>$ svn diff file --diff-cmd svndiff.sh
</code></pre>

<p>としてあげればOK。</p>

<blockquote>
  <p><a href="http://evilshit.wordpress.com/2013/09/03/how-to-make-diffs-of-svn-and-git-files-with-vimdiff/">How to make diffs of SVN and Git files with vimdiff</a></p>
</blockquote>

<h2 id="ファイルだけチェックアウト">ファイルだけチェックアウト</h2>

<p>大量のファイルがあるレポジトリの一部のファイルだけを変更したり
見てみたかったりする場合、
全部を取るのが大変なので一部だけ取ってきたい場合があります。</p>

<p>この場合、ファイルだけいきなりチェックアウトする方法は無いので、
一度上のディレクトリをemptyでチェックアウトして
その後で<code>update</code>を使って必要なファイルだけ取ってくることが出来ます。</p>

<pre><code>$ svn checkout --depth empty svn://dir/repo/
$ cd repo
$ svn update file
</code></pre>

<p>とすると<strong>svn://dir/repo/</strong>に大量のファイルやディレクトリがあっても、
<strong>svn://dir/repo/file</strong>だけ取ってくることが出来ます。</p>

<h2 id="プロテクト">プロテクト</h2>

<p>作業中に他の人に変更されないように、<code>lock</code>コマンドでファイル単位で
プロテクトをかけることが出来ます。
ただ、これはファイルごとでディレクトリごとする方法はありません。</p>

<p>また、この場合にも<code>lock --force</code>で他人が取る事は可能。</p>

<p>この辺簡単に何とかできないかな、と思ってちょっと調べてみましたが、
結局サーバー側で設定したりするしかなさそう。</p>

<blockquote>
  <p><a href="http://svnbook.red-bean.com/nightly/en/svn.serverconfig.pathbasedauthz.html">Path-Based Authorization</a></p>
</blockquote>

<blockquote>
  <p><a href="http://stackoverflow.com/questions/17085277/cannot-lock-all-files-in-directory-using-svn">Cannot lock all files in directory using SVN - Stack Overflow</a></p>
</blockquote>

<blockquote>
  <p><a href="http://www.ne.jp/asahi/hishidama/home/tech/svn/command.html#svn_commit">SVNコマンドメモ(Hishidama’s Subversion command Memo)</a></p>
</blockquote>

<h2 id="svnで接続のチェック">SVNで接続のチェック</h2>

<p>SVNを使っててcheckout等で何か接続のせいとかで上手く出来ない場合、</p>

<pre><code>$ export SVN_SSH="ssh -v "
</code></pre>

<p>としておくと接続にverboseモードの<code>ssh</code>を使ってくれるので
どこで認証がおかしくなってるか分かります。</p>

<p><strong>~/.ssh/known_hosts</strong>が悪さをしてて、これを削除するか、
中にある該当ホストを消すとうまくいくことがよくあります。</p>

<h2 id="関係ないけど気をつけようと言う話">関係ないけど気をつけよう、と言う話</h2>

<p>SVNに限った話ではないですが、Webサイト等のソースをSVN等で管理してる場合、
それらの<strong>.svn</strong>ディレクトリ等もそのまま公開場所に送ってしまって
それらから情報が漏れてしまう、ということがちょっと前に話題になってました。</p>

<blockquote>
  <p><a href="http://security.slashdot.jp/story/09/09/25/0246256/%E3%80%8C.svn%E3%80%8D%E3%80%8CCVS%E3%80%8D%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E7%8B%99%E3%81%A3%E3%81%A6Web%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E9%9D%9E%E5%85%AC%E9%96%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%82%B2%E3%83%83%E3%83%88">「.svn」「CVS」ディレクトリを狙ってWebサイトの非公開ファイルをゲット</a></p>
</blockquote>

]]></content>
  </entry>
  
</feed>
