<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Network | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/network/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2025-11-01T00:19:32+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="https://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wi-Fi6アダプター WI-U3-1200AX2]]></title>
    <link href="https://rcmdnk.com/blog/2021/12/08/computer-network/"/>
    <updated>2021-12-08T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/12/08/computer-network</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B09L4WDPLQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09L4WDPLQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/512y2yMS8ZL._SS200_.jpg" alt="バッファロー 11ax/ac/n/a/g/b 無線LAN子機 USB3.0 内蔵アンテナタイプ WI-U3-1200AX2/N" /></a>
</div>

<p>バッファローからWI-U3-1200AX2というUSBで接続できるWi-Fi 6対応のアダプタが出たので
ちょっとデスクトップPCをWi-Fi運用しようかと思ってます。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#デスクトップpcのネットワーク事情" id="markdown-toc-デスクトップpcのネットワーク事情">デスクトップPCのネットワーク事情</a></li>
  <li><a href="#wi-u3-1200ax2" id="markdown-toc-wi-u3-1200ax2">WI-U3-1200AX2</a></li>
  <li><a href="#速度" id="markdown-toc-速度">速度</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="デスクトップpcのネットワーク事情">デスクトップPCのネットワーク事情</h2>

<p>デスクトップはどうせ動かさないので有線で、という感じで運用してますが、
ネットワーク口から離れたところにあるとケーブルの取り回しが面倒なのでなんだかんだ設置場所がある程度制限されてしまっています。</p>

<p>最近ルーターを新しくして無線も高速に使えるようになったので、少なくとも今家まで来ているネットワーク速度位なら
有線だろうが無線だろうが同じくらいになるだろう、ということで
デスクトップも無線で運用してもっと自由にさせようかと。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31oTx5E70QL._SS200_.jpg" alt="BUFFALO 無線LANルーター AirStation マットブラック WSR-5400AX6-MB" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">BUFFALO 無線LANルーター AirStation マットブラック WSR-5400AX6-MB</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWSR-5400AX6-MB%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWSR-5400AX6-MB%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31oTx5E70QL._SS90_CR0,0,120,90_.jpg" alt="BUFFALO 無線LANルーター AirStation マットブラック WSR-5400AX6-MB" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/09/21/computer-network/">インターネット無料なマンションでのインターネット</a></div></li></ul>

<p>一応以前、ちょっと遊びで買ったTL-WN823Nというアダプタがあるんですが、
これだと速くて数10Mbps程度でちょっと残念なのでちゃんとしたアダプタを買ってみました。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0088TKTY2?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0088TKTY2&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/619HshGVjcL._SS200_.jpg" alt="TP-Link 11n/g/b対応 300Mbps Mac OS/Windows対応 無線LAN子機 超小型 USB2.0 3年保証 TL-WN823N" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B0088TKTY2?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0088TKTY2&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">TP-Link 11n/g/b対応 300Mbps Mac OS/Windows対応 無線LAN子機 超小型 USB2.0 3年保証 TL-WN823N</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B0088TKTY2?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0088TKTY2&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTL-WN823N%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTL-WN823N%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<h2 id="wi-u3-1200ax2">WI-U3-1200AX2</h2>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B09L4WDPLQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09L4WDPLQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/512y2yMS8ZL._SS200_.jpg" alt="バッファロー 11ax/ac/n/a/g/b 無線LAN子機 USB3.0 内蔵アンテナタイプ WI-U3-1200AX2/N" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B09L4WDPLQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09L4WDPLQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">バッファロー 11ax/ac/n/a/g/b 無線LAN子機 USB3.0 内蔵アンテナタイプ WI-U3-1200AX2/N</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B09L4WDPLQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09L4WDPLQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWI-U3-1200AX2%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWI-U3-1200AX2%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>WI-U3-1200AX2はUSB接続タイプのWi-Fiアダプタで、Wi-Fi 6に国内初対応したものだそうです。</p>

<p>IEEE802.11axに対応してて、USB 3を使うことで1201Mbpsで速度を落とさないで通信できるとのこと。</p>

<p>また、延長ケーブルによってアダプタ自体をPCからちょっと離れたところに設置することも可能です。
5GHzで運用して別の部屋にルーターがあるときに、ふすまとかであればアダプタだけ隣の部屋まで持ってくるとか。</p>

<p>実際にはそれはあまり実用的ではなく、必要ならメッシュWiFiとかで同じ部屋までは持ってきたいところですが、
デスクトップPCだと机の下など隠れたところに設置してることもあり、そういった場合にはUSBスロット直挿しよりは
机の上とかに延長しておいておくと良いのでは、と。</p>

<p>デスクトップなのでLANカード的なものも考えましたが、
USBで出来るなら楽だし上のようなアンテナ部分の延長があるのでむしろWI-U3-1200AX2のが良さげかな、と思ってます。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B085M7VPDP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B085M7VPDP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51G9C1I64AL._SS200_.jpg" alt="INTEL WiFiモジュール（802.11）Wi-Fi 6（Gig +）デスクトップキット AX200.NGWG.DTK 【 日本正規流通品 】" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B085M7VPDP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B085M7VPDP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">INTEL WiFiモジュール（802.11）Wi-Fi 6（Gig +）デスクトップキット AX200.NGWG.DTK 【 日本正規流通品 】</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B085M7VPDP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B085M7VPDP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FAX200.NGWG.DTK%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FAX200.NGWG.DTK%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>ちなみに、WI-U3-1200AX2はWI-U3-1200AX2/Nと<code>/N</code>がついた製品もあるのですが、
基本的には同じもので<code>/N</code>の方が販路が別なだけな様です。</p>

<ul>
  <li><a href="https://www.buffalo.jp/product/detail/wi-u3-1200ax2.html">WI-U3-1200AX2 : Wi-Fiアダプター : AirStation  バッファロー</a></li>
  <li><a href="https://www.buffalo.jp/product/detail/wi-u3-1200ax2_n.html">WI-U3-1200AX2/N : Wi-Fiアダプター : AirStation  バッファロー</a></li>
</ul>

<p>Amazonだと<code>/N</code>をバッファロー直売で売ってるので直売用?</p>

<p>というわけで、とりあえず買ってみました。</p>

<p>購入して開けてみると、結構大きいな、と言う印象でした。指の長さくらいあってPCの前面とかに指しておくとちょっと邪魔なくらい。</p>

<p>ひっかけて壊しそうなので、ルーターとの疎通が良くても延長ケーブル使っておいた方が安全かな、と思う感じもしてます。</p>

<h2 id="速度">速度</h2>

<p>今うちに来てるネットワークが最大でもたかだか300Mbps程度なので大したこと無いんですが、
ちょっと試した感じでは5GHzの接続では有線と同じ位の速度が出ていました。</p>

<p>有線、5GHz接続で300MHz程度のときに2.4GHz接続だと100MHz位。</p>

<p>もっと良い環境の人とかの情報を見ても1Gbpsとか近くでも有線と同じような速度が出てるっぽいので
とりあえず現状では無線で何も問題有りません。</p>

<p>WI-U3-1200AX2が5000円位するので有線で繋げられるところにおいてあるなら無理に無線にする必要ないですが、
PCの置き場を無理にネットワーク口近くにしていたり、イーサネットケーブルが結構邪魔、となってしまっている
環境なら置き換えちゃって良いのでは、と。</p>

<p>上のTL-WN823Nだとホント指先サイズなので、そこまで行かなくても今の半分くらいの大きさになってくれると
直挿しでもあまり考えずに使えるようになるとは思いました。</p>

<p>多分まだ新しく出たばっかりのもので、今後他のメーカーも含めて小型機が出てくるとは思うので
今特に必要ないならそういったもの待ってから試してみるでも良いかもな、とも。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターネット無料なマンションでのインターネット]]></title>
    <link href="https://rcmdnk.com/blog/2021/09/21/computer-network/"/>
    <updated>2021-09-21T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/09/21/computer-network</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31oTx5E70QL._SS200_.jpg" alt="BUFFALO 無線LANルーター AirStation マットブラック WSR-5400AX6-MB" /></a>
</div>

<p>前に住んでいたところがいわゆる「インターネット無料」となっていたマンションだったのですが、
その際に色々と分かったことがあったのでそれについて。</p>

<p>色々なケースがあるとは思いますが、そのひとつとしてこの様なケースが有ると、というと
例として。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#インターネット無料なマンション" id="markdown-toc-インターネット無料なマンション">インターネット無料なマンション</a></li>
  <li><a href="#無料のインターネットの使い方" id="markdown-toc-無料のインターネットの使い方">無料のインターネットの使い方</a></li>
  <li><a href="#付属していたルーター" id="markdown-toc-付属していたルーター">付属していたルーター</a></li>
  <li><a href="#プロバイダー" id="markdown-toc-プロバイダー">プロバイダー</a></li>
  <li><a href="#buffalo-wsr-300hp" id="markdown-toc-buffalo-wsr-300hp">BUFFALO WSR-300HP</a></li>
  <li><a href="#buffalo-wsr-5400ax6" id="markdown-toc-buffalo-wsr-5400ax6">BUFFALO WSR-5400AX6</a></li>
  <li><a href="#tp-link-archer-ax73" id="markdown-toc-tp-link-archer-ax73">TP-Link Archer AX73</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="インターネット無料なマンション">インターネット無料なマンション</h2>

<p>最近「インターネット無料」だったり「Wi-Fi無料」をうたった賃貸マンションが増えてます。</p>

<p>ただ、こういったマンションだとその「無料」のインターネット回線が遅かったりすると
別途契約できない場合もあったりして逆に辛い環境だったりすることもあります。</p>

<p>これの難しいところが、事前にきちんとその環境を調べることが難しい、ということで、
不動産屋さんに聞いても、そもそもインターネット速度について全く理解してない場合もあります。</p>

<p>特に現在はリモートワークも当たり前の様に行われるようになってきて、もし遅い回線だと
仕事もできない、ということで結構クリティカルな問題だったりもします。</p>

<p>というわけで、安易に選んでしまって後悔したという話もよく聞くのですが、
一例としてこういうケースがあった、という例を紹介してみたいと思います。</p>

<p>ここの場合は、一応住む前に自分で契約することも可能か、ということを聞きましたが、
出来るかもしれないけど、という程度でよくわからない状態ではありました。</p>

<p>一応あるもの使おうと思って余り深く聞きませんでしたが、
この辺、不動産屋さんは結構単純に知らないことも多いので、
不安な場合はちゃんと調べてわかるようにしておいた方が良いとは思います。</p>

<h2 id="無料のインターネットの使い方">無料のインターネットの使い方</h2>

<p>色々なケースがあると思いますが、うちの場合は部屋にあるLANの口に用意されている
ルーターを接続して無線LANで接続、という形でした。</p>

<p><img src="https://rcmdnk.com/images/post/20210921_lan.jpg" alt="20210921_lan.jpg" class="pic" /></p>

<p>インターネット無料、という環境が初めてだったので、最初はそのルーターがモデム的な何か
も兼ねていると思っていました。</p>

<p>が、実はそんなことはなくて、部屋まで普通に回線が来ていてWi-Fi飛ばすためだけに
ルーターがー用意されているようでした。</p>

<p>実際、壁から直接有線でPCにつないでも使える状態。</p>

<p>使ってるときにきちんと見てませんでしたが、上の写真を見てみると分かる通り、
<strong>LAN Cat5e</strong>となっています。</p>

<p>あまり意識せずにCat6のケーブルとかも使ってましたが、ここの時点で5eだとすると
以降6でも5eでもあまり意味ないことに。</p>

<p>なのでネットワークが直接来てるのでそこから自由に使えるような状態でした。
ルーターが用意されているのはWi-Fiをすぐに使うためのもの、という感じでした。</p>

<h2 id="付属していたルーター">付属していたルーター</h2>

<p>付属していたルーターはIEEE802.11n/g/bが使える最大300Mbpsの無線接続、
及び100Mbpsの有線LANポートが1つ着いたものでした。</p>

<p>このルーターを経由して使っていたとき、無線だと良くて下りで30Mbps程度、
有線だと90Mbps程度でした。</p>

<p>無線があまり出てませんが、有線だとほぼほぼ限界値まで出ていた感じです。</p>

<p>で、ちょっと直接壁の口から有線でつなげて図ってみると300Mbpsくらい出ました。</p>

<p>というわけで、ルーターがかなりネックになっていたようです。</p>

<h2 id="プロバイダー">プロバイダー</h2>

<p>居住を開始するときにインターネットを使う方法、的な説明書をもらってましたが、
よく呼んでみるとプロバイダーも書いてありました。</p>

<ul>
  <li><a href="http://www.ccccc5.com/service/service109.html">マンションインターネットサービス 株式会社シーファイブ</a></li>
</ul>

<p>というところ。</p>

<ul>
  <li><a href="https://minsoku.net/speeds/optical/services/ccccc5-internet">シーファイブ インターネットの速度測定結果(実測値)  下り速度・上り速度の平均値を公開中！  みんなのネット回線速度(みんそく)</a></li>
</ul>

<p>を見るとそこまで悪くない感じです。</p>

<p>集合住宅用なのでもちろん他の人の使い方にも大きく依存しますが、
インターネット無料のマンション、というのはまともに使おうと思うと辛いという話が
多い気がするのでそれに比べると全然使える、と言った感じはします。</p>

<p>上のみんそくの結果を見ていると、ルーターの制限がやはりきついので、
自分でルーターを用意して繋いでみることに。</p>

<p>ちょっと自分のところだけ、と思うとあれなんですが、ただWi-Fiをちょっと探ってみると
他の家の人も大体違うルーターを使ってるような感じが明らかに見えたので
むしろ替えないと損してる感が気づいたときにはありました。。。</p>

<h2 id="buffalo-wsr-300hp">BUFFALO WSR-300HP</h2>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00R40TTV0?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00R40TTV0&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51cQpwhtoFL._SS200_.jpg" alt="BUFFALO WSR-300HP" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B00R40TTV0?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00R40TTV0&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">BUFFALO WSR-300HP</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B00R40TTV0?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00R40TTV0&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FBUFFALO+WSR-300HP%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FBUFFALO+WSR-300HP%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>まずはちょっと試しにこれを買ってみました。</p>

<p>IEEE802.11n/g/bに対応で、無線は付属のものと同じようなものですが、
有線がLANポート二口あって、それぞれ1000Mbpsに対応しています。
無線の周波数は2.4GHzのみに対応しています。</p>

<p>これを使ってみると有線だと調子が良いときで300Mbpsほど、
無線だとあまり変わらず数10Mbps程度でした。</p>

<h2 id="buffalo-wsr-5400ax6">BUFFALO WSR-5400AX6</h2>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/31oTx5E70QL._SS200_.jpg" alt="BUFFALO 無線LANルーター AirStation WSR-5400AX6-MB" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">BUFFALO 無線LANルーター AirStation WSR-5400AX6-MB</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B089PZWMZT?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B089PZWMZT&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FBUFFALO+WSR-5400AX6-MB%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FBUFFALO+WSR-5400AX6-MB%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>無線も頑張ればもっと出そう、ということでこれを買ってみました。
IEEE802.11axまで対応したルーター。</p>

<p>2.4GHzと5GHzの周波数にも対応。
5GHzで4803Mbps、2.4GHzで573Mbpsの最大転送速度が出ます。</p>

<p>LANポートは1000Mbpsで3口。</p>

<p><strong>無線引っ越し機能</strong>を使うと元のSSIDもそのまま移行して使えるので便利でした。
IoT関連で色々と無線使ってるのを一つ一つ変えるの面倒だな、と思ってたので
この機能は今後必須かも。</p>

<p>ただ、元の無線は2.4GHzで速度を求めたければ5GHz版のSSIDを使いたいところですが、
IoT関連ではそこまで速度を求めるものはないのでとりあえずはそのままに。</p>

<p>WSR-5400AX6では2.4GHzと5GHzを同時に使えるのも便利です。</p>

<p>ということで、スマホとか簡単に変えられるものは5GHzの方に変更して使っています。</p>

<p>速度としては、調子が良ければWi-Fi接続でも300Mbps程度出るようにはなりました。</p>

<h2 id="tp-link-archer-ax73">TP-Link Archer AX73</h2>

<p>BUFFALO WSR-5400AX6と迷ったのがTP-Link Archer AX73。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B08RDHHS6Z?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08RDHHS6Z&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51RoyFl5dEL._SS200_.jpg" alt="TP-Link Archer AX73" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B08RDHHS6Z?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08RDHHS6Z&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">TP-Link Archer AX73</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B08RDHHS6Z?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08RDHHS6Z&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTP-Link+Archer+AX73%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTP-Link+Archer+AX73%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>スペック的にはだいたい同じ感じで、一方でルーターだとTP-Linkの方が
評判が良いことが多い感じがしました。</p>

<p>なのでこちらのが良いかな、とも思ったのですが、こちらは横置きだけで、27cm x 15cm ほどの大きさで
結構場所を取ります。</p>

<p>WSR-5400AX6だと縦置きができるので、18cm x 6cm程度の大きさで済みます。</p>

<p>置く場所を考えるとAX73を置く場所が結構辛くなってしまうので今回はWSR-5400AX6にしました。</p>

<h2 id="まとめ">まとめ</h2>

<p>引っ越ししようとするたびにインターネット無料なマンションが増えてるな、と感じますが、
それがどの程度使えるものなのか、を事前に調べるのは難しいところだと思います。</p>

<p>最悪自分で別途契約して使えればよいのですが、それも出来ない場合も多いので。</p>

<p>なので結構博打的なところはありますが、今回の様にルーターが支給されてる場合は
自分でルーターを用意して付け替えたほうが良い、という場合もあるようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mitmproxyを使ってアプリの通信内容を確認する]]></title>
    <link href="https://rcmdnk.com/blog/2021/03/02/computer-windows-mac-network/"/>
    <updated>2021-03-02T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/03/02/computer-windows-mac-network</id>
    <content type="html"><![CDATA[<p>アプリなどが何ら化クラウドサーバーと交信して色々やってる部分を
確認して別のところで操作出来るようにしてみるという話。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#mitmproxy" id="markdown-toc-mitmproxy">mitmproxy</a></li>
  <li><a href="#windows-wslでの利用" id="markdown-toc-windows-wslでの利用">Windows WSLでの利用</a></li>
  <li><a href="#macでの利用" id="markdown-toc-macでの利用">Macでの利用</a></li>
  <li><a href="#iphoneからの接続" id="markdown-toc-iphoneからの接続">iPhoneからの接続</a></li>
  <li><a href="#mitmproxyを使って通信内容を見てみる" id="markdown-toc-mitmproxyを使って通信内容を見てみる">mitmproxyを使って通信内容を見てみる</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="mitmproxy">mitmproxy</h2>

<ul>
  <li><a href="https://mitmproxy.org/">mitmproxy - an interactive HTTPS proxy</a></li>
  <li><a href="https://docs.mitmproxy.org/stable/">mitmproxy doc: Introduction</a></li>
</ul>

<p>mitmproxyはプロキシサーバーをたてて、通信をそこを通すことで通信の内容を
監視したり、パラメータを変更して通信を送ったりすることを実現してくれるツール。</p>

<p>インストールは上記ページからインストーラーなりバイナリをダウンロードして使うか、
Homebrewを使っているならMacでもWindows WSLでも</p>

<pre><code>$ brew install mitmproxy
</code></pre>

<p>で入れられます。</p>

<p>これで</p>

<pre><code>$ mitmproxy
</code></pre>

<p>とすることでプロキシサーバーを立ち上げられます。デフォルトでは8080番ポートを使いますが、
変更したい場合は</p>

<pre><code>$ mitmproxy -p 10080
</code></pre>

<p>の様な感じでポートを指定します。</p>

<h2 id="windows-wslでの利用">Windows WSLでの利用</h2>

<p>WindowsのWSLから実行する場合は、WSLのポートとWindowsの外向けIPアドレスとを結びつける必要があります。</p>

<p>詳しくは以下で。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2021/03/01/computer-windows-network/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20210301_property_120_90.jpg" width="120" height="90" alt="20210301_property_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/03/01/computer-windows-network/">Windows WSL2に外部から直接アクセスするための設定</a></div></li></ul>

<p>この方法の中で外部向けファイアウォールの設定も行うので外部から<code>WindowsのIPアドレス:8080</code>(ポートを変更している場合は8080を変更したもの)でアクセス出来るようになります。</p>

<p>ファイアウォールに関する確認をしたい場合はWindows Defenderファイアウォールから。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/04/27/computer-windows-network/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180427_openssh_120_90.png" width="120" height="90" alt="20180427_openssh_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/27/computer-windows-network/">Windowsで公式ツールでSSHサーバーを立てる2つの方法</a></div></li></ul>

<p>設定したらアクセスするためにIPアドレスを調べます。</p>

<p><strong>設定</strong><i class="fa fa-arrow-right"></i><strong>ネットワークとインターネット</strong><i class="fa fa-arrow-right"></i><strong>状態</strong><i class="fa fa-arrow-right"></i><strong>プロパティ</strong></p>

<p>で使っているネットワークのプロパティにいって、下の方にある<strong>IPv4アドレス</strong>の値を取得します。</p>

<p>もしくはWSLの中からなら</p>

<pre><code>$ ipconfig.exe
</code></pre>

<p>出でてくるネットワークのうち、
イーサネットかWireless LANで使っているもののIPv4アドレスを取得。</p>

<h2 id="macでの利用">Macでの利用</h2>

<p><strong>システム環境設定</strong><i class="fa fa-arrow-right"></i><strong>セキュリティーとプライバシー</strong><i class="fa fa-arrow-right"></i><strong>ファイアウォール</strong>から必要なポートを開放したりしてください。</p>

<p>IPアドレスは
<strong>システム環境設定</strong><i class="fa fa-arrow-right"></i><strong>ネットワーク</strong>
で使っているネットワークの<strong>詳細</strong>を表示させて、
<strong>TCP/IP</strong>のタブにいって<strong>IPv4アドレス</strong>を取得。</p>

<p>もしくはターミナルで</p>

<pre><code>$ ifconfig
...
en0 flags=...
   ...
   inet 192.168.11.3 netmask ...
</code></pre>

<p>とかで使っているネットワークの<code>inet</code>の値を取得。</p>

<h2 id="iphoneからの接続">iPhoneからの接続</h2>

<p>まずは</p>

<p>まず、MacなりWindows WSLなりで体制を整えて、<code>mitmproxy</code>を実行して待つ状態にしておきます。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ mitmproxy
</span><span class="line">Flows
</span><span class="line">
</span><span class="line">
</span><span class="line">[0/0]</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>みたいな感じの表示になってるはずです。</p>

<p>この状態でiPhoneから接続してみます。</p>

<p>使っているWi-Fiの設定を開き、
下の方に行くと<strong>プロキシを構成</strong>という項目があって<strong>オフ</strong>になっていると思います。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_wifi.jpg" alt="20210302_wifi.jpg" class="pic" /></p>

<p>このここを開いて、<strong>手動</strong>を選択すると<strong>サーバ</strong>、<strong>ポート</strong>の入力が出来るようになるので、
<strong>サーバ</strong>に上で取得したIPアドレスと、<strong>ポート</strong>に8080(別途指定してたらそれ)
を入力して保存します。
(<strong>認証</strong>の欄はオフのママ。)</p>

<p><img src="https://rcmdnk.com/images/post/20210302_proxy.jpg" alt="20210302_proxy.jpg" class="pic" /></p>

<p>これで保存。</p>

<p>この設定で一時的にiPhoneからネットワークに接続できない状態になっているので注意してください。</p>

<p>ネットワークを有効にするために、プロキシサーバーに対する証明書をインストールする必要があります。</p>

<p>上の設定後、Safariを開いて、<a href="http://mitm.it">http://mitm.it</a>を開きます。</p>

<p>もしプロキシ設定がきちんとできてないと</p>

<p><img src="https://rcmdnk.com/images/post/20210302_notpassing.jpg" alt="20210302_notpassing.jpg" class="pic" /></p>

<pre><code>If you can see this, traffic is not passing through mitmproxy.
Visit the Documentation
</code></pre>

<p>みたいなページが出てきます。(この状態だと普通にネットワーク接続は出来るがmitmproxyは通してない状態。)</p>

<p>正しく設定されていると以下の様なページが出てきます。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_mitmit.jpg" alt="20210302_mitmit.jpg" class="pic" /></p>

<p>もし、どちらのページも出てこず接続が出来ないような状況であれば
mitmproxyを立ち上げているサーバーに接続できていない状態なので、
サーバー側のファイアウォールやポートの設定などを再度調べてみてください。</p>

<p>ここで、iOSの<strong>Get mitmproxy-ca-cert.pem</strong>をクリックすると、
以下の様に<strong>このWebサイトは構成プロファイルをダウンロードしようとしています。
許可しますか？</strong>
という問いが出てくるので<strong>許可</strong>します。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_download.jpg" alt="20210302_download.jpg" class="pic" /></p>

<p>このとき、ブラウザがSafari以外のChromeとかだとこのダイアログが出ないので、
必ずSafariで開く必要があります。</p>

<p>ここでダウンロードが完了したら、<strong>設定</strong>を開きます。
そうすると、Apple IDの情報の下に以下のような
<strong>ファイルがダウンロードされました</strong>という項目が追加されています。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_settings.jpg" alt="20210302_settings.jpg" class="pic" /></p>

<p>そこをクリックするとダウンロードしたプロファイルのインストールページに行くのでインストールします。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_install.jpg" alt="20210302_install.jpg" class="pic" /></p>

<p>正しくインストールされたかどうかは<strong>設定</strong><i class="fa fa-arrow-right"></i><strong>一般</strong><i class="fa fa-arrow-right"></i><strong>プロファイル</strong>
に行って<strong>mitmproxy</strong>があれば確認できます。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_profile.jpg" alt="20210302_profile.jpg" class="pic" /></p>

<p>これで証明書はインストールされましたがまだ有効にはなってない状態です。</p>

<p>有効にするために、<strong>設定</strong><i class="fa fa-arrow-right"></i><strong>情報</strong><i class="fa fa-arrow-right"></i><strong>証明書信頼設定</strong>(一番下)
に行って、<strong>mitmproxy</strong>の欄があるはずなので、そのチェックを有効に変更します。</p>

<p><img src="https://rcmdnk.com/images/post/20210302_enable.jpg" alt="20210302_enable.jpg" class="pic" /></p>

<p>このルート証明書を全面的に信頼する、の欄でチェックを有効に。</p>

<p>これでmitmproxyを通した通信が出来るようになりました。</p>

<h2 id="mitmproxyを使って通信内容を見てみる">mitmproxyを使って通信内容を見てみる</h2>

<p>上の状態でブラウザでなにか見たり、なにか通信するアプリを使うと、
mitmproxyを起動したターミナルに色々と通信内容が出てくると思います。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Flows
</span><span class="line">&gt;&gt; GET https://lh3.googleusercontent.com/-DD1vxNl412w/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuclA1zzNkcym…
</span><span class="line">       ← 200 image/png 3.7k 167ms
</span><span class="line">   GET https://lh4.googleusercontent.com/-LctrK_qMfHM/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnl1ioWQwg-…
</span><span class="line">       ← 200 image/png 2.46k 372ms
</span><span class="line">   GET https://lh5.googleusercontent.com/-cFfiOvjaCq8/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuclMRErLwKii…
</span><span class="line">       ← 200 image/png 2.84k 172ms
</span><span class="line">   POST https://update.googleapis.com/service/update2 HTTP/2.0
</span><span class="line">        ← 200 text/xml 234b 145ms
</span><span class="line">   POST https://oauthaccountmanager.googleapis.com/v1/issuetoken HTTP/2.0
</span><span class="line">        ← 200 application/json 361b 139ms
</span><span class="line">   POST https://oauthaccountmanager.googleapis.com/v1/issuetoken HTTP/2.0
</span><span class="line">        ← 200 application/json 422b 147ms
</span><span class="line">   POST https://oauthaccountmanager.googleapis.com/v1/issuetoken HTTP/2.0
</span><span class="line">        ← 200 application/json 422b 137ms
</span><span class="line">   POST https://oauthaccountmanager.googleapis.com/v1/issuetoken HTTP/2.0
</span><span class="line">        ← 200 application/json 391b 162ms
</span><span class="line">   GET https://clientservices.googleapis.com/chrome-variations/seed?osname=ios&amp;channel=stable&amp;…
</span><span class="line">       ← 304 [no content] 243ms
</span><span class="line">   POST https://oauthaccountmanager.googleapis.com/v1/issuetoken HTTP/2.0
</span><span class="line">        ← 200 application/json 424b 105ms
</span><span class="line">   POST https://accounts.google.com/ListAccounts?gpsia=1&amp;source=ChromiumBrowser&amp;json=standard …
</span><span class="line">        ← 200 application/json 332b 95ms
</span><span class="line">⇩  [1/166]                                                                                [*:8080]</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>この画面での操作はVimライクなもので、</p>

<ul>
  <li><i class="key">j</i>: 上を選択</li>
  <li><i class="key">k</i>: 下を選択</li>
</ul>

<p>また、選んだ状態で<i class="key">Enter</i>を押すと各通信の詳細を見ることが出来て、
<code>Request</code>、<code>Response</code>、<code>Details</code>のタブを持ったページに飛びます。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class=""><span class="line">2021-XX-XX XX:XX:XX POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&amp;
</span><span class="line">                         client_id=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX HTTP/2.0
</span><span class="line">                         ← 200 application/vnd.google.octet-stream-compressible 475b 102ms
</span><span class="line">             Request                         Response                          Detail
</span><span class="line">content-length:    2396
</span><span class="line">pragma:            no-cache
</span><span class="line">...</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>このページでもVimライクに</p>

<ul>
  <li><i class="key">h</i>: 左を選択</li>
  <li><i class="key">l</i>: 右を選択</li>
</ul>

<p>このページからは<i class="key">q</i>を押すと元の一覧ページに戻ります。</p>

<p>それぞれのページで<i class="key">?</i>を押すと
ショートカットキーの一覧のヘルプを見ることも出来ます。</p>

<p>よく使う便利な使い方としては、
一覧ページで
他に便利な使い方として、</p>

<ul>
  <li>一覧ページで<i class="key">Shift</i>-<i class="key">F</i>: 新しい通信があったとき一覧を常時更新する
    <ul>
      <li>デフォルトでは画面いっぱい表示されるとそこで停止する。<i class="key">j</i>とかで下に行くと新しいものが見れる。</li>
    </ul>
  </li>
  <li>一覧ページで<i class="key">f</i>: 文字入力モードに入って、入力して<i class="key">Enter</i>を押すと入力した文字列でフィルターした通信のみを表示する。</li>
  <li>一覧ページ、もしくは特定の通信を選んだページで<i class="key">:</i>でコマンドモードに入り、<code>: export.clip curl @focus</code>を実行。
    <ul>
      <li>選択中の通信を<code>curl</code>コマンドで再現するものをクリップボードに入れる。</li>
    </ul>
  </li>
</ul>

<p>あたり。</p>

<p>通信を見始めるといろいろな通信が出てきて溢れてしまいますが、
必要な通信は通信先のドメイン名などに特定のものがあるはずなので、それでフィルター。</p>

<p>興味がありそうな通信をそれぞれ見つつ、
使いたい通信が合った場合、<code>: export.clip curl @focus</code>でコマンドを取得。</p>

<p>コマンドラインにペーストして実際に通信が成功するか見てみる、といった具合。</p>

<p>さらに下のページを使うと適当な言語で通信を再現することが出来るようになります。</p>

<blockquote>
  <p><a href="https://curl.trillworks.com/#python">Convert cURL command syntax to Python requests, Ansible URI, browser fetch, MATLAB, Node.js, R, PHP, Strest, Go, Dart, JSON, Elixir, and Rust code</a></p>
</blockquote>

<p>上のページの<code>curl command</code>部分に取得したcURLコマンドを入力して、
欲しい言語を<strong>Language</strong>で選ぶとその言語で使える形で
通信を再現してくれます。</p>

<p>例えば、</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class=""><span class="line">2021-XX-XX XX:XX:XX GET http://mitm.it/
</span><span class="line">                        ← 200 OK text/html 16.72k 25ms
</span><span class="line">             Request                         Response                          Detail
</span><span class="line">Host:                       mitm.it
</span><span class="line">Connection:                 keep-alive
</span><span class="line">Proxy-Connection:           keep-alive
</span><span class="line">Upgrade-Insecure-Requests:  1
</span><span class="line">Accept:                     text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
</span><span class="line">User-Agent:                 Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X)
</span><span class="line">                            AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/87.0.4280.77
</span><span class="line">                            Mobile/15E148 Safari/604.1
</span><span class="line">Referer:                    http://mitm.it/
</span><span class="line">Accept-Language:            ja-jp
</span><span class="line">Accept-Encoding:            gzip, deflate
</span><span class="line">No request content                                                                        [m:auto]</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>みたいな通信があった場合
cURLコマンドを取得すると</p>

<pre><code>curl -H 'Connection: keep-alive' -H 'Proxy-Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' -H 'User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/87.0.4280.77 Mobile/15E148 Safari/604.1' -H 'Referer: http://mitm.it/' -H 'Accept-Language: ja-jp' --compressed http://mitm.it/
</code></pre>

<p>みたいなものになります。</p>

<p>これを上のページで整形すると、例えばPythonなら</p>

<figure class="code"><figcaption><span>mitm.py  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span></span><span class="kn">import</span> <span class="nn">requests</span>
</span><span class="line">
</span><span class="line"><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Proxy-Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Upgrade-Insecure-Requests&#39;</span><span class="p">:</span> <span class="s1">&#39;1&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="s1">&#39;Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/87.0.4280.77 Mobile/15E148 Safari/604.1&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;http://mitm.it/&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;ja-jp&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;http://mitm.it/&#39;</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>Node.js (fetch)なら</p>

<figure class="code"><figcaption><span>mitm.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span></span><span class="kd">var</span><span class="w"> </span><span class="nx">fetch</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;node-fetch&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nx">fetch</span><span class="p">(</span><span class="s1">&#39;http://mitm.it/&#39;</span><span class="p">,</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">    </span><span class="nx">headers</span><span class="o">:</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;Connection&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;Proxy-Connection&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;Upgrade-Insecure-Requests&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;1&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;Accept&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;User-Agent&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/87.0.4280.77 Mobile/15E148 Safari/604.1&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;Referer&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;http://mitm.it/&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;Accept-Language&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;ja-jp&#39;</span>
</span><span class="line"><span class="w">    </span><span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>Goなら</p>

<figure class="code"><figcaption><span>mitm.go </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="go"><span class="line"><span></span><span class="kn">package</span><span class="w"> </span><span class="nx">main</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span><span class="w"> </span><span class="p">(</span>
</span><span class="line"><span class="w">  </span><span class="s">&quot;fmt&quot;</span>
</span><span class="line"><span class="w">  </span><span class="s">&quot;io/ioutil&quot;</span>
</span><span class="line"><span class="w">  </span><span class="s">&quot;log&quot;</span>
</span><span class="line"><span class="w">  </span><span class="s">&quot;net/http&quot;</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span><span class="w"> </span><span class="nx">main</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">client</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="o">&amp;</span><span class="nx">http</span><span class="p">.</span><span class="nx">Client</span><span class="p">{}</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">,</span><span class="w"> </span><span class="nx">err</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="nx">http</span><span class="p">.</span><span class="nx">NewRequest</span><span class="p">(</span><span class="s">&quot;GET&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;http://mitm.it/&quot;</span><span class="p">,</span><span class="w"> </span><span class="kc">nil</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="k">if</span><span class="w"> </span><span class="nx">err</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="kc">nil</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">    </span><span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="p">}</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;Connection&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;keep-alive&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;Proxy-Connection&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;keep-alive&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;Upgrade-Insecure-Requests&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;1&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;Accept&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;User-Agent&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/87.0.4280.77 Mobile/15E148 Safari/604.1&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;Referer&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;http://mitm.it/&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;Accept-Language&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;ja-jp&quot;</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="nx">resp</span><span class="p">,</span><span class="w"> </span><span class="nx">err</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="nx">client</span><span class="p">.</span><span class="nx">Do</span><span class="p">(</span><span class="nx">req</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="k">if</span><span class="w"> </span><span class="nx">err</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="kc">nil</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">    </span><span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="p">}</span>
</span><span class="line"><span class="w">  </span><span class="nx">bodyText</span><span class="p">,</span><span class="w"> </span><span class="nx">err</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadAll</span><span class="p">(</span><span class="nx">resp</span><span class="p">.</span><span class="nx">Body</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="k">if</span><span class="w"> </span><span class="nx">err</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="kc">nil</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">    </span><span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class="line"><span class="w">  </span><span class="p">}</span>
</span><span class="line"><span class="w">  </span><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s\n&quot;</span><span class="p">,</span><span class="w"> </span><span class="nx">bodyText</span><span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>といった感じ。</p>

<p>これで簡単に好きな言語で通信を再現できるようになります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows WSL2に外部から直接アクセスするための設定]]></title>
    <link href="https://rcmdnk.com/blog/2021/03/01/computer-windows-network/"/>
    <updated>2021-03-01T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/03/01/computer-windows-network</id>
    <content type="html"><![CDATA[<p>WindowsでLinuxなどを扱えるWSL2ですが、
WSL1とは結構構成が変わっています。</p>

<p>ネットワーク周りも変わっていて改めて設定を行ったのでそれについて。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#wsl1でのネットワーク設定" id="markdown-toc-wsl1でのネットワーク設定">WSL1でのネットワーク設定</a></li>
  <li><a href="#wsl2でのネットワーク設定windows内" id="markdown-toc-wsl2でのネットワーク設定windows内">WSL2でのネットワーク設定(Windows内)</a></li>
  <li><a href="#wsl2でのネットワーク設定windows外部から" id="markdown-toc-wsl2でのネットワーク設定windows外部から">WSL2でのネットワーク設定(Windows外部から)</a></li>
  <li><a href="#windows起動時につなげる" id="markdown-toc-windows起動時につなげる">Windows起動時につなげる</a></li>
  <li><a href="#wslの再起動" id="markdown-toc-wslの再起動">WSLの再起動</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="wsl1でのネットワーク設定">WSL1でのネットワーク設定</h2>

<p>WSL1ではWindowsのネットワークをそのまま使う形で、
例えばWSL内でsshサーバーを建てるとWindowsホストの22番ポートなどを
直接使う形になっていました。</p>

<p>Windows側でファイアウォールなどの設定を外部からアクセスできるようにすれば
アクセスできる状態でした。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/04/27/computer-windows-network/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180427_openssh_120_90.png" width="120" height="90" alt="20180427_openssh_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/04/27/computer-windows-network/">Windowsで公式ツールでSSHサーバーを立てる2つの方法</a></div></li></ul>

<h2 id="wsl2でのネットワーク設定windows内">WSL2でのネットワーク設定(Windows内)</h2>

<p>昨年リリースされたWSL2。
より普通のLinuxぽい使い方が出来るようになりました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07F1PWZV6?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07F1PWZV6&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51prjN5W9KL._SS90_CR0,0,120,90_.jpg" alt="【WSLオフィシャル販売】Groundswell メンズ Tシャツ/Groundswell Mens Tee" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2020/06/02/computer-windows/">WSL2は場合によってはWSL1の10倍も速い!?</a></div></li></ul>

<p>WSL2では立ち上がるUbuntuなどが仮想サーバーの様な
振る舞いをするようになり、
独自のIPアドレスを持っています。</p>

<p>Windows内ではこのアドレスを知っていればアクセスできるわけですが、
このIPアドレスが起動するたびに変わるため結構面倒。</p>

<p>これを回避するために、WSL2へは<code>localhost</code>でアクセス出来る仕様があります。</p>

<p>これはWSL2の開発途中で追加されたものですが、現在は
デフォルトで有効になっています。</p>

<p>WSL2ではWindowsの
<strong>C:\Users\&lt;ユーザー名&gt;\</strong>フォルダの中に
<strong>.wslconfig</strong>
という名前のファイルを作って設定を書いておくとWSLの起動時にこのファイルの中身を読みこんでその設定が有効になります。</p>

<p>ここへ、</p>

<figure class="code"><figcaption><span>.wslconfig </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="text"><span class="line"><span></span>[wsl2]
</span><span class="line">localhostForwarding=False
</span></code></pre></td></tr></table></div></figure>

<p>としておくとWSL2への<code>localhost</code>でアクセスが無効になります。</p>

<p>これを<code>True</code>にすると有効になる、という記事がありますが、
これは当初この機能が導入された当時はデフォルト無効な状態で
有効にする必要があったからで、今は以下にあるようにデフォルトがTrueで有効になっています。</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/wsl/wsl-config#configuration-options">Linux ディストリビューションの管理  Microsoft Docs</a></p>
</blockquote>

<p>この機能によってWSL2の中でhttpdサーバーをたてて、<code>http://localhost</code>とかに
アクセスするとWSL2で動かしているhttpdサーバーにアクセス出来るようになっています。</p>

<p>勿論、WSL2のIPアドレスを調べてそのアドレスを指定してもアクセスできます。</p>

<pre><code>$ ip a
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: bond0: &lt;BROADCAST,MULTICAST,MASTER&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether 2a:8f:ed:30:01:5b brd ff:ff:ff:ff:ff:ff
3: dummy0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether ee:62:ad:a6:3e:0a brd ff:ff:ff:ff:ff:ff
4: sit0@NONE: &lt;NOARP&gt; mtu 1480 qdisc noop state DOWN group default qlen 1000
    link/sit 0.0.0.0 brd 0.0.0.0
5: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 00:15:5d:30:e9:41 brd ff:ff:ff:ff:ff:ff
    inet 172.18.229.192/20 brd 172.18.239.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::215:5dff:fe30:e941/64 scope link
       valid_lft forever preferred_lft forever
</code></pre>

<p>もしくは</p>

<pre><code>$ ip r
default via 172.18.224.1 dev eth0
172.18.224.0/20 dev eth0 proto kernel scope link src 172.18.229.192
</code></pre>

<p>で<code>eth0</code>で見えている<code>172.18.229.192</code>がWSL2のアドレス。
(172で始まるクラスBのプライベートアドレスが割り振られている。)</p>

<p>これを使って<code>http://172.18.229.192</code>でアクセスできます。</p>

<p>これであれば、<code>localhostForwarding=False</code>でもアクセスできます。</p>

<p>ちなみに、WSL2の中でWindows自体のIPアドレスを知りたい場合は、
Windows側のコマンドである
<code>ipconfig.exe</code>(<code>/mnt/c/Windows/system32/ipconfig.exe</code>)
が使えるのでこれを使うと</p>

<pre><code>$ ipconfig.exe

Windows IP 構成


イーサネット アダプター vEthernet (WSL):

   接続固有の DNS サフィックス . . . . .:
   リンクローカル IPv6 アドレス. . . . .: fe80::b5af:1841:475a:8a27%50
   IPv4 アドレス . . . . . . . . . . . .: 172.18.224.1
   サブネット マスク . . . . . . . . . .: 255.255.240.0
   デフォルト ゲートウェイ . . . . . . .:

イーサネット アダプター イーサネット:
   接続固有の DNS サフィックス . . . . .:
   リンクローカル IPv6 アドレス. . . . .: fe80::2d90:1387:f61b:2f48%5
   IPv4 アドレス . . . . . . . . . . . .: 192.168.11.2
   サブネット マスク . . . . . . . . . .: 255.255.255.0
   デフォルト ゲートウェイ . . . . . . .: 192.168.11.1

Wireless LAN adapter ローカル エリア接続* 9:
...
</code></pre>

<p>な感じでWindowsのIPアドレス(192.168.130.1)とは別にWSLがvEthernetとして認識されて仮想ネットワークが作られていることが分かります。</p>

<h2 id="wsl2でのネットワーク設定windows外部から">WSL2でのネットワーク設定(Windows外部から)</h2>

<p><code>localhostForwarding=True</code>の設定の時点で
<code>localhost</code>でアクセスできる様になるのでWindowsのIPアドレスにも直結している様な感じもしますが
実際にはそうはなっていません。</p>

<p>Windows内からでも<code>http://192.168.11.2</code>としてもWSLで動かしているサーバーにはアクセス出来ない状態です。</p>

<p>sshサーバーを立ててWSL内から<code>ssh 192.168.11.2</code>としてもアクセスできません。</p>

<p>これはhttpdやsshで使っている80番や22番のポートが192.168.11.2とは結びついていないからです。</p>

<p>この辺なんとなくアドレスとポートはまとめて1つで、
アドレスの呼び方(<code>localhost:80</code>なのか<code>192.168.11.2:80</code>なのか)が違っても
同じものと思っていましたが、
実際にはこれらはすべて別のものとして管理されている、ということです。</p>

<p><code>localhostForwarding=True</code>
とすることで、WSL側の<code>localhost</code>とWindows側の<code>localhost</code>で
ポートが統一される、という状態にはなっていますが、
外部向けのWindowsのIPアドレスのポートには結びついてない状態です。</p>

<p>これを結びつけるためにはWSLの外から作業をしてやる必要があります。</p>

<p>具体的には以下のようなPowerShellのスクリプトを実行します。</p>

<figure class="code"><figcaption><span>wsl_port.ps1 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="ps1"><span class="line"><span></span><span class="k">if</span> <span class="p">(!(</span><span class="no">[Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]</span><span class="p">::</span><span class="n">GetCurrent</span><span class="p">()).</span><span class="n">IsInRole</span><span class="p">(</span><span class="s2">&quot;Administrators&quot;</span><span class="p">))</span> <span class="p">{</span> <span class="nb">Start-Process</span> <span class="n">powershell</span><span class="p">.</span><span class="n">exe</span> <span class="s2">&quot;-File </span><span class="se">`&quot;</span><span class="s2">$PSCommandPath</span><span class="se">`&quot;</span><span class="s2">&quot;</span> <span class="n">-Verb</span> <span class="n">RunAs</span><span class="p">;</span> <span class="n">exit</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nv">$ip</span> <span class="p">=</span> <span class="n">bash</span><span class="p">.</span><span class="n">exe</span> <span class="n">-c</span> <span class="s2">&quot;ip r |tail -n1|cut -d &#39; &#39; -f9&quot;</span>
</span><span class="line"><span class="k">if</span><span class="p">(</span> <span class="p">!</span> <span class="nv">$ip</span> <span class="p">){</span>
</span><span class="line">  <span class="nb">echo </span><span class="s2">&quot;The Script Exited, the ip address of WSL 2 cannot be found&quot;</span><span class="p">;</span>
</span><span class="line">  <span class="n">exit</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="c"># All the ports you want to forward separated by comma</span>
</span><span class="line"><span class="nv">$ports</span><span class="p">=@(</span><span class="n">22</span><span class="p">,</span><span class="n">3000</span><span class="p">,</span><span class="n">8080</span><span class="p">);</span>
</span><span class="line"><span class="nv">$ports_a</span> <span class="p">=</span> <span class="nv">$ports</span> <span class="n">-join</span> <span class="s2">&quot;,&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c"># Remove Firewall Exception Rules</span>
</span><span class="line"><span class="nb">iex </span><span class="s2">&quot;Remove-NetFireWallRule -DisplayName &#39;WSL 2 Firewall Unlock&#39; &quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c"># Adding Exception Rules for inbound and outbound Rules</span>
</span><span class="line"><span class="nb">iex </span><span class="s2">&quot;New-NetFireWallRule -DisplayName &#39;WSL 2 Firewall Unlock&#39; -Direction Outbound -LocalPort $ports_a -Action Allow -Protocol TCP&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">iex </span><span class="s2">&quot;New-NetFireWallRule -DisplayName &#39;WSL 2 Firewall Unlock&#39; -Direction Inbound -LocalPort $ports_a -Action Allow -Protocol TCP&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">for</span><span class="p">(</span> <span class="nv">$i</span> <span class="p">=</span> <span class="n">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">-lt</span> <span class="nv">$ports</span><span class="p">.</span><span class="n">length</span><span class="p">;</span> <span class="nv">$i</span><span class="p">++</span> <span class="p">){</span>
</span><span class="line">  <span class="nv">$port</span> <span class="p">=</span> <span class="nv">$ports</span><span class="p">[</span><span class="nv">$i</span><span class="p">];</span>
</span><span class="line">  <span class="nb">iex </span><span class="s2">&quot;netsh interface portproxy add v4tov4 listenport=$port listenaddress=* connectport=$port connectaddress=$ip&quot;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="c"># Show proxies</span>
</span><span class="line"><span class="nb">iex </span><span class="s2">&quot;netsh interface portproxy show v4tov4&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

<p>以下のものを参考にしてちょっとアップデートしたスクリプトです。</p>

<blockquote>
  <p><a href="https://github.com/microsoft/WSL/issues/4150#issuecomment-504209723">[WSL 2] NIC Bridge mode 🖧 (Has TCP Workaround🔨) · Issue #4150 · microsoft/WSL</a></p>
</blockquote>

<p>WSL側のIPアドレスは変わるので固定では出来ず、毎回上の様に何らかの方法で取得する必要があります。</p>

<div class="postscript">
  <p><strong>追記: 2021/05/16 </strong></p>

  <p>3行目のところで、
Windowsが複数のネットワークインターフェースを持っている場合などは<code>tail -n1</code>だと別のものを選んでしまう可能性もあるので、
状況によって</p>

  <pre><code>bash -c "ip route |grep 'eth0 proto'|cut -d ' ' -f9"
</code></pre>

  <p>などインターフェースを指定するなどする必要があります。</p>

  <p>(Thanks to jx @ comment)</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p><code>netsh interface portproxy add</code>というところでポートをつないでいます。
古い接続がある場合に<code>delete</code>してから、という記述も見かけましたが、
少なくとも手元の環境では<code>delete</code>しなくても新しい<code>add</code>をすれば上書きされていたので
特に<code>delete</code>をする必要はありません。</p>

<p>これを<strong>wsl_port.ps1</strong>とかで保存して実行すれば
22, 3000, 8080番のポートをWSLとWindowsの外部向けIPアドレスとでつないでいます。
(最初の行にあるのが管理者として実行するようにするおまじないなので、ファイルを右クリックで出てくるメニューで<strong>PowerShellで実行</strong>を実施すればOK。)</p>

<p>また、同時にファイアウォールの設定もこれらのポートについて外すようにしています。</p>

<p>これで、外部からも<code>http://192.168.11.2:8080</code>とかでWSLのサーバーにアクセスすることができます。
(この例だとクラスCのプライベートアドレスなので同じプライベートネットワーク内にあるものからであれば、ですが。)</p>

<p>Windowsの中からも自分の<code>http://192.168.11.2:8080</code>でWSLのサーバーにアクセス出来るようになります。</p>

<h2 id="windows起動時につなげる">Windows起動時につなげる</h2>

<p>外部からの接続を常時する必要がなければ必要な時に上のスクリプトを実行すれば良いわけですが、
常時使いたい、という場合はタスクスケジューラーに仕込んで
ログイン時に上のスクリプトを実行すると楽できます。</p>

<p>Windowsの検索で<code>task</code>とかしてタスクスケジューラーを見つけて立ち上げます。</p>

<p><img src="https://rcmdnk.com/images/post/20210301_taskscheduler.jpg" alt="20210301_taskscheduler.jpg" class="pic" /></p>

<p><strong>操作</strong><i class="fa fa-arrow-right"></i><strong>基本タスクの作成</strong>からタスクを作ります。</p>

<ul>
  <li>名前、説明: 適当に<code>wsl</code>など。</li>
  <li>トリガー: ログオン時</li>
  <li>操作: プログラムの開始
    <ul>
      <li>プログラム/スクリプト: <code>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</code>
        <ul>
          <li>PowerShellの実態へのパス。</li>
        </ul>
      </li>
      <li>引数の追加: <code>-ExecutionPolicy RemoteSigned C:\Users\User\wsl_port.ps1</code>
        <ul>
          <li><code>-ExecutionPolicy RemoteSigned</code>を追加することで自作スクリプトの実行を許可。その後にスクリプトへのパスを追記。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>完了: <strong>[完了]をクリックしたときに、このタスクの[プロパティ]ダイアログを開く</strong>にチェックして<strong>完了</strong>を押す。</li>
  <li>出てきたプロパティの<strong>全般</strong>タブにある<strong>最上位の特権で実行する</strong>にチェックして<strong>OK</strong>。</li>
</ul>

<p><img src="https://rcmdnk.com/images/post/20210301_property.jpg" alt="20210301_property.jpg" class="pic" /></p>

<p>これでログイン時にWSLの特定のポートをWindows側の外部IPアドレスにつなげることが出来ます。</p>

<p>この方法だと起動中にWSLを再起動した場合にはIPアドレスが変更されるため、
再びこのスクリプトを実行する必要があります。</p>

<p>必要であれば、再起動コマンドを上のスクリプトに追加して
再起動と同時にポートを繋げる作業をするスクリプトにしても良いかもしれません。</p>

<h2 id="wslの再起動">WSLの再起動</h2>

<p>WSLの再起動の話をしたのでそれについて少し。</p>

<p>PowerShell(管理者権限)上で</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl -l -v
  NAME                   STATE           VERSION
* Ubuntu                 Running         2
  docker-desktop         Stopped         2
  docker-desktop-data    Stopped         2
</code></pre>

<p>みたいにすると今動いているディストリビューションが分かります。
ここでは<code>Ubuntu</code>が動いています。</p>

<p>ここで</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl --terminate Ubuntu
</code></pre>

<p>とすると、<code>Ubuntu</code>を停止しますが、即座に再起動を行います。</p>

<p><code>--terminate</code>の代わりに<code>-t</code>でも可。</p>

<p>これをスクリプトの先頭に書いて、少しスリープさせてポートを付けなおす様な
ことをすれば良いとは思うのですが、
使っているLinuxのディストリビューションが変わる可能性があり、そのたびに
書き換えないといけません。</p>

<p>現在は<code>Ubuntu</code>というバージョンなしの名前になっているので、Ubuntuを使い続けるのであれば
そこま気にしなくても良いのですが、
バージョン名のついている状態や、他のLinuxを使ったりする場合には使ってるものをちゃんと把握して
やってもらいたいところ。</p>

<p>そこで、<code>wsl -l -v</code>の出力を見て使っているものを把握することが考えられますが、
この出力が現状、とくに日本語環境だとうまく使えない状態になっています。</p>

<blockquote>
  <p><a href="https://github.com/microsoft/WSL/issues/4607">wsl.exe outputting unicode to stdout · Issue #4607 · microsoft/WSL</a></p>
</blockquote>

<p>上のIssueにありますが、例えばPowerShell版grepの<code>Select-String</code>を使って</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl -l |Select-String Ubuntu
</code></pre>

<p>とかやっても何も出ません。</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl -l
Linux 用 Windows サブシステム ディストリビューション:
Ubuntu (既定)
docker-desktop
docker-desktop-data
</code></pre>

<p>とちゃんと出てそうなのに。</p>

<p>試しに出力をパイプに渡して<code>more</code>とかで見てみると</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl -l |more
L
i
n
u
x

(u
W
i
n
d
o
w
s

ｵ0ﾖ0ｷ0ｹ0ﾆ0・
ﾇ0｣0ｹ0ﾈ0・ﾓ0・・ｷ0・・:






U
b
u
n
t
u

(
稙喙)
</code></pre>

<p>こんな感じになっていて、日本語の文字化けもそうなんですが、
そもそも各文字が1行ずつ出力されている状態なので、
<code>Select-String</code>では捕まらない状態になっています。</p>

<p>なので現状日本語環境で<code>wsl -l</code>などを使って使っているディストリビューションを確認して
どうこうするのは出来ません。</p>

<p>必要なら英語環境にしてしまう、とかですね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FreeBSDでのmosh-serverの問題が解決した模様]]></title>
    <link href="https://rcmdnk.com/blog/2019/09/05/computer-network/"/>
    <updated>2019-09-05T13:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2019/09/05/computer-network</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01BTW121I?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01BTW121I&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/616uf2JciHL._SS200_.jpg" alt="フードコンテナ 真空断熱 フードポット 0.3L ターコイズ mosh! (モッシュ!) DMFP300TU" /></a>
</div>

<p>7月末位からFreeBSDで起こっていたmosh-serverが使えないという問題ですが、
アップデートがあったようで今は使える様になっています。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#mosh" id="markdown-toc-mosh">Mosh</a></li>
  <li><a href="#今回起こった問題" id="markdown-toc-今回起こった問題">今回起こった問題</a></li>
  <li><a href="#現状" id="markdown-toc-現状">現状</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="mosh">Mosh</h2>

<p>Mosh(the mobile shell)は
sshの様にサーバーに接続し作業が出来、
さらにネットワークが切れた状態になってもネットワークが復旧し次第
再接続して同じ状態から作業が開始できる様になるツールです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00I1M03OC?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00I1M03OC&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41P2fjXWPfL._SS90_CR0,0,120,90_.jpg" alt="MOSH (MOBILE SHELL): A New Era of Remote Access" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/06/30/computer-linux-mac/">Moshを使ってみる</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01DC5TV22?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01DC5TV22&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61hpjIqMqbL._SS90_CR0,0,120,90_.jpg" alt="mosh!×STAR WARS (モッシュ×スターウォーズ) デザイン ボトル 0.35L パターン SWMB350PT" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/04/05/computer-network/">Moshでのアクセスの格闘(ルーター設定+Firewall(iptable)設定)</a></div></li></ul>

<p>実際には、まずsshでサーバーに接続し、そこで<code>mosh-server</code>を立ち上げ、UDP経由で
クライアント側から接続します。
なのでsshの代わりになる、というわけではなく、sshによるアクセスが出来ることが前提になります。</p>

<p>また、UDPポートをいくつか開放しておかないといけません。
(デフォルトでは60000-61000を使います。)</p>

<p>なので外部からのアクセスの制限が強い場合にはこの辺の準備をする必要がある場合があります。</p>

<p>サーバー側では当然sshdのサービスは走っている必要はありますが、
moshに関しては何も走らせておく必要はありません。
<code>mosh-server</code>コマンドがインストールされてればOKです。
ユーザーローカルのディレクトリにインストールしても使えるので
サーバーの管理者権限がなくてもサーバーにインストールして使うことが出来ます。
(ポート開放とかファイアウォールはやってもらわないと駄目ですが。)</p>

<p>使い勝手としては</p>

<pre><code>$ ssh user@example.com
</code></pre>

<p>とする代わりに</p>

<pre><code>$ mosh user@example.com
</code></pre>

<p>とするだけなので完全にssh間隔で使えます。</p>

<h2 id="今回起こった問題">今回起こった問題</h2>

<p>問題については以下に書いてあります。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B06W5HC2G3?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B06W5HC2G3&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41ZG-A2RFoL._SS90_CR0,0,120,90_.jpg" alt="【セット買い】 mosh! (モッシュ! ) 水筒 真空断熱 スクリュー式 マグ ボトル 0.35L ブラウン + フードポット 0.3L ブラウン" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/24/compouter-network/">FreeBSDでmosh-serverが立ち上がらなくなった件</a></div></li></ul>

<p>簡単に言うと<code>mosh-server</code>コマンドが立ち上がらなくなりmoshによる接続ができなくなった、という話。</p>

<h2 id="現状">現状</h2>

<p>自分でコンパイルとかしてなんとかしようと思って上手くいきませんでしたが、
現在はアップデートによって最新版にすれば問題はおこならないようになっているみたいです。</p>

<pre><code>$ uname -a
FreeBSD xxx.xxx.xxx 11.2-STABLE FreeBSD 11.2-STABLE #33 r338991M: Fri Sep 28 14:10:47 JST 2018     root@xxx.xxx.xxx:/usr/obj/usr/src/sys/GENERIC  amd64
$ pkg version -v|grep -e mosh -e protobuf
mosh-1.3.2_11                      =   up-to-date with remote
protobuf-3.9.1,1                   =   up-to-date with remote
$ pkg info mosh
mosh-1.3.2_11
Name           : mosh
Version        : 1.3.2_11
Installed on   : Wed Aug 28 17:44:17 2019 JST
Origin         : net/mosh
Architecture   : FreeBSD:11:amd64
Prefix         : /usr/local
Categories     : net
Licenses       : GPLv3
Maintainer     : zi@FreeBSD.org
WWW            : https://mosh.org/
Comment        : Mobile terminal that supports intermittent connectivity
Shared Libs required:
        libprotobuf.so.20
Annotations    :
        FreeBSD_version: 1102503
        repo_type      : binary
        repository     : poudriere
Flat size      : 688KiB
Description    :
Remote terminal application that allows roaming, supports intermittent
connectivity, and provides intelligent local echo and line editing of
user keystrokes.


Mosh is a replacement for SSH. It's more robust and responsive,
especially over Wi-Fi, cellular, and long-distance links.


WWW: https://mosh.org/
$ pkg info protobuf
protobuf-3.9.1,1
Name           : protobuf
Version        : 3.9.1,1
Installed on   : Wed Aug 28 17:44:01 2019 JST
Origin         : devel/protobuf
Architecture   : FreeBSD:11:amd64
Prefix         : /usr/local
Categories     : devel
Licenses       : BSD3CLAUSE
Maintainer     : sunpoet@FreeBSD.org
WWW            : https://github.com/protocolbuffers/protobuf
Comment        : Data interchange format library
Shared Libs provided:
        libprotobuf-lite.so.20
        libprotoc.so.20
        libprotobuf.so.20
Annotations    :
        FreeBSD_version: 1102503
        repo_type      : binary
        repository     : poudriere
Flat size      : 22.4MiB
Description    :
Protocol Buffers are a way of encoding structured data in an efficient yet
extensible format. Google uses Protocol Buffers for almost all of its internal
RPC protocols and file formats.


WWW: https://github.com/protocolbuffers/protobuf
</code></pre>

<p>見てみるとOS自体のアップデートはなくて、moshとprotobufの両方がアップデートされています。</p>

<ul>
  <li>OS: 11.2-STABLE FreeBSD 11.2-STABLE #33 r338991M</li>
  <li>mosh: 1.3.2_9 <i class="fa fa-arrow-right"></i> 1.3.2_11</li>
  <li>protobuf: 3.8.0.1 <i class="fa fa-arrow-right"></i> 3.9.1.1</li>
</ul>

<p>protobufのアップデートのおかげ?</p>

<p>とりあえずこの環境では直ったみたいなので、もし同じようにFreeBSD環境でmosh-serverが上手く使えない場合は
もし管理権限があれば
<code>pkg upgrade</code>とかでパッケージを最新にすれば解決されるかと思います。</p>
]]></content>
  </entry>
  
</feed>
