<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Bootstrap | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/bootstrap/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-11T00:23:45+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Twitter Bootstrapでツールチップの表示に関するあれこれ]]></title>
    <link href="https://rcmdnk.com/blog/2016/06/11/computer-bootstrap/"/>
    <updated>2016-06-11T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/06/11/computer-bootstrap</id>
    <content type="html"><![CDATA[<p><a href="http://getbootstrap.com/">Bootstrap</a>
を使うと色々と簡単にWebの表示が調整できますが、
カーソルを上においた時にツールチップを表示する様な事も簡単に出来ます。</p>

<p>その表示に関するいくつかのテクニックをメモ。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#bootstrapでのツールチップの表示" id="markdown-toc-bootstrapでのツールチップの表示">Bootstrapでのツールチップの表示</a></li>
  <li><a href="#表示位置の変更" id="markdown-toc-表示位置の変更">表示位置の変更</a></li>
  <li><a href="#改行したり文字を装飾したりhtml表示を使う" id="markdown-toc-改行したり文字を装飾したりhtml表示を使う">改行したり文字を装飾したりHTML表示を使う</a></li>
  <li><a href="#ツールチップの幅を広げる" id="markdown-toc-ツールチップの幅を広げる">ツールチップの幅を広げる</a></li>
  <li><a href="#ツールチップ有効化時にオプションを渡す" id="markdown-toc-ツールチップ有効化時にオプションを渡す">ツールチップ有効化時にオプションを渡す</a></li>
  <li><a href="#ツールチップを無効化有効化する" id="markdown-toc-ツールチップを無効化有効化する">ツールチップを無効化、有効化する</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="bootstrapでのツールチップの表示">Bootstrapでのツールチップの表示</h2>

<p>ここではBootstrap 3を使用しています。</p>

<blockquote>
  <p><a href="http://v4-alpha.getbootstrap.com/components/tooltips/">Tooltips · Bootstrap</a></p>
</blockquote>

<p>まず、Botostraop関連のCSSやJavaScriptを<code>&lt;head&gt;</code>の中で読み込んで起きます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&quot;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&quot;stylesheet&quot;</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;//code.jquery.com/jquery.min.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;/scripts/myscript.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p><strong>myscript.js</strong>は色々自分のスクリプトが入ってるものだとして、
その中に</p>

<figure class="code"><figcaption><span>/scripts/myscript.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;[data-toggle=&quot;tooltip&quot;]&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">()</span>
</span><span class="line"><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

<p>と、ツールチップを有効化するスクリプトを入れておきます。</p>

<p>これで準備が出来たのでツールチップを表示させるボタンを作ってみます。</p>

<p>一番簡単には、<code>data-toggle</code>に<code>tooltip</code>をして
<code>title</code>に表示したい文字列を入れればOK。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">button</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">data-toggle</span><span class="o">=</span><span class="s">&quot;tooltip&quot;</span> <span class="na">title</span><span class="o">=</span><span class="s">&quot;This is tooltip.&quot;</span><span class="p">&gt;</span>Tooltip<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>これで<strong>Tooltip</strong>ボタンの上にカーソルを持って行くと上側にツールチップが表示されます。</p>

<h2 id="表示位置の変更">表示位置の変更</h2>

<p>表示する位置は<code>data-placement</code>で決められて
上下左右それぞれ、<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>を指定します。(デフォルトは<code>top</code>。)</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">button</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">data-toggle</span><span class="o">=</span><span class="s">&quot;tooltip&quot;</span> <span class="na">data-placement</span><span class="o">=</span><span class="s">&quot;right&quot;</span> <span class="na">title</span><span class="o">=</span><span class="s">&quot;This is tooltip.&quot;</span><span class="p">&gt;</span>Tooltip<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>なら右側。</p>

<h2 id="改行したり文字を装飾したりhtml表示を使う">改行したり文字を装飾したりHTML表示を使う</h2>

<p>ツールチップの表示をHTMLで装飾する事もできます。</p>

<p>HTMLを使うには<code>data-html</code>を<code>true</code>にします。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">button</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">data-html</span><span class="o">=</span><span class="s">&quot;true&quot;</span>  <span class="na">data-toggle</span><span class="o">=</span><span class="s">&quot;tooltip&quot;</span> <span class="na">title</span><span class="o">=</span><span class="s">&quot;This is tooltip.&lt;br&gt;Here is line break. &lt;b&gt;This is bold (&amp;lt;b&amp;gt;) tag.&lt;/b&gt; &lt;font color=&#39;red&#39;&gt;This is red color.&lt;/font&gt;&lt;font size=6&gt;Large font.&lt;/font&gt;&quot;</span><span class="p">&gt;</span>Tooltip<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じのを作ると</p>

<p><img src="https://rcmdnk.com/images/post/20160611_tooltiphtml.jpg" alt="20160611_tooltiphtml.jpg" class="pic" /></p>

<p>こんな感じでツールチップの中で色をつけたり文字サイズを変えたり改行したり出来る様になります。</p>

<p><code>data-html</code>を指定しないとタグがそのまま表示される様な状態になります。</p>

<p><img src="https://rcmdnk.com/images/post/20160611_tooltipnon.jpg" alt="20160611_tooltipnon.jpg" class="pic" /></p>

<h2 id="ツールチップの幅を広げる">ツールチップの幅を広げる</h2>

<p>ツールチップは上みたいな感じで表示されますが、
表示幅を変更したい場合は<code>tooltip-inner</code>というクラスのCSSを変更することで出来ます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span></span><span class="p">.</span><span class="nc">tooltip-inner</span><span class="p">{</span>
</span><span class="line">  <span class="k">max-width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じで最大表示幅を変えてあげれば</p>

<p><img src="https://rcmdnk.com/images/post/20160611_tooltiplarge.jpg" alt="20160611_tooltiplarge.jpg" class="pic" /></p>

<p>こんな感じで幅広な表示にすることが出来ます。</p>

<p>ただし、この<code>tooltip-inner</code>はツールチップをつけてる要素の親要素の中に入るので、
上のボタンとかが小さな幅の要素の中にいると幅狭になってしまいます。
(特に一つ要素を何らかの理由で<code>div</code>とかで囲ってるとボタンと同じ幅だけになってしまったりしてしまいます。)</p>

<p>これを回避するためには<code>data-container</code>に<code>body</code>など、大きな要素を入れておくと
それの幅を見て<code>tooltip-inner</code>の幅を決めてくれる様になります。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">button</span> <span class="na">data-container</span><span class="o">=</span><span class="s">&quot;body&quot;</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">data-html</span><span class="o">=</span><span class="s">&quot;true&quot;</span>  <span class="na">data-toggle</span><span class="o">=</span><span class="s">&quot;tooltip&quot;</span> <span class="na">title</span><span class="o">=</span><span class="s">&quot;This is tooltip.&lt;br&gt;Here is line break. &lt;b&gt;This is bold (&amp;lt;b&amp;gt;) tag.&lt;/b&gt; &lt;font color=&#39;red&#39;&gt;This is red color.&lt;/font&gt;&lt;font size=6&gt;Large font.&lt;/font&gt;&quot;</span><span class="p">&gt;</span>Tooltip<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>これなら<strong>Tooltip</strong>ボタンの親要素が小さくても画面全体をMaxとして使える様になります。</p>

<p>Bootstrap 2の時にはツールチップ部がbody直下に置かれる様に作られてたので
常に幅広な表示だったので、
Bootstrap 3にしたら幅が狭くなった、という場合にはこんな感じで試してみると上手く行くと思います。</p>

<h2 id="ツールチップ有効化時にオプションを渡す">ツールチップ有効化時にオプションを渡す</h2>

<p>上の<code>data-html</code>や<code>data-container</code>に関して、
最初に書いたツールチップを有効化するための関数にオプションとして渡して
全ての関連する場所で有効化することも出来ます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;[data-toggle=&quot;tooltip&quot;]&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">({</span><span class="nx">html</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">container</span><span class="o">:</span> <span class="s1">&#39;body&#39;</span><span class="p">}));</span>
</span><span class="line"><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

<p>などとすれば全てのツールチップが<code>body</code>を基準に幅を決め、htmlが有効になります。</p>

<p>また、<code>title</code>というオプションに文章を指定しておくと
デフォルトの表示を決めることも出来ます。</p>

<p>同じツールチップを出す必要がある場合は、各ツールチップに適当なクラスを割り当てておいて、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.common-tips&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">({</span><span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;common tips&quot;</span><span class="p">}));</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.other-tips&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">();</span>
</span><span class="line"><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいな感じで<code>common-tips</code>というクラスを持つツールチップについては
タイトルをここで決めてしまう、みたいな事が出来ます。</p>

<p><code>.common-tips</code>な要素も、要素自体で<code>title</code>を指定すればそちらが優先されます。</p>

<h2 id="ツールチップを無効化有効化する">ツールチップを無効化、有効化する</h2>

<p>ツールチップを無効化するには</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tooltip&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s1">&#39;destory&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>

<p>と、<code>destory</code>という引数を入れて<code>tooltip</code>を呼びます。</p>

<p>再び有効化するには</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tooltip&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s1">&#39;show&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>

<p>とします。
ただ、この<code>show</code>は、カーソルが該当要素の上にない場合でも表示するための
オプションで、一旦カーソルを要素の上に持って行ってはずすまで
表示され続けます。</p>

<p>これをJavaScript側で消すには</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tooltip&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s1">&#39;hide&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>

<p>と<code>hide</code>を使って呼んであげればOK。</p>

<p>また、関連として<code>toggle</code>:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tooltip&#39;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s1">&#39;toggle&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>

<p>を使うと呼ぶたびに表示したり隠したりすることが出来ます。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap 3でモニタ用的なテンプレートを作ってみた 2]]></title>
    <link href="https://rcmdnk.com/blog/2014/12/02/computer-bootstrap/"/>
    <updated>2014-12-02T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2014/12/02/computer-bootstrap</id>
    <content type="html"><![CDATA[<p><a href="https://rcmdnk.com/blog/2014/12/01/computer-bootstrap/">Bootstrap 3でモニタ用的なテンプレートを作ってみた</a>
に引き続き、今度は実際に作ってみたものの紹介。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#実際に作ってみた物" id="markdown-toc-実際に作ってみた物">実際に作ってみた物</a></li>
  <li><a href="#collapseするタイミングを変更する" id="markdown-toc-collapseするタイミングを変更する">collapseするタイミングを変更する</a></li>
  <li><a href="#favicon" id="markdown-toc-favicon">favicon</a></li>
  <li><a href="#タブ同士をjavascriptで結びつける" id="markdown-toc-タブ同士をjavascriptで結びつける">タブ同士をJavaScriptで結びつける</a></li>
  <li><a href="#サイドバーにも結びつける" id="markdown-toc-サイドバーにも結びつける">サイドバーにも結びつける</a></li>
  <li><a href="#ナビゲーションバーのcollapseされたボタンから表示後クリックで戻す" id="markdown-toc-ナビゲーションバーのcollapseされたボタンから表示後クリックで戻す">ナビゲーションバーのcollapseされたボタンから表示後、クリックで戻す</a></li>
  <li><a href="#クッキーを使ってタブを記録" id="markdown-toc-クッキーを使ってタブを記録">クッキーを使ってタブを記録</a></li>
  <li><a href="#font-awesomeなボタン" id="markdown-toc-font-awesomeなボタン">font-awesomeなボタン</a></li>
  <li><a href="#各要素ごとでスクロールさせる" id="markdown-toc-各要素ごとでスクロールさせる">各要素ごとでスクロールさせる</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="実際に作ってみた物">実際に作ってみた物</h2>

<p><a href="https://rcmdnk.com/rawhtml/bootstrap_test/index.html">Bootstrap Test</a></p>

<p>このページになります。</p>

<p>上に固定のナビゲーションヘッダーがあって、そこに2つのドロップダウンボタン
が設置してあります。</p>

<p>ここっでは<strong>Sabi組</strong>と<strong>Sango組</strong>に分けています
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p>下側は2つの画面に分かれていて、左側がサイドバー的な存在。
右側がメインコンテンツ、的な役割です。</p>

<p><a href="https://rcmdnk.com/rawhtml/bootstrap_test/index.html"><img src="https://rcmdnk.com/images/post/20141202_full.jpg" alt="full" class="pic" /></a></p>

<p>これは画面が十分大きな場合。</p>

<p><strong>Sabi組</strong>、<strong>Sango組</strong>それぞれにいくつかのコンテンツがあって、
上のドロップダウンボタンからどちらかの1つを選んだ時、
全体もその選んだ方の組に移ります。</p>

<p>サイドバーには組内の全てのコンテンツ、メインの右側には現在選択中のコンテンツが載ります。</p>

<p>さらに、サイドバーの各領域をクリックした時にもメインの画面が変わるようになっています。</p>

<p>また、サイドバー、メインコンテンツはそれぞれ別々のスクロール領域を持っていて、
縦にはみ出る様な場合には、それぞれ別個にスクロール出来るようになっています。</p>

<p>また、幅が狭くなってくると、途中でサイドバーは消える様になっています。</p>

<p>さらに幅を狭めていくと、携帯用に、上のナビゲーションバーもcollapseさせて
全体で1つのドロップダウンボタンみたいになります。</p>

<p><a href="https://rcmdnk.com/rawhtml/bootstrap_test/index.html"><img src="https://rcmdnk.com/images/post/20141202_mobile.jpg" alt="mobile" class="pic" /></a></p>

<p>パソコンサイズだと結構しょぼいですが、携帯サイズのドロップダウンの感じは
簡単に作れる割には割りとしっかりしてる感。</p>

<p>取り敢えずこんな感じです。</p>

<p>以下、適当に補足。
各コンテンツの使い方とかは本家
<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>
に例が沢山載ってて分かりやすいので
それ以外で色々やったこととか。</p>

<h2 id="collapseするタイミングを変更する">collapseするタイミングを変更する</h2>

<p>これは<a href="http://getbootstrap.com/components/">公式</a>にも大きく書いてありますが、
ナビゲーションバーをcollapseするようにしている場合、
デフォルトでは768px(タブレットサイズ)より小さくなった場合に
collapseしてボタン化する様になっています。</p>

<p>今回はドロップダウンメニュー2つだけでそれだとちょっと早いので、
550px程度まではボタンを全て見せたままにしたいと思いました。</p>

<p>この様に、Bootstrapの中のデフォルト値を弄りたい場合は、
<strong>bootstrap</strong>より先に読み込んでる
<strong>_bootstrap-variables.scss</strong>の中で値を変更します。
このファイルは最初全てコメントアウトしてありますが、
それぞれデフォルト値が書いてあるので、それを参考にしながら変更することが出来ます。</p>

<p>今回やったのは</p>

<pre><code>$grid-float-breakpoint:     550px;
</code></pre>

<p>です。これで550pxを境にナビゲーションバーがcollapseします。</p>

<p>ただ、名前を見て分かる通り、これは他のところにも影響するので注意。
他にもこの値を使う所があってそこはそのままにしたい場合には、
collapseを遅らせたい要素にクラスを与えてごにょごにょしていく必要があります。</p>

<h2 id="favicon">favicon</h2>

<p>特にBootstrapというわけではないですが
<strong>images/favicon.png</strong>とか置いておいて、
<strong>index.html</strong>の<code>head</code>内で</p>

<pre><code>&lt;link href="images/favicon.png" rel="icon"&gt;
</code></pre>

<p>と書いておけばfaviconの設定が出来ます。</p>

<h2 id="タブ同士をjavascriptで結びつける">タブ同士をJavaScriptで結びつける</h2>

<p>今回はタブを沢山使ってます。</p>

<p><code>role="tablist"</code>を持った親要素で囲って、
その中に<code>role=presentation</code>を持った子要素を配置していきます。</p>

<p>この子要素の中に<code>a</code>要素を含ませ、それがタブになります。
この子要素が<code>active</code>担った時、<code>a</code>要素で指定されたidの要素が
表示される様になります。</p>

<p>今回の例では、まず、2つのDropdownメニューの中のリストがそれぞれ
タブ群になっていて、それらのタブは右下のメインのコンテンツに結びついています。</p>

<p>さらに</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">ul</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;nav navbar-nav main-tab noshow&quot;</span> <span class="na">role</span><span class="o">=</span><span class="s">&quot;tablist&quot;</span><span class="p">&gt;</span>
</span><span class="line">  <span class="p">&lt;</span><span class="nt">li</span> <span class="na">role</span><span class="o">=</span><span class="s">&quot;presentation&quot;</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;active&quot;</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;#sabi-tab&quot;</span> <span class="na">aria-controls</span><span class="o">=</span><span class="s">&quot;sabi-tab&quot;</span> <span class="na">data-toggle</span><span class="o">=</span><span class="s">&quot;tab&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span><span class="line">  <span class="p">&lt;</span><span class="nt">li</span> <span class="na">role</span><span class="o">=</span><span class="s">&quot;presentation&quot;</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;#sango-tab&quot;</span> <span class="na">aria-controls</span><span class="o">=</span><span class="s">&quot;sango-tab&quot;</span> <span class="na">data-toggle</span><span class="o">=</span><span class="s">&quot;tab&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>というタブも作っています。この中にある<code>noshow</code>クラスは</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span></span><span class="p">.</span><span class="nc">navbar-collapse</span><span class="p">.</span><span class="nc">collapse</span> <span class="p">.</span><span class="nc">noshow</span> <span class="p">{</span>
</span><span class="line">  <span class="k">display</span><span class="p">:</span> <span class="kc">none</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じでまさにただ消しているだけです。</p>

<p>このタブは<strong>Sabi組</strong>/<strong>Sango組</strong>の選択をするものですが、
実際にはこれらの組の選択は、各コンテンツを選んだ時に
選ばれたコンテンツの入ってる方を表示する、と言う事をするので、
擬似的にタブ化するために見えないタブを作っています。</p>

<p>これで、実際にドロップダウンからコンテンツが選択された時には、
そのidを<code>c</code>として</p>

<pre><code>$(c).on('show.bs.tab', function...
</code></pre>

<p>と動作を与えることが出来るので、ここで組のタブを切り替える様な関数を呼びます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">function</span> <span class="nx">switchTab</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;sabi&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;sango&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;sabi&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.main-tab a[href=&quot;#sabi-tab&quot;]&#39;</span><span class="p">).</span><span class="nx">tab</span><span class="p">(</span><span class="s1">&#39;show&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;sabi&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;sango&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.main-tab a[href=&quot;#sango-tab&quot;]&#39;</span><span class="p">).</span><span class="nx">tab</span><span class="p">(</span><span class="s1">&#39;show&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じで、要素が<code>sabi</code>なのか<code>sango</code>なのかみて、
<code>tab('show')</code>関数で<code>main-tab</code>の切替を行っています。</p>

<p>メインのコンテンツは<code>sabi-first</code>や<code>sango-second</code>と言った名前になってるので、
その先頭をみて判断する形。</p>

<p>また、ここで<code>body</code>にもクラス名を与えたりしてますが、
これによって全体の背景色を変更しています。</p>

<p><code>on('show.bs.tab')</code>と<code>tab('show')</code>の基本的な組み合わせだけで
色々とタブ同士をつなぎ合わせることが出来ます。</p>

<blockquote>
  <p><a href="http://getbootstrap.com/javascript/#tabs">JavaScript · Bootstrap</a></p>
</blockquote>

<h2 id="サイドバーにも結びつける">サイドバーにも結びつける</h2>

<p>サイドバーも<code>sabi-first-sidebar</code>みたいなidを持っていて、
これがクリックされた際には<code>sabi-first</code>を<code>tab('show')</code>して、みたいなことを行います。</p>

<p>逆に、メインコンテンツの<code>sabi-first</code>がドロップダウンから選択された場合には
<code>sabi-first-sidebar</code>も<code>active</code>にして、
サイドバーの場合にはタブでは無いですが<code>active</code>が付いてる場合は
背景を少し暗くする、的なことをCSSでしています。</p>

<p>ホントはサイドバーとメインコンテンツが<strong>同じ要素</strong>として扱えれば良いんですが、
その辺の良いやり方が思いつかなかったので別の要素として作っておいて
JavaScriptでむりくり繋げる形にしました。</p>

<h2 id="ナビゲーションバーのcollapseされたボタンから表示後クリックで戻す">ナビゲーションバーのcollapseされたボタンから表示後、クリックで戻す</h2>

<p>collapseされた後のナビゲーションバーのボタンは、
一度押すとボタンを縦に表示してくれますが、
これがその中のボタンを押してもただのタブの切替とかだと
ナビゲーションバーのボタンがそのまま表示され続けます。</p>

<p>これを避けるために、<code>myscript.js</code>に</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.navbar-collapse .dropdown li a&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.navbar-collapse&#39;</span><span class="p">).</span><span class="nx">collapse</span><span class="p">(</span><span class="s1">&#39;hide&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>という関数を定義して、collapseした後に出来るナビゲーションバーの
ドロップダウンボタンは中身がクリックされたらすぐに元に戻る様にしています。</p>

<h2 id="クッキーを使ってタブを記録">クッキーを使ってタブを記録</h2>

<p>通常、先のページをリロードすると、HTMLのソースで<code>active</code>のクラスを
指定してあるものが選択された状態に戻ってしまいます。</p>

<p>これを、最後に選択したものから再び始められるよう、
Cookieを用いて元の状態に戻してあげます。</p>

<p>こちらのGitHubに公開されているjquery-cookieというjQueryのプラグインを使います。</p>

<div class="github-widget" data-repo="carhartl/jquery-cookie"></div>

<p>まず、このレポジトリから<strong>jquery.cookie.js</strong>を取ってきて
<strong>javascripts</strong>へ追加。</p>

<p><strong>index.html</strong>の<strong>myscript.js</strong>の<strong>前に</strong>にこれを追加。</p>

<pre><code>&lt;script src="javascripts/jquery.cookie.js"&gt;&lt;/script&gt;
&lt;script src="javascripts/myscript.js"&gt;&lt;/script&gt;
</code></pre>

<p>これで<code>$.cookie()</code>という関数が使える様になります。</p>

<p>Cookieに保存したいときは</p>

<pre><code>$.cookie('active-c', 'content-name', {expires: 600});
</code></pre>

<p>とすると、<code>active-c</code>というCookieの値に<code>content-name</code>という文字列を記憶します。
<code>expires</code>でこれを破棄するまでの時間指定です。(600秒で10分。)</p>

<p>タブを切り替えた時をタブコンテンツの<code>show.bs.tab</code>で捉えて、
その時にCookieを保存してあげます。</p>

<figure class="code"><figcaption><span>myscript.js</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.c-menu a[data-toggle=&quot;tab&quot;]&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;show.bs.tab&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.c-menu a[data-toggle=&quot;tab&quot;]&#39;</span><span class="p">).</span><span class="nx">not</span><span class="p">(</span><span class="s1">&#39;a[href=#&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;]&#39;</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="nx">switchTab</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span>
</span><span class="line">    <span class="nx">switchContent</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span>
</span><span class="line">    <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;active-c&#39;</span><span class="p">,</span> <span class="nx">c</span><span class="p">,</span> <span class="p">{</span> <span class="nx">expires</span><span class="o">:</span> <span class="mi">600</span> <span class="p">});</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>$.cookie('active-c')</code>みたいにキーワードだけ入れるとそれに対応する
Cookieに保存された値が帰ってくるので</p>

<figure class="code"><figcaption><span>myscript.js</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;active-c&#39;</span><span class="p">)){</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;active-c&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.c-menu a[data-toggle=&quot;tab&quot;]&#39;</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいな事をすればページをロード時に必要なタブを選択することが出来ます。</p>

<blockquote>
  <p><a href="https://rcmdnk.com/rawhtml/bootstrap_test/javascripts/myscript.js">myscript.js</a></p>
</blockquote>

<h2 id="font-awesomeなボタン">font-awesomeなボタン</h2>

<p>組のドロップダウンメニュー内は
<code>&lt;i class="fa fa-area-chart"&gt;</code>
(<i class="fa fa-area-chart">)を付けて居ます。</i></p>

<p>また、Dropdownメニューの表示自体も、通常
<code>&lt;span class="caret"&gt;&lt;/span&gt;</code>
を使ってキャレットを表示させますが、上では
<code>&lt;i class="fa fa-area-chart"&gt;</code>}
(<i class="fa fa-area-chart">)
を使っています。</i></p>

<p>Bootstrapと非常に相性が良いアイコンたちです。</p>

<blockquote>
  <p><a href="http://fortawesome.github.io/Font-Awesome/icons/">Font Awesome Icons</a></p>
</blockquote>

<h2 id="各要素ごとでスクロールさせる">各要素ごとでスクロールさせる</h2>

<p>上のページの下の2つの要素は別々にスクロールされます。
また、ページ全体としてはFixしてスクロールしないようになって、
常に周りが組の色で囲まれてるようにしています。</p>

<p>やってることはこんな感じ。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">body</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;sabi&quot;</span><span class="p">&gt;</span>
</span><span class="line">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;tab-pane active&quot;</span> <span class="na">id</span><span class="o">=</span><span class="s">&quot;sabi-tab&quot;</span><span class="p">&gt;</span>
</span><span class="line">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;row-fluid scroll-row&quot;</span><span class="p">&gt;</span>
</span><span class="line">      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;col-sm-3 hidden-xs sidebar&quot;</span><span class="p">&gt;</span>
</span><span class="line">      ...
</span><span class="line">      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span><span class="line">      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;col-sm-9 col-xs-12 main&quot;</span><span class="p">&gt;</span>
</span><span class="line">      ...
</span><span class="line">      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span><span class="line">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span><span class="line">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じのHTMLに対して、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
</pre></td><td class="code"><pre><code class="scss"><span class="line"><span></span><span class="nc">.sabi</span> <span class="p">{</span>
</span><span class="line">  <span class="nt">background-color</span><span class="nd">:</span> <span class="err">$</span><span class="nt">sabi-color</span><span class="o">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.sango</span> <span class="p">{</span>
</span><span class="line">  <span class="nt">background-color</span><span class="nd">:</span> <span class="err">$</span><span class="nt">sango-color</span><span class="o">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nn">#sabi-tab</span><span class="o">,</span> <span class="nn">#sango-tab</span><span class="p">{</span>
</span><span class="line">  <span class="nt">top</span><span class="nd">:0</span><span class="o">;</span>
</span><span class="line">  <span class="nt">left</span><span class="nd">:</span> <span class="nt">0</span><span class="o">;</span>
</span><span class="line">  <span class="nt">right</span><span class="nd">:</span> <span class="nt">0</span><span class="o">;</span>
</span><span class="line">  <span class="nt">bottom</span><span class="nd">:</span> <span class="nt">0</span><span class="o">;</span>
</span><span class="line">  <span class="nt">position</span><span class="nd">:</span> <span class="nt">absolute</span><span class="o">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.scroll-row</span> <span class="p">{</span>
</span><span class="line">  <span class="nt">margin</span><span class="nd">:</span> <span class="nt">6</span><span class="nc">.5rem</span> <span class="nt">1rem</span> <span class="nt">1rem</span> <span class="nt">1rem</span><span class="o">;</span>
</span><span class="line">  <span class="nt">height</span><span class="nd">:</span> <span class="nt">calc</span><span class="o">(</span><span class="nt">100</span><span class="err">%</span> <span class="nt">-</span> <span class="nt">8rem</span><span class="o">);</span>
</span><span class="line">  <span class="nt">background</span><span class="nd">:</span> <span class="nt">white</span><span class="o">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.main</span><span class="o">,</span> <span class="nc">.sidebar</span><span class="p">{</span>
</span><span class="line">  <span class="nt">height</span><span class="nd">:</span> <span class="nt">100</span><span class="err">%</span><span class="o">;</span>
</span><span class="line">  <span class="nt">overflow-y</span><span class="nd">:</span> <span class="nt">scroll</span><span class="o">;</span>
</span><span class="line"><span class="nt">a</span> <span class="nc">.sidebar-panel</span> <span class="p">{</span>
</span><span class="line">    <span class="nt">height</span><span class="nd">:</span> <span class="nt">30rem</span><span class="o">;</span>
</span><span class="line">    <span class="nt">border-width</span><span class="nd">:</span> <span class="nt">0</span> <span class="nt">0</span> <span class="nt">1rem</span><span class="o">;</span>
</span><span class="line">    <span class="nt">border-style</span><span class="nd">:</span> <span class="nt">solid</span><span class="o">;</span>
</span><span class="line">    <span class="k">&amp;</span><span class="nc">.active</span> <span class="p">{</span>
</span><span class="line">      <span class="nt">background</span><span class="nd">:</span> <span class="nt">darken</span><span class="o">(</span><span class="err">$</span><span class="nt">background</span><span class="o">,</span> <span class="nt">10</span><span class="err">%</span><span class="o">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>この様なスタイルを当てます。</p>

<p>まず、<code>body</code>にはJavaScriptで<code>sabi</code>か<code>sango</code>のクラスが付けられるので、
それで全体の背景色が<code>sabi</code>色か<code>sango</code>色になります。</p>

<p>その次に、一度<code>positon:absolute;</code>の要素(<code>#sabi-tab</code>)で全体を囲って、
その中に上にmarginを多めに取った要素(<code>.scroll-row</code>)を作ります。</p>

<p>これは、ナビゲーションバーを<code>navbar-fixed-top</code>で作っていて、
上に固定になっているためです。
固定化する、ということは、実際には下の要素の上に被って上側に張り付いてるだけなので、
普通に全体を使ってしまうと上の方でコンテンツが
ナビゲーションバーの下に隠れてしまいます。
ので、その分、<code>6.5rem</code>と多めのマージンを取って、
ナビゲーションバーから見える部分が丁度他と同じ位になるようにしています。</p>

<p>また、その分上の部分を下げるので、全体として、100%より小さくしないと
この要素の大きさのせいで下にはみ出てしまって全体がスクロールされてしまうので、
それを避けるために100％から少し小さい大きさにしています。</p>

<p>そして、この要素の背景を白に戻して、結果的に、
マージン分含め外側が枠線になるような感じ出来ます。</p>

<p>次に、この<code>.scroll-row</code>の中に、100%の高さを持った<code>main</code>と<code>sidebar</code>を作ります。
それぞれ高さを100%にしながら<code>overflow-y: scroll</code>をすることで、
はみ出た分はそれぞれで勝手にスクロールする様にすることが出来ます。</p>

<p>取り敢えずそんな感じです。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap 3でモニタ用的なテンプレートを作ってみた]]></title>
    <link href="https://rcmdnk.com/blog/2014/12/01/computer-bootstrap/"/>
    <updated>2014-12-01T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2014/12/01/computer-bootstrap</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4777517993?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4777517993&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51kPHdtTVpL._SS200_.jpg" alt="はじめてのBootstrap (I・O BOOKS)" /></a>
</div>

<p>なんとなく<a href="http://getbootstrap.com/">Bootstrap</a>
をいじってみようと思い立って遊んでみたので、
メモがてらその時にやったことについて。</p>

<p>ここではBootstrap 3を使っています。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#インストール" id="markdown-toc-インストール">インストール</a></li>
  <li><a href="#テンプレートでテスト" id="markdown-toc-テンプレートでテスト">テンプレートでテスト</a></li>
  <li><a href="#要素の追加" id="markdown-toc-要素の追加">要素の追加</a></li>
  <li><a href="#scssで見た目の変更" id="markdown-toc-scssで見た目の変更">Scssで見た目の変更</a></li>
  <li><a href="#compass-compileのオプション" id="markdown-toc-compass-compileのオプション">compass compileのオプション</a></li>
  <li><a href="#javascriptを追加" id="markdown-toc-javascriptを追加">JavaScriptを追加</a></li>
  <li><a href="#相対パス絶対パス" id="markdown-toc-相対パス絶対パス">相対パス、絶対パス</a></li>
  <li><a href="#テーマを変えてみたり" id="markdown-toc-テーマを変えてみたり">テーマを変えてみたり</a></li>
  <li><a href="#font-awesomeを使う" id="markdown-toc-font-awesomeを使う">Font-awesomeを使う</a></li>
  <li><a href="#web上の情報を見る際の注意点" id="markdown-toc-web上の情報を見る際の注意点">Web上の情報を見る際の注意点</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="インストール">インストール</h2>

<p>今回はRailsとか使わずに素のBootstrapを使ってみます。</p>

<p>Rubyとかはインストールしてあるとして、</p>

<pre><code>$ cd /path/to/directory
$ sudo gem install compass bootstrap-sass
$ compass create bootstrap_test -r bootstrap-sass --using bootstrap
$ cd bootstrap_test
$ ls
config.rb   fonts       javascripts sass        stylesheets
</code></pre>

<p>として<code>compass</code>を使って最初の<code>bootstrap_test</code>(好きな名前でOK)というディレクトリを作ります。
<code>-r bootstrap-sass --using bootstrap</code>を与えると
Bootstrapを使う体制で初期化してくれます。</p>

<p>オプションでJavaScriptや画像置き場等を変更できたりしますが、
基本的にはすべて後から<strong>config.rb</strong>をいじることで設定変更が出来ます。</p>

<p>取り敢えずこれで</p>

<pre><code>$ compass compile
</code></pre>

<p>とすることで、<strong>sass/</strong>内にあるSassファイルをコンパイルして
<strong>stylesheets/styles.css</strong>を作成し、ひとまず準備完成です。</p>

<h2 id="テンプレートでテスト">テンプレートでテスト</h2>

<p>取り敢えずBootstrapのページから<strong>Basic template</strong>
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>
をコピーして<strong>index.html</strong>と名前を付けてトップディレクトリに作成します。</p>

<p>CSSファイルとJavaScriptファイルのパスがテンプレートのものとは違うので、
それぞれ下の様に変更。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span>     &lt;!-- Bootstrap --&gt;
</span><span class="line"><span class="gd">-    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span>
</span><span class="line"><span class="gi">+    &lt;link href=&quot;stylesheets/styles.css&quot; rel=&quot;stylesheet&quot;&gt;</span>
</span><span class="line">...
</span><span class="line">     &lt;!-- Include all compiled plugins (below), or include individual files as needed --&gt;
</span><span class="line"><span class="gd">-    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="gi">+    &lt;script src=&quot;javascripts/bootstrap.js&quot;&gt;&lt;/script&gt;</span>
</span><span class="line">   &lt;/body&gt;
</span></code></pre></td></tr></table></div></figure>

<p>コレで出来上がったファイルをダブルクリックするなりしてブラウザで開けば
フラットな感じの<strong>Hello, world!</strong>が見えるはずです。</p>

<p><img src="https://rcmdnk.com/images/post/20141201_helloworld.jpg" alt="helloworld" class="pic" /></p>

<h2 id="要素の追加">要素の追加</h2>

<p>Bootstrapではタブを作ったりナビゲーションバーを作ったり
入力フォームを作ったりが簡単に出来るようになっています。</p>

<p>また、特徴的なのが、横幅を12個の長さに分けて、
それをコラム毎に分配することで複数の要素を綺麗に並べる、ということ。
これを使って、ブラウザの幅が狭い時は一部の要素を消したり、
また、縦に並べたりするレスポンシブなデザインが簡単に出来ます。</p>

<p>その辺の基本的なことは公式の所が非常に詳しいので、
取り敢えず適当にコピペして行くだけでも色々出来てしまいます。</p>

<p><a href="http://getbootstrap.com/components/">Components · Bootstrap</a></p>

<h2 id="scssで見た目の変更">Scssで見た目の変更</h2>

<p>あとで色々とBootstrapの要素を追加していきますが、
それぞれ色や見た目を変えたいに備えて変更用のScssファイルを作っておきます。</p>

<p><strong>sass/</strong>の下には</p>

<ul>
  <li><strong>styles.scss</strong>: Scssファイルをまとめるためのもの。</li>
  <li><strong>_bootstrap-variables.scss</strong>: Bootstrapの中で使うデフォルト値を変更。</li>
</ul>

<p>があります。取り敢えず、自分用設定を入れるため、<strong>styles.scss</strong>の最後に</p>

<figure class="code"><figcaption><span>stylesheets/styles.scss</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span> @import &quot;bootstrap-compass&quot;;
</span><span class="line"> @import &quot;bootstrap-variables&quot;;
</span><span class="line"> @import &quot;bootstrap&quot;;
</span><span class="line"><span class="gi">+@import &quot;custom&quot;;</span>
</span></code></pre></td></tr></table></div></figure>

<p>と、<strong>custom</strong>を追加します。これで、<strong>sass/_custom.sass</strong>も取り込まれる様に
なるので、<strong>_custom.scss</strong>を作ってこの中に好きな設定を書き込んでいきます。</p>

<h2 id="compass-compileのオプション">compass compileのオプション</h2>

<p><code>compass compile</code>によって<strong>sass</strong>内のファイルをまとめて
<strong>stylesheets/styles.css</strong>として吐き出すわけですが、
デフォルトでは余り圧縮しない<code>expanded</code>という状態で出力されます。</p>

<p>これを圧縮した状態で保存したい場合には、
<strong>config.rb</strong>の中で、</p>

<pre><code>output_style = :compressed
</code></pre>

<p>とします。
この状態でコンパイルするとびっしり改行なしで詰められた状態になります。</p>

<p>この2つの間の状態として<code>compact</code>という状態もあります。</p>

<p>逆に、さらに親子関係などをなるべく残したままの状態にしたい場合には
<code>nested</code>を指定します。</p>

<p>一時的にだけ変更したい場合は、引数で</p>

<pre><code>$ compas compile -s nested
</code></pre>

<p>の様にしてもOK。</p>

<h2 id="javascriptを追加">JavaScriptを追加</h2>

<p>自分設定のJavaScriptは<strong>javascript/myscript.js</strong>というファイルを作って
この中に書いて行くことにします。</p>

<p>このファイルを読み込むため、<strong>index.html</strong>の<code>bootstrap.js</code>を
読み込むところの後ろに<code>myscript.js</code>も配置しておきます。</p>

<pre><code>&lt;script src="javascripts/bootstrap.js"&gt;&lt;/script&gt;
&lt;script src="javascripts/myscript.js"&gt;&lt;/script&gt;
</code></pre>

<p>ホントは<a href="https://github.com/sstephenson/sprockets">sstephenson/sprockets</a>
とかでまとめたいところですが、
今回はそのまま読みこむようにしておきます。</p>

<h2 id="相対パス絶対パス">相対パス、絶対パス</h2>

<p><strong>config.rb</strong>の中に<code>relative_assets</code>という値がありますが、
これが<code>false</code>(デフォルト)の状態だと、
Scssの中での<code>image-url</code>を使った時、
画像パスとか、中で使うパスが絶対パスで補完されます。</p>

<figure class="code"><figcaption><span>config.rb</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="rb"><span class="line"><span></span><span class="n">http_path</span> <span class="o">=</span> <span class="s2">&quot;/&quot;</span>
</span><span class="line"><span class="n">images_dir</span> <span class="o">=</span> <span class="s2">&quot;images</span>
</span></code></pre></td></tr></table></div></figure>

<p>と<strong>config.rb</strong>で設定されてる場合、</p>

<pre><code>image-url("img.png")
</code></pre>

<p>は</p>

<pre><code>url("/images/img.png")
</code></pre>

<p>と展開されます。
また、<code>http_images_path</code>とう値が設定されてれば、上の2つの値は無視して</p>

<pre><code>url("&lt;http_images_path&gt;/img.png")
</code></pre>

<p>の様に展開されます。</p>

<p>一方、<code>relative-assets = true</code>の場合、
最終的に読み込むことになる<strong>styles.css</strong>の位置からの表示になるので、
上の場合は</p>

<pre><code>url("../images/img.png")
</code></pre>

<p>となります。
この時は<code>http_path</code>や<code>http_images_path</code>は関係ありません。</p>

<p>また、<code>image-width("img.png")</code>や<code>image-height("img.png")</code>と言った関数で
画像の幅とかをScssの中で取得することが可能ですが、
<code>relative-assets=false</code>でかつ<code>http_images_path</code>がある場合でも
これらの関数の中では<code>images_dir</code>を使ったパスを使うので
きちんと正しい<code>images_dir</code>を指定しておく必要があります。</p>

<p>今回は、1つのhtmlファイルをトップに置いておくだけなのdえ、
<code>relative-assets = true</code>にして、ファイルの位置とかは相対的に
適当に配置しました。</p>

<h2 id="テーマを変えてみたり">テーマを変えてみたり</h2>

<p>Bootstrapではテーマファイルを追加したり元のファイルを上書きすることで
簡単に見た目を変更できます。</p>

<p>広く使われてるものなので作られてるテーマも豊富。</p>

<blockquote>
  <p><a href="http://bootswatch.com/">Bootswatch: Free themes for Bootstrap</a></p>
</blockquote>

<p>こことかにも色々な色の物が詰まっています。</p>

<h2 id="font-awesomeを使う">Font-awesomeを使う</h2>

<p>Bootstrapにもデフォルトで幾つか絵文字的な物が入っていますが、
<a href="http://fortawesome.github.io/Font-Awesome/">Font Awesom</a>
を導入することで、同じような雰囲気のまま色々なアイコンを使える様になります。</p>

<p>導入はすごく簡単で、Bootstrap CDNを使ってWebから読み込めるので、
<strong>index.html</strong>の<code>head</code>内に</p>

<pre><code>&lt;link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet"&gt;
&lt;link href="stylesheets/styles.css" rel="stylesheet"&gt;
</code></pre>

<p>と、<code>styles.css</code>の前くらいで読み込んであげれば良いだけ。</p>

<p>これで、</p>

<pre><code>&lt;i class="fa fa-github"&gt;&lt;/i&gt;
</code></pre>

<p>とか書き込めばGitHubのアイコンが表示できます。</p>

<p>もしくは
<a href="https://github.com/FortAwesome/font-awesome-sass">font-awesome-sass</a>
を<code>gem</code>を使って導入して、CSSを直接インクルードしてしまう方法もあります。</p>

<pre><code>$ gem install font-awesome-sass
</code></pre>

<p>として<strong>font-awesome-sass</strong>をインストールして、</p>

<pre><code>require 'font-awesome-sass'
</code></pre>

<p>を<strong>confit.rb</strong>に追加します。
さらに<strong>sass/styles.scss</strong>へ</p>

<pre><code>@import "font-awesome-compass";
@import "font-awesome";
</code></pre>

<p>を追加。
また、fontを</p>

<pre><code>$ cp -r /Library/Ruby/Gems/2.0.0/gems/font-awesome-sass-4.2.2/assets/fonts/font-awesome/ fonts/
</code></pre>

<p>としてコピーしておきます。</p>

<p>これでコンパイルするわけですが、</p>

<pre><code>$ compass compile
    error sass/styles.scss (Line 1: File to import not found or unreadable: font-awesome-sprockets.
    Load paths:
</code></pre>

<p>と出たら<strong>config.rb</strong>に書き忘れてるかきちんと設定されていない状態です。</p>

<p>この場合、fontも全て入れなきゃいけなかったり、また
パスの調整とかで簡単に行かなかったりすることもあるので
上の一発の方がずいぶん簡単なので特に何もなければ上の方で。</p>

<p>ただ、ここで注意点として、上のURLだと、<code>http*</code>を省略してるので、
最初にやったように<strong>index.html</strong>を直接ブラウザで見ようとすると
<code>file:///maxcdn...</code>の様な補完をされてしまって、当然間違ったURLになります。</p>

<p>これを回避するためには<code>https://maxcdn...</code>の様にきちんと先まで書いておくか、
もしくは
<a href="http://rcmdnk.github.io/blog/2014/09/05/blog-octopress/">pow</a>
とかを使ってサーバーを立ち上げて見る必要があります。</p>

<p><code>pow</code>の場合、通常<code>pow</code>は<strong>~/.pow</strong>に貼られたリンクの中のさらに
<strong>public</strong>というディレクトリをトップディレクトリして認識するので、</p>

<pre><code>$ cd ~/.pow
$ mkdir bootstrap &amp;&amp; cd bootstrap
$ ln -s /path/to/bootstrap_test public
</code></pre>

<p>の様に、<strong>.pow</strong>の中にまずディレクトリを作ってしまって、
そこへBootstrap展開してるディレクトリへ<strong>public</strong>という名前で
リンクを張ります。</p>

<p>これで<a href="http://bootstrap.dev">http://bootstrap.dev/</a>というアドレスで
<strong>/path/to/bootstrap_test/index.html</strong>を開くことが出来ます。</p>

<h2 id="web上の情報を見る際の注意点">Web上の情報を見る際の注意点</h2>

<p>Web上で情報を探る際に、注意点としてBootstrap 2の情報が
たくさんあって、きちんと確認しないで導入しようとすると
全く動かなくて困ることがあります。
微妙に似たようで違うので、結構注意が必要です。</p>

<h2 id="まとめ">まとめ</h2>

<p>とういことで長くなったので一度切って、
次に実際に作ってみた物を紹介してみたいと思います。</p>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2014/12/02/computer-bootstrap/">Bootstrap 3でモニタ用的なテンプレートを作ってみた 2</a></p>
</blockquote>

]]></content>
  </entry>
  
</feed>
