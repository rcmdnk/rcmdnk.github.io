<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: PackageManagement | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/packagemanagement/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2025-11-01T00:19:32+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="https://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows Package Manager?]]></title>
    <link href="https://rcmdnk.com/blog/2020/05/23/computer-windows-chocolatey-packagemanagement-powershell/"/>
    <updated>2020-05-23T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/05/23/computer-windows-chocolatey-packagemanagement-powershell</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B013I9SWMC?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B013I9SWMC&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51m%2BteN-t7L._SS200_.jpg" alt="Microsoft Windows 10 Home April 2018 Update適用 32bit/64bit 日本語版【最新】|オンラインコード版" /></a>
</div>

<p>Windowsの新しいパッケージマネージャー、
<a href="https://devblogs.microsoft.com/commandline/windows-package-manager-preview/">Windows Package Manager</a>
というものが開発中でプレビュー版として配布されるようになったそうです。</p>

<p>以前PackageManagementというものがあったはずなんですが、どうなったのか。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-package-manager" id="markdown-toc-windows-package-manager">Windows Package Manager</a></li>
  <li><a href="#packagemanagement" id="markdown-toc-packagemanagement">PackageManagement…?</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-package-manager">Windows Package Manager</h2>

<p>Windows Package ManagerはOSSになっていてGitHubでソースも見ることが出来ます。</p>

<div class="github-widget" data-repo="microsoft/winget-cli"></div>
<div class="github-widget" data-repo="microsoft/winget-pkgs"></div>

<p><a href="https://docs.microsoft.com/ja-jp/windows/package-manager/">Windows パッケージ マネージャー</a></p>

<p><a href="https://www.reddit.com/r/sysadmin/comments/gmrwxi/windows_package_manager_wingetexe/">📢 Windows Package Manager  winget.exe : sysadmin</a></p>

<p>使いたい場合は
Windowsの<a href="https://insider.windows.com/ja-jp/">Insider</a>版を入れると
使える様になるとのことです。</p>

<p>PowerShellとかで</p>

<pre><code>PS &gt; winget instll firefox
</code></pre>

<p>とかでアプリやツールがインストールできる様になります。</p>

<p>Microsoft Storeに行くと<strong>アプリインストーラー</strong>というのがあって、これをインストールすると
使える様になるのですが、
このアプリ自体は以前から存在していて既にインストールされてるかもしれません。
以前のこれが入っていても<code>winget</code>は使えません。</p>

<p>Insiderを入れてるとプレビュー版の<strong>アプリインストーラー</strong>がインストール出来るようになるので、
Insiderにしてから再度<strong>アプリインストーラー</strong>を入れると<code>winget</code>が使える様になります。</p>

<p>これをインストールしてもInsider版にしておかないと使えるようにはならないみたいです。
(PowerShellで<code>winget</code>コマンドが使えない。)</p>

<p>直接
<a href="https://github.com/microsoft/winget-cli/releases">Releases</a>
から取れる、とも書いてあるんですが、今現在ここにある
<strong>http://microsoft.desktopappinstaller_8wekyb3d8bbwe.appxbundle/</strong>
がリンク切れになってます。</p>

<p>自分でビルドするのも準備が面倒なのでやってません。</p>

<p>Microsoftのネイティブなパッケージマネージャー、コマンドラインツール、
ということで期待されていて、
特にマルウェアなどの危険なパッケージを排除し、信頼性の高いものにしようとしているみたいです。</p>

<p>その辺りでサードパーティーなChocolateyなどとの違いを見せていこうとしているようです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20131122_chocolatey_120_90.jpg" width="120" height="90" alt="20131122_chocolatey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/">Chocolateyのアップデート</a></div></li></ul>

<p>まだ開発は途上段階、といった感じで
パッケージをアップデートする、などは出来なかったりするみたいです。</p>

<p><a href="https://github.com/microsoft/winget-cli/issues/120">–update · Issue #120 · microsoft/winget-cli</a></p>

<h2 id="packagemanagement">PackageManagement…?</h2>

<p>と、サードパーティー製のものは今もある、という話ですが、
実はネイティブなパッケージマネージャーも以前出しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/1849756570?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=1849756570&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51ITdNrjmqL._SS90_CR0,0,120,90_.jpg" alt="Deliciously Chocolatey: 100 Cocoa-rich Recipes for Bakes, Cakes and Chocolate Treats" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement/">Windows 10でPackageManagement (OneGet) + Chocolateyでアプリ管理</a></div></li></ul>

<p>元々<a href="https://github.com/OneGet/oneget">OneGet</a>と言われていたものが
PackageManagementというプロジェクト?となりました。</p>

<p><a href="https://docs.microsoft.com/ja-jp/powershell/module/packagemanagement/?view=powershell-6">PackageManagement</a></p>

<p><a href="https://ja.wikipedia.org/wiki/PackageManagement">PackageManagement - Wikipedia</a></p>

<p>これを使って</p>

<pre><code>PS &gt; Install-Package Firefox
</code></pre>

<p>とかやるとインストールが出来るようになってました。
このコマンドは最初からインストールされています。</p>

<p>PackageManagementはCoholateyなどのレポジトリも使うことが出来、
それらサードパーティ製のレポジトリのラッパーツール的な使い方も出来ました。</p>

<p>なのでこれを使ってたんですが、いつのまにやらコマンドは使えるものの、</p>

<p>一方、Chocolateyの方は使えたのでそちらを使ってました。</p>

<p>で、今回こんな話が出てきたので、PackageManagementのアップデートか?
と思ったらどうやら全く別のものな模様。</p>

<p>最近のPackageManagementをちょっと探ってみると、どうやら一応使えてる人は使えてるみたい?
(でもやっぱり手元でやってみるとうまくいかない。。。)</p>

<p><a href="https://github.com/oneget/oneget">レポジトリ</a>
の方は1ヶ月位前にはアップデートがありますが、リリースは1年くらい前が最後。</p>

<p>なのでこちらは無くなる感じ?</p>

<p>あと、今回のWindows Package Managerの話が出てくる所で<code>OneGet</code>という単語は出てくるんですが、
<code>PackageManagement</code>という単語は見かけませんでした。</p>

<p>PackageManagementというものが認知度が低かったのか、ほぼなかったことにされそうな感じ?</p>

<p>PackageManagementがそもそもなんで<code>Management</code>という名前がツールとして微妙だな、と思ってましたが、
新しいのは<code>Manager</code>とそれっぽい感じ。
ただ、Widnows Package Managerとはまたそのままだな、と。</p>

<h2 id="まとめ">まとめ</h2>

<p>ということで、まだ実際に触ってないのですが、PackageManagementは?と思ったので書いておきました。</p>

<p>WSL2とかもあるので、Insider入れて色々と見てみても良いかな、と思い始めた今日このごろ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WinPkgMgr: WndowsでBrew-fileの様なアプリマネージャーを作ってみた]]></title>
    <link href="https://rcmdnk.com/blog/2016/03/28/comptuer-windows-packagemanagement/"/>
    <updated>2016-03-28T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/03/28/comptuer-windows-packagemanagement</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B013I9SWMC?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B013I9SWMC&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41lAV432MLL._SS200_.jpg" alt="Microsoft Windows 10 Home (32bit/64bit 日本語版) [オンラインコード]【新価格版】" /></a>
</div>

<p>Windows 10ではPackageManagementというパッケージ管理機能が
付いています。</p>

<p>Macで言うHomebrew的な存在ですが、
これを有効活用するためにMacのHomebrew用に作った
Brew-file的な物をPackageManagement用にも作ってみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#winpkgmgr" id="markdown-toc-winpkgmgr">WinPkgMgr</a></li>
  <li><a href="#to-do" id="markdown-toc-to-do">To Do</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="winpkgmgr">WinPkgMgr</h2>

<div class="github-widget" data-repo="rcmdnk/WinPkgMgr"></div>

<p>PackageManagementで管理しているアプリを
ファイルに書きだして、そのファイルを使って一括インストールしたり出来る
PowerShellスクリプト、<code>PkgMgr.ps1</code>というスクリプトが入ってます。</p>

<p>基本的にやりたいことはMacでやってるBrew-fileと同じです。</p>

<div class="github-widget" data-repo="rcmdnk/homebrew-file"></div>

<p>パッケージをファイルに書き出して環境を管理します。
さらに、それをGitHubなりDropboxなり、もしくは直接コピーするなりして
他のマシンに移して同じ環境を簡単に作ったり
環境を同期したりします。</p>

<p>基本的な使い方はBrew-fileと同じような感じで出来る様になってます。</p>

<p>今使えるコマンドは以下のとおり。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Command</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">init</td>
      <td style="text-align: left">Initialize the package management file with installed packages.</td>
    </tr>
    <tr>
      <td style="text-align: left">install</td>
      <td style="text-align: left">Install all packages in the package management file.</td>
    </tr>
    <tr>
      <td style="text-align: left">show</td>
      <td style="text-align: left">Show the package management file place and packages in the file.</td>
    </tr>
    <tr>
      <td style="text-align: left">set_repo</td>
      <td style="text-align: left">Set GitHub repository for the package management file.</td>
    </tr>
    <tr>
      <td style="text-align: left">pull</td>
      <td style="text-align: left">Pull GitHub repository.</td>
    </tr>
    <tr>
      <td style="text-align: left">push</td>
      <td style="text-align: left">Push GitHub repository.</td>
    </tr>
    <tr>
      <td style="text-align: left">update</td>
      <td style="text-align: left">(pull +) install + init (+ push). <code>pull</code>, <code>push</code> only when GitHub repository is used.</td>
    </tr>
  </tbody>
</table>

<p><code>PkgMgr.ps1 init</code>でパッケージを書き出して、
<code>PkgMgr.ps1 install</code>でファイルにあるパッケージを一括インストールする、
という所が基本。</p>

<p>現在使ってるマシンで<code>PkgMgr.ps1 init</code>してファイルを作り、そのファイルを
新しいマシンにコピーして<code>PkgMgr.ps1 install</code>すると
新しいマシンで同じ環境を作れます。</p>

<p>また、ファイルをDropboxに置くようにしてマシン間で同期したり、
Brew-fileでやっているように<code>set_repo</code>することでGitHubのレポジトリを使うことも出来ます。</p>

<div class="github-widget" data-repo="rcmdnk/WinPkgMgrFile"></div>

<p>書きだしたファイルは以下の様な感じのパッケージ名+プロバイダー名なリストになります。</p>

<pre><code>adobereader                    chocolatey
autohotkey                     chocolatey
autohotkey.install             chocolatey
autohotkey.portable            chocolatey
Cygwin                         chocolatey
dropbox                        chocolatey
Evernote                       chocolatey
Firefox                        chocolatey
flashplayerplugin              chocolatey
git                            chocolatey
git.install                    chocolatey
GoogleChrome                   chocolatey
GoogleJapaneseInput            chocolatey
lhaplus                        chocolatey
MobaXTerm                      chocolatey
putty                          chocolatey
putty.portable                 chocolatey
skype                          chocolatey
teamviewer                     chocolatey
vim                            chocolatey
</code></pre>

<p>デフォルトではDocumentsフォルダの中に<strong>pkg.txt</strong>と言うファイルを作ります。</p>

<h2 id="to-do">To Do</h2>

<p>取り敢えず最低限の事は出来る様になりましたが、
Brew-fileにあるもので付け加えられそうなものとして</p>

<ul>
  <li>指定したGitHubのpkg.txt用レポジトリがない場合作れる様にする(Brew-fileでは出来る)。</li>
  <li>既にインストールされていてPackageManagementを通して無い物を見つけてPackageManagementで管理するようにする(Brew-fileのcasklist的な)。</li>
  <li><code>clean</code>コマンド(リストに無いものを削除)。</li>
  <li><code>edit</code>コマンド(ファイルを編集)。</li>
</ul>

<p>辺り。</p>

<p>READMEとして、タスクスケジューラーを使って定期的に<code>update</code>コマンドを
実行する様にするインストラクションとかを加える。</p>

<blockquote>
  <p><a href="https://blogs.technet.microsoft.com/heyscriptingguy/2012/08/11/weekend-scripter-use-the-windows-task-scheduler-to-run-a-windows-powershell-script/">Weekend Scripter: Use the Windows Task Scheduler to Run a Windows PowerShell Script  Hey, Scripting Guy! Blog</a></p>
</blockquote>

<p>これ見ておけば大体できるとは思いますが。</p>

<p>後はGitの設定とか。
自分ではCygwinでGitHubの鍵とかの設定をしていて、
それでPowerShellからも使える様になっています。
Cygwin様にWindowsの環境変数HOMEを設定すると、
PowerShellの<code>$Env:HOME</code>がその値になり、Cygwinの<code>~/.ssh</code>を見るようになって
そこにある鍵を使えます。</p>

<p><code>PkgMgr.ps1</code>の中では、WindowsにGitがインストールされていないと
PackageManagementを使ってGitを自動でインストールするようになってるので(このGitはCygwinのGitとは別)、
Cygwinで設定さえしてあれば<code>PkgMgr.ps1</code>でGitHubのレポジトリを使えます。</p>

<p>Cygwinを使ってない場合はGitHub for Windows等を使って設定しておけばいけると思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 10でPackageManagement (OneGet) + Chocolateyでアプリ管理]]></title>
    <link href="https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement/"/>
    <updated>2016-03-11T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/1849756570?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=1849756570&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51ITdNrjmqL._SS200_.jpg" alt="Deliciously Chocolatey: 100 Cocoa-rich Recipes for Bakes, Cakes and Chocolate Treats" /></a>
</div>

<p><a href="https://rcmdnk.com/blog/2016/02/04/computer-windows/">新しいWindowsマシンを手に入れて</a>
からアプリとかを取り敢えず直接手で入れてましたが
落ち着いた所でMacのHomebrewやLinux apt-get/yum的な
パッケージ管理を試してみました。</p>

<p>Windows 10からはデフォルトでPackageManagementという
パッケージ管理用のコマンドツールが
PowerShellで使える様になっています。</p>

<p>そのツールからパッケージソースとしてChocolateyを使い、
登録されているアプリをインストールすることが出来ます。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#packagemanagement-oneget" id="markdown-toc-packagemanagement-oneget">PackageManagement (OneGet)</a></li>
  <li><a href="#最初にすること" id="markdown-toc-最初にすること">最初にすること</a></li>
  <li><a href="#packagemanagementを使ってみる" id="markdown-toc-packagemanagementを使ってみる">PackageManagementを使ってみる</a>    <ul>
      <li><a href="#providersouerce" id="markdown-toc-providersouerce">Provider/Souerce</a></li>
      <li><a href="#アプリのインストール" id="markdown-toc-アプリのインストール">アプリのインストール</a></li>
      <li><a href="#アプリのアンインストール" id="markdown-toc-アプリのアンインストール">アプリのアンインストール</a></li>
    </ul>
  </li>
  <li><a href="#powershell-tips" id="markdown-toc-powershell-tips">PowerShell tips</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="packagemanagement-oneget">PackageManagement (OneGet)</h2>

<p><a href="https://technet.microsoft.com/en-us/library/mt422622.aspx">PackageManagement</a>
は元々
<a href="https://github.com/OneGet/oneget">OneGet</a>
と呼ばれていたもので、
Windows 10からはPowerShellコマンドとしてデフォルトでインストールされています。</p>

<p>以前、Chocolateyというツールをインストールして使っていましたが、
PackageManagementではこのChocolateyもパッケージソースとして取り込むことで
Chocolateyに登録されているアプリもPackageManagementのコマンドで
管理できる様になります。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/11/22/computer-windows/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20131122_chocolatey_120_90.jpg" width="120" height="90" alt="20131122_chocolatey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/11/22/computer-windows/">Chocolateyをインストール: Cygwinからも使う</a></div></li></ul>

<p>デフォルトで入ってるツールという事でこれで管理してみることに。</p>

<p>Windows 10より前のバージョンでは
以下よりWindows Management Framework 5.0をインストールすれば使える様になります。</p>

<blockquote>
  <p><del>Download Windows Management Framework 5.0 Preview April 2015 from Official Microsoft Download Center: https://www.microsoft.com/en-us/download/details.aspx?id=46889</del></p>
</blockquote>

<h2 id="最初にすること">最初にすること</h2>

<p>なにげに超重要事項ですが、
PackageManagementコマンドを使う前に
管理者権限でPowerShellを立ち上げて</p>

<pre><code>PS &gt; Set-ExecutionPolicy RemoteSigned
</code></pre>

<p>を実行します。</p>

<p><code>ExecutionPlicy</code>はPowerShellのスクリプト実行に関するポリシーで、
デフォルトでは<code>Restricted</code>になっていて、
一切のスクリプトの実行が禁止されています。</p>

<p>なので普通にPowerShellからスクリプトを実行することも出来ません。</p>

<p>設定できる値は</p>

<ul>
  <li><code>Restricted</code>: 全てのスクリプトの実行禁止。</li>
  <li><code>AllSigned</code>: 署名付きのスクリプトのみ実行可能。</li>
  <li><code>RemoteSigned</code>: 署名付きのスクリプト、及びローカルに保存されているスクリプトが実行可能。</li>
  <li><code>Unrestricted</code>: 全てのスクリプトが実行可能。ただし署名なしのネット上のスクリプトは実行するかどうか許可を求められる。</li>
  <li><code>Bypass</code>: 全てのスクリプトをそのまま実行。</li>
</ul>

<p>ということで、PackageManagementなんかはインストール用の
スクリプトをダウンロードして使うので<code>RemoteSigned</code>以下の設定にする必要があります。</p>

<p><code>ローカル</code>と言ってもネットからダウンロードしたものはZoneIDという情報により
識別されるとのこと。</p>

<blockquote>
  <p><a href="http://www.atmarkit.co.jp/ait/articles/0805/16/news139.html">Tech TIPS：WindowsでPowerShellスクリプトの実行セキュリティポリシーを変更する - ＠IT</a></p>
</blockquote>

<p>いずれにしろ、この設定をしないままPackageManagementを使ってインストールしようとすると
インストールできたように見えて出来てない、みたいな事が起こるので注意。
(最初それがわからないまま全然インストール出来ないので暫く無視していた訳で。。。)</p>

<h2 id="packagemanagementを使ってみる">PackageManagementを使ってみる</h2>

<p>ExecutionPlicyの設定が終わったら、
通常ユーザーでPowerShellを立ち上げ直してPackageManagementコマンドを使ってみます。</p>

<blockquote>
  <p><a href="https://technet.microsoft.com/en-us/library/mt422622.aspx">Package Management Cmdlets</a></p>
</blockquote>

<p>上のページに使えるコマンドが載っていますが、
基本、<code>Find-</code>が取り扱える物の検索、<code>Get-</code>が既にインストールされてる物の検索、
<code>Install-</code>がインストール、<code>Uninstall-</code>がアンインストール、になります。</p>

<h3 id="providersouerce">Provider/Souerce</h3>

<p>PackageManagementではProviderを経由してパッケージをインストールします。
ProviderはPSModuleやNuGet、Chocolateyなどパッケージを供給するシステムです。</p>

<p>さらにそれらのProviderが使うSourceの設定もあります。
ChocolateyならSourceもChocolateyです。</p>

<pre><code>PS &gt; Find-PackageProvider

Name                           Version          Source                         Summary
----                           -------          ------                         -------
nuget                          2.8.5.202        https://az818661.vo.msecnd.... NuGet provider for the OneGet meta-pa...
chocolatey                     2.8.5.130        https://az818661.vo.msecnd.... ChocolateyPrototype provider for the ...
ContainerProvider              0.5.2            PSGallery                      ContainerProvider is a Windows PowerS...
GistProvider                   0.6              PSGallery                      Gist-as-a-Package - PackageManagement...
TSDProvider                    0.2              PSGallery                      PowerShell PackageManager provider to...
GitHubProvider                 0.5              PSGallery                      GitHub-as-a-Package - PackageManageme...
MyAlbum                        0.1.2            PSGallery                      MyAlbum provider discovers the photos...
OfficeProvider                 1.0.0.1          PSGallery                      OfficeProvider allows users to instal...
</code></pre>

<p>で使えるプロバイダー一覧が出てきますが、実際にインストールされているものは</p>

<pre><code>PS &gt; Get-PackageProvider

Name                     Version          DynamicOptions
----                     -------          --------------
msi                      3.0.0.0          AdditionalArguments
msu                      3.0.0.0
NuGet                    2.8.5.201        Destination, ExcludeVersion, Headers, FilterOnTag, Contains, AllowPrerelea.
PowerShellGet            1.0.0.1          PackageManagementProvider, Type, Scope, InstallUpdate, PackageManagementPr.
Programs                 3.0.0.0          IncludeWindowsInstaller, IncludeSystemComponent
</code></pre>

<p>で出てきます。最初はNuGetやChocolateyは入っていません。</p>

<p>登録は<code>Install-PackageProvider Chocolatey</code>でも良いのですが、</p>

<pre><code>PS &gt; Get-PackageProvider Chocolatey -ForceBootstrap
</code></pre>

<p>としてもインストールされて無ければ自動的インストールされます。</p>

<p>このコマンドのヘルプを見る限りそうでは無さそうなんですが、
このオプションを付けなくても何故かGetで確認するだけでもインストール出来てるみたいです。</p>

<pre><code>PS &gt; Get-PackageProvider

Name                     Version          DynamicOptions
----                     -------          --------------
Chocolatey               2.8.5.130        SkipDependencies, ContinueOnFailure, ExcludeVersion, ForceX86, PackageSave.
msi                      3.0.0.0          AdditionalArguments
msu                      3.0.0.0
NuGet                    2.8.5.201        Destination, ExcludeVersion, Headers, FilterOnTag, Contains, AllowPrerelea.
PowerShellGet            1.0.0.1          PackageManagementProvider, Type, Scope, InstallUpdate, PackageManagementPr.
Programs                 3.0.0.0          IncludeWindowsInstaller, IncludeSystemComponent
</code></pre>

<p>でChocolateyが入っていればOK。ついでのソースもチェックすると</p>

<pre><code>PS &gt; Get-PackageSource

Name                             ProviderName     IsTrusted  IsRegistered IsValidated  Location
----                             ------------     ---------  ------------ -----------  --------
chocolatey                       Chocolatey       True       True         True         http://chocolatey.org/api/v2
PSGallery                        PowerShellGet    False      True         False        https://www.powershellgallery.
</code></pre>

<p>こちらにも<code>chocolatey</code>が入っているはずです。
(最初は<code>PSGallery</code>だけがSourceにはあります。)</p>

<p>これでChocolateyに登録されているアプリをインストールする準備が整いました。</p>

<h3 id="アプリのインストール">アプリのインストール</h3>

<p>まず、Chocolateyのパッケージに登録されている名前を探すために<code>Find</code>で</p>

<pre><code>PS &gt; Find-Package -Name Firefox

Name                           Version          Source                         Summary
----                           -------          ------                         -------
Firefox                        45.0             chocolatey                     Bringing together all kinds of awesomeness to...
</code></pre>

<p>な感じで探すとインストールできるパッケージ一覧が出てきます。
ここでは<code>Firefox</code>という名前で検索したら<code>Firefox</code>というパッケージが
<code>chocolatey</code>ソースに見つかりました。</p>

<p>もちろん、Chocolateyのページからパッケージを探してきてもOKです。</p>

<blockquote>
  <p><a href="https://chocolatey.org/packages">Chocolatey Gallery  Packages</a></p>
</blockquote>

<p>他のコマンドでもソウですが、ここの<code>-Name</code>と云うオプションは無くても大丈夫です。
<code>-</code>オプションになってない最初の引数を検索ワードとして使います。
2つ目以降の引数はコマンドオプションになるので
複数を一気に検索することは出来ない?みたいです。</p>

<p>また、<code>Find-</code>に引数を与えなければ全ての扱えるパッケージが表示されます。</p>

<p>Chocolateyのパッケージだけ表示したい場合は</p>

<pre><code>PS &gt; Find-Package -ProviderName chocolatey
</code></pre>

<p>とします。(-Nameとの組み合わせもOK、というかしないと沢山有りすぎる。)</p>

<p>取り敢えずFirefoxが見つかったのでインストールするには</p>

<pre><code>PS &gt; Install-Package Firefox
</code></pre>

<p>でOK。</p>

<p>この時、</p>

<pre><code>パッケージは、信頼済みとマークされていないパッケージ ソースから取得されています。
'chocolatey' からソフトウェアをアンインストールしますか?
[Y] はい(Y)  [A] すべて続行(A)  [N] いいえ(N)  [L] すべて無視(L)  [S] 中断(S)  [?] ヘルプ (既定値は "N"): y
</code></pre>

<p>と言った感じの表示が出たら上の<code>ExecutionPlicy</code>の設定がきちんと出来ていない状態の可能性があります。
文章を見るとインストールしようとしてるのに<code>アンインストール</code>と言われていて、
これを<code>Y</code>で答えると一見何故かインストールされたかの様になります。
(<code>Get</code>のリストに出る。)
が、実際にはChocolateyのFirefox用のインストールスクリプトを取ってこれただけで
アプリ自体のインストールは行われていません。
(ここでしっかりとしたエラーみたいのが出ないのでちょっと戸惑う。。。
どこかわからない所にインストールされて見つけられないだけじゃないか、的な。。。)</p>

<p>この手のアプリのインストールは通常のインストールファイルを実行してるだけなので、
成功すれば<strong>C:\Program Files\Mozilla Firefox</strong>等に入って
スタートメニューにも登録されているはずです。</p>

<pre><code>PS &gt; Get-Package Firefox
Name                           Version          Source                         Summary
----                           -------          ------                         -------
Firefox                        45.0             C:\Chocolatey\lib\Firefox.4... Bringing together all kinds of awesomeness to make browsing better for you
</code></pre>

<p>みたいに<code>Chocolatey</code>の物が入っていればOK。</p>

<p>また、既にFirefoxがインストールされている場合、
インストールに失敗しますが<code>Get</code>のリストに登録はされます。
(多分<code>Install-Package</code>コマンド実行時点でスクリプトを取ってきて
<strong>C:\Chocolatey\lib</strong>にスクリプトを置くのでそれを見て<code>Get</code>はリストを作ってる感じ。)</p>

<pre><code>PS &gt;  Get-Package Firefox

Name                           Version          Source                         Summary
----                           -------          ------                         -------
Firefox                        45.0             C:\Chocolatey\lib\Firefox.4... Bringing together all kinds of awesom.
Mozilla Firefox 45.0 (x64 ja)  45.0                                            Mozilla Firefox 45.0 (x64 ja)
</code></pre>

<p>ちなみにProviderNameを指定しないと普通にインストールされたものも検索され、
表示されます。</p>

<h3 id="アプリのアンインストール">アプリのアンインストール</h3>

<p>アンインストールは</p>

<pre><code>PS &gt; Uninstall-Package Firefox
</code></pre>

<p>この場合もChocolateyのパッケージいとかだと通常のアプリのアンインストールプログラムを呼び出すだけなので、
仮にもともとFirefoxが入っていて<code>Install-Package</code>をして失敗しても(Firefoxはすでに入っているため)、
<code>Uninstall-Package</code>は出来てもともと入っていたアプリがアンインストールされます。</p>

<p>なので現在すでにインストールされているアプリを
PackageManagementで管理したい、という場合には
一度アンインストールしたりしなくても良くて、
コマンド自体は失敗しても良いから<code>Install-Package</code>で再追加しておけば良いのだと思います。</p>

<div class="postscript">
  <p><strong>追記: 2016/05/14 </strong></p>

  <p>どうも一部のアプリではアンインストールの設定がきちんと書かれてないのか、
<code>Uninstall-Package</code>をしてもリストから削除されるだけで
Windows自体からは削除されないことがあるみたいです。</p>

  <p>コマンドを打って一瞬で終了するような場合は大概きちんとアンインストール出来ていません。</p>

  <p>その場合は<strong>設定</strong><i class="fa fa-arrow-right"></i><strong>アプリと機能</strong>へ行って手動でアンインストールしてください。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="powershell-tips">PowerShell tips</h2>

<p>PackageManagementとは直接関係ないけどいくつかPowerShellに関して。</p>

<ul>
  <li>コマンドの大文字小文字は関係ない</li>
</ul>

<p>Windowsは基本的に大文字小文字を区別しないシステムなので
PowerShell上でも大文字小文字は基本的に関係ありません。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4838506961?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4838506961&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51Cv7ChquuL._SS90_CR0,0,120,90_.jpg" alt="ローマ字の書き方―大文字と小文字 単行本 – 1990/4" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/18/computer-windows-mac-linux/">ファイル名やディレクトリ名の大文字小文字</a></div></li></ul>

<p>上のコマンドもわかりやすく<code>Install-Package Firefox</code>とかやってますが</p>

<pre><code>PS &gt; install-package firefox
</code></pre>

<p>でも全く同じです。</p>

<ul>
  <li>コマンドのヘルプ</li>
</ul>

<p>コマンドのヘルプを見るUnixの<code>man</code>に当たるコマンドは<code>Get-Help</code>です。</p>

<pre><code>PS &gt; Get-Help Install-Package
</code></pre>

<p>等とします。
さらに詳しい情報などが欲しい場合には</p>

<pre><code>PS &gt; Get-Help Install-Package -Detailed
</code></pre>

<p>と<code>-Detailed</code>オプションを。<code>-Examples</code>で例を、
<code>-Full</code>とするとそれらを含めた全てのヘルプを表示してくれます。</p>

<h2 id="まとめ">まとめ</h2>

<p>差し当たりインストールは出来る様になりましたが、
今のところただインストール、アンインストールがコマンドラインから出来る、
というだけの状態。</p>

<p>Chocolateyにはxml形式でアプリをリストしてあるファイルを使うと
全てのアプリを一気にインストールできる、という機能がありましたが、
PackageManagementにはまとめてどうこうする、という機能は今のところ見当たりません。</p>

<p>コマンドラインからインストールできることのメリットは
インストールやその管理を自動化する事に大きくあるので
<a href="https://github.com/rcmdnk/homebrew-file">Brew-file</a>
の様な自動でリストファイルを作って管理出来る様なものが欲しいところ。</p>

<p>前にChocolateyでやってたようにCygiwnからPowerShellスクリプトを呼んで
どうこうするようにすれば簡単なものはすぐ作れそうなものですが、
せっかくPackageManagementが純正で入ってる様な状態なので
PowerShellでなんとか書いてみたいな、とも思ってます。</p>
]]></content>
  </entry>
  
</feed>
