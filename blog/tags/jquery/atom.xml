<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: jQuery | rcmdnk's blog]]></title>
  <link href="http://rcmdnk.github.io/blog/tags/jquery/atom.xml" rel="self"/>
  <link href="http://rcmdnk.github.io/"/>
  <updated>2013-09-14T14:49:27+02:00</updated>
  <id>http://rcmdnk.github.io/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rdmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Topへ戻るボタンの設置]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/05/12/blog-octopress/"/>
    <updated>2013-05-12T09:11:00+02:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/05/12/blog-octopress</id>
    <content type="html"><![CDATA[<p>画面を下にスクロールしていった時に右下に出てくる
Topへ戻る、ボタンを設置したいな、と思ったので、
jQueryのプラグインを使を使って設置してみました。</p>

<!-- more -->


<p><br class="clearBoth">

<h1>Contents</h1>
{:TOC}

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>




</p>

<h1 id="scrolltopcontrol">scrolltopcontrol</h1>

<p><a href="http://www.dynamicdrive.com/dynamicindex3/scrolltop.htm">jQuery Scroll to Top Control v1.1</a>
は、Topへ戻るボタンのjQueryプラグインです。</p>

<p>Octopressへのインストール方法は
まず上のページから<code>scrolltopcontrol.js</code>をダウンロードして
<code>source/javascripts/</code>へ入れます。</p>

<p>次に<code>scrolltopcontrol.js</code>の中身を書きなおしてボタンの画像部分を変更します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">-</span><span class="nx">controlHTML</span><span class="o">:</span> <span class="s1">&#39;&lt;img src=&quot;up.png&quot; style=&quot;width:48px; height:48px&quot; /&gt;&#39;</span><span class="p">,</span> <span class="c1">//HTML for control, which is auto wrapped in DIV w/ ID=&quot;topcontrol&quot;</span>
</span><span class='line'><span class="o">+</span><span class="nx">controlHTML</span><span class="o">:</span> <span class="s1">&#39;&lt;i class=&quot;icon-chevron-up icon-scroll-up&quot;&gt;&lt;/i&gt;&#39;</span><span class="p">,</span> <span class="c1">//HTML for control, which is auto wrapped in DIV w/ ID=&quot;topcontrol&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>今回は画像の代わりにFont-Awesomeの
<code>icon-chevron-up</code><i class="icon-chevron-up"></i>
を使いました。</p>

<p>さらに<code>source/_includes/custom/head.html</code>へ</p>

<p></p>

<pre><code>&lt;script src="http://rcmdnk.github.io//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="{{root_url}}/javascripts/scrolltopcontrol.js" type="text/javascript"&gt;&lt;/script&gt;
</code></pre>

<p>
の2行を加えます。(jqueryの行は、既にfootnote等のインストール時に導入済みの場合は
必要ありません。)</p>

<p>最後に以下の設定を<code>sass/custom/_style.scss</code>へ加えます。</p>

<pre><code>.icon-scroll-up {
  font-size: 3em;
  color: #999999;
  border: solid 2px #999999;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
}
#topcontrol {
  z-index: 100;
}
</code></pre>

<p><code>icon-scroll-up</code>は上の<code>scrolltopcontrol.js</code>内でcontrolHTMLに使った
アイコン用の設定なので特に必要ありませんが、
必要であれば適時用意して下さい。</p>

<p>このcontrolHTMLの部分が最終的に<code>&lt;div id="topcontrol"&gt;~&lt;/div&gt;</code>
に囲まれるので、これをページ上で一番上に持ってくるために最後の3行を加えてあります。</p>

<p>Octopressの中で、<code>footer</code>が<code>z-index: 1;</code>に指定されているので、
これがないと、下の方に行った時に<code>Copyright</code>の横でボタンが隠れてしまうので必要です。</p>

<p>以上で、右下にあるようなボタンを作ることが出来ました。
(:warning:現在は右上:arrow_upper_right:)</p>

<p><img src="/images/post/20130512_gototop.jpg" title="" alt=""></p>

<h1 id="その他のオプション">その他のオプション</h1>

<p><code>scrolltopcontrol.js</code>の中の<code>var scrolltotop</code>内を変更することで
動作を変更することが出来ます。</p>

<ul>
<li>setting:

<ul>
<li>startline: ボタンをいつ出すかを整数で指定(デフォルト100)。トップから指定ピクセルだけ下がった時にボタンが出る(0にすれば常に表示)。</li>
<li>scrollto: 戻る位置の指定。デフォルト(0)だとトップへ。<code>&lt;div id="scrollto-point"&gt;&lt;/div&gt;</code>
等と書いておいて<code>scrollto: "scrollto-point"</code>と指定すればここまで戻る様になる。</li>
<li>scrollduration: 戻る速度(デフォルト1000(ms))。</li>
<li>fadeduration: ボタンのフェードイン/アウトの時間指定。デフォルト<code>[500,100]</code>(ms)。</li>
</ul>
</li>
<li>controlHTML: ボタンの画像指定。</li>
<li>controlattrs: ボタンの位置のオフセット(右下からの距離)。デフォルト{offsetx:5, offsety:5}(ピクセル)<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup><sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup></li>
<li>anchorkeyword: 戻る位置のアンカー名(デフォルト#top)。この名前がtopの位置として
埋め込まれるので、<code>&lt;a href="#top"&gt;上に戻る&lt;/a&gt;</code>等と書いてもボタンと同じ位置に
戻れる様になる。</li>
</ul>


<hr />

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p>ボタンの位置を右下でなくて左下にしたい場合は<br/>
<code>.css({position:mainobj.cssfixedsupport? 'fixed' : 'absolute', bottom:mainobj.controlattrs.offsety, right:mainobj.controlattrs.offsetx, opacity:0, cursor:'pointer'})</code><br/>
となっている部分で<code>right</code>を<code>left</code>に変えてあげればoffsetxが左下からの
距離になります。</p></p>

<p>上にしたい場合は<code>bottom</code>を<code>top</code>へ</p>




<p><a href='#fnref:1' rev='footnote'>↩</a>

</li><li id='fn:2'><p>中央にしたい場合は<code>right:mainobj.controlattrs.offsetx</code>の部分を
<code>right:'50%'</code>か<code>left:'50%'</code>にすればそれっぽく出来ますが、
これらの場合は右端、または左端が中央に来るので、特に横長のボタンを
使うと綺麗に出来ないかもしれません。
その場合にはもうちょっと頑張って書き直すか他の物を使った
方が早いかもしれません。
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Tips]]></title>
    <link href="http://rcmdnk.github.io/blog/2013/03/23/octopress/"/>
    <updated>2013-03-23T09:43:00+01:00</updated>
    <id>http://rcmdnk.github.io/blog/2013/03/23/octopress</id>
    <content type="html"><![CDATA[<p>以前書いて以降にOctopressに関して変更した部分や、
調べた事のメモです。</p>

<!-- more -->


<p><br class="clearBoth">

<h1>Contents</h1>
{:TOC}

<script type="text/javascript"><!--
google_ad_client = "ca-pub-3802317723662375";
/* imgRectMid */
google_ad_slot = "9043394444";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>




</p>

<h1 id="faviconの変更">faviconの変更</h1>

<p>小さいサイズの絵を用意して<code>source/favicon.png</code>と取り替えるだけです。</p>

<h1 id="404+not+found">404 not found</h1>

<p>Octopress+GitHub Pagesで自分のurl以下でページ下で存在しないページにアクセスすると、</p>

<p><img src="/images/post/20130323_GitHabPages404NotFound.png" alt="" title="" class="pic" /></p>

<p>この様に全てGitHub Pagesの404 Page not found が出てきます。
これを、自分のurl以下では自分用の物を表示させるためには</p>

<pre><code>rake new_page["404.md"]
</code></pre>

<p>で<code>source/404.md</code>を作り、中身を適当に編集します。
<code>source/404.html</code>を直接作ってもこれがそのままコピーされるのでそれも可能です。
<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup></p>

<p><a href="/blog/aaaaaaaaaaa">こんな感じ</a>です。</p>

<h1 id="画像の挿入">画像の挿入</h1>

<blockquote><p>Ref: <a href="http://octopress.org/docs/plugins/image-tag/">公式ブログ</a></p></blockquote>

<p>より</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&#123;% img &#091;class names&#093; /path/to/image &#091;width&#093; &#091;height&#093; &#091;title text &#091;alt text&#093;&#093; %&#125;</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Octopressと同じサイト内で画像を挿入させるには、通常<code>source/images/</code>に画像を入れ、</p>

<p>```</p>

<pre><code>&amp;#123;% img /images/pic.png %&amp;#125;
</code></pre>

<p>```</p>

<p>と言うように呼び出すことが出来ます。勿論、画像ファイルは通常のurlでも構いません。</p>

<p>上の公式にあるように、左寄せにして、サイズを100 x 200 にしたいときは</p>

<p>```</p>

<pre><code>&amp;#123;% img left /images/pic.png 100 200 %&amp;#125;
</code></pre>

<p>```</p>

<p>とします。取り敢えず色々試した感じ、<code>width</code>以降に関しては</p>

<ul>
<li>imageファイル直後に数字が1つ若しくは2つある順に<code>weight</code>、<code>height</code>になる。</li>
<li>2つめが数字でない場合、<code>"</code>で囲っていなくても<code>title</code>になる。</li>
<li>ただし、数字から始まる文字列(<code>10aaa</code>)みたいな場合は10だけが<code>height</code>の値になり<code>aaa</code>は無視される。</li>
<li>数字の後、<code>"</code>で囲った言葉ひとつだと、それが<code>"</code>も含めた言葉として認識されて<code>title</code>、<code>alt</code>の両方になる。</li>
</ul>


<p>ちょっと挙動が良くわからないですが、<code>title</code>、<code>alt</code>を気にしなければ、取り敢えず
1つ数字を入れれば<code>width</code>に、2つ入れれば<code>height</code>にも数字が入る、と。</p>

<p>また、Markdownの通常の画像挿入も使えます。</p>

<p><code>
   !&amp;#091;alt&amp;#093;(/images/pic.png "title")
</code></p>

<p>これを使っておけば、GitHubやBitbucketでのプレビューでも画像がみれるので
そちらでも見たいような物はなるべくOctopress(jekyll)独特の文法は避けた方が無難かと。</p>

<p>ただ、これだと画像のサイズが調整できないので、直接htmlを書いてもokです。</p>

<p>```</p>

<pre><code>&lt;img src="http://rcmdnk.github.io/images/pic.png" alt="alt" title="title" width="100" height="100"&gt;
</code></pre>

<p>```</p>

<p>これもちょっと注意が必要で、必ず<code>&lt;p&gt;</code>~<code>&lt;/p&gt;</code>が前後に挿入されるため
インライン的には使えません。
(このラインの前後を他の文章とつなげると、つなげたもの全てが<code>&lt;p&gt;</code>でくくられる様です。)</p>

<p>それから、<code>height</code>だけを指定することが出来ませんでした。
出来上がったhtmlファイルを見ると正しくheightの部分も変換されていて、
そのファイルを直接見ると大きさが正しくブラウザで表示されるのですが、
多分どこかでスタイルが邪魔してOctopressで出来上がったページを見るとサイズ指定が無視されます(bugなのか使用なのか…?)</p>

<p>とりあえず両方共設定してやれば思い通りにはいきます
(高さだけ揃えて横幅が違う物も一揃えに、とやるやり方が今のところ分かりません。)</p>

<h1 id="自分のpostへのリンク">自分のpostへのリンク</h1>

<p><code>post</code>は<code>publish</code>される時にデフォルトだと</p>

<pre><code>2013-03-07-setup-octopress.markdown
</code></pre>

<p>といったpostは</p>

<pre><code>/blog/2013/03/07/setup-octopress
</code></pre>

<p>的な物に変更されますが(<code>_config.yml</code>内の<code>permalink</code>の値)、
これだと少し面倒だし、これらのページヘのリンクを書くと、
ディレクトリ構造を変えた時に全て手で書き換えないといけなくなってしまいます。</p>

<p>そこで、<a href="https://raw.github.com/michael-grole/jekyll/fix_post_url/lib/jekyll/tags/post_url.rb">post_url.rb</a>
というものを導入します
(ダウンロードして<code>plugin</code>フォルダに入れる)。
これを使うと</p>

<p>```</p>

<pre><code>&amp;#091;link to the post&amp;#093;(&amp;#123;% post_url 2013-03-07-setup-octopress %&amp;#125;)
</code></pre>

<p>```</p>

<p>といった、そのままの形で書くことが出来ます。</p>

<h1 id="Markdown記法でのtable">Markdown記法でのtable</h1>

<p>Markdownでは
<code>
 left column | center column | right column
:-----------|:------------:|------------:
a|a|a
b|b|c
</code>
と書くと表組みが簡単に書けるわけですが(二段目の<code>:---</code>等の部分で<code>:</code>が左だけなら
左寄せ、両側なら中寄せ、右だけなら右寄せ)、Octopressでは
<strike>どうやら表組みはHTMLで書きなさいと言うことで最初はサポートされてません</strike> スタイルがちゃんと用意されてないので表示が微妙ですが、一応最初から表組みにはなってます。。</p>

<p>これを有効にするには次の様な表組み用スタイルシートを
<code>source/stylesheets/data-table.css</code>に用意し
<div><script src='https://gist.github.com/5218040.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>更に<code>source/_includes/head.html</code>の<code>head</code>内に
```html</p>

<pre><code>&lt;link href="http://rcmdnk.github.io/stylesheets/data-table.css" media="screen, projection" rel="stylesheet" type="text/css" /&gt;
</code></pre>

<p>```
の一行を加えます。</p>

<p>上の表組みもこのように表示されます。</p>

<table>
<thead>
<tr>
<th align="left"> left column </th>
<th align="center"> center column </th>
<th align="right"> right column</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">a</td>
<td align="center">a</td>
<td align="right">a</td>
</tr>
<tr>
<td align="left">b</td>
<td align="center">b</td>
<td align="right">b</td>
</tr>
<tr>
<td align="left">c</td>
<td align="center">c</td>
<td align="right">c</td>
</tr>
<tr>
<td align="left">d</td>
<td align="center">d</td>
<td align="right">d</td>
</tr>
</tbody>
</table>


<p>Note: 通常のMarkdownと違って、両側に<code>|</code>を入れてしまうと、
左端は余計な区切りに、右端は<code>|</code>文字の最後に挿入される様な形になってしまうので、
Octopressで使う場合は両端の<code>|</code>は入れない様にしないといけません。
(もしかしたらどこか変な使い方をしてるだけかもしれませんが)</p>

<blockquote><p>Ref.: <a href="http://samwize.com/2012/09/24/octopress-table-stylesheet/">Octopress Table Stylesheet</a></p></blockquote>

<h1 id="見出し目次の追加">見出し目次の追加</h1>

<p>上の<code>Contents</code>下に出している各見出しをまとめた目次の出し方です。
<code>_config.yml</code>に
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>rdiscount:
</span><span class='line'>  extensions: &amp;#091;'generate_toc'&amp;#093;
</span><span class='line'>  toc_token: "&amp;#123;TOC&amp;#125;"
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
を追加。記事に
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&#123;:TOC&amp;#125</span></code></pre></td></tr></table></div></figure></notextile></div>
を入れればそこに目次が出来ます。</p>

<p>ただ、これだけだと日本語の見出しを使った場合</p>

<pre><code>Liquid Exception: incompatible character encodings: UTF-8 and ASCII-8BIT in atom.xml
</code></pre>

<p>と怒られるので、</p>

<p><code>~/.rvm/gems/ruby-1.9.3-p392/gems/jekyll-0.12.1/lib/jekyll/converters/markdown.rb</code></p>

<p>(Macで$HOMEにインストールした場合)</p>

<p>または、</p>

<p><code>/lib/ruby/gems/1.9.1/gems/jekyll-0.12.1/lib/jekyll/converters/markdown.rb</code></p>

<p>(cygwinでcommonディレクトリにインストールした場合)</p>

<p>の中身を
<a href="https://github.com/Kinvey/jekyll/commit/21325ce2b71ad138be66748b8df7290dd3438ba4">ここ</a>
で紹介されてるように変更します。</p>

<h1 id="footnote">footnote</h1>

<p><a href="https://github.com/fmcypriano/footnote-octopress">ここ</a>から
<code>footnote.rb</code>をインストール(/plugins/に追加)します。</p>

<hr />

<p>2012/05/01追記
書いた人がユーザー名を変更したらしく
(<code>fmcypriano</code><i class="icon-arrow-right"></i><code>fcy</code>)
現在はこちら
<a href="https://github.com/fcy/footnote-octopress">https://github.com/fcy/footnote-octopress</a>
になってます。</p>

<hr />

<p>フットノートは
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&#123;% footnote_ref 2 %&#125;</span></code></pre></td></tr></table></div></figure></notextile></div>
を挿入するとリンクが出来て<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>
下記を記事の下に書き込めばOK。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&#123;% footnotes %&#125;
</span><span class='line'>  &#123;% fn %&#125; このように下に表示されます。
</span><span class='line'>&#123;% endfootnotes %&#125;</span></code></pre></td></tr></table></div></figure></notextile></div>
リンクにマウスを持って行くとノートがポップアップもしてくれる。</p>

<p>これはmarkdownのコンバーターにrdiscountを使っている場合で、
<code>kramdown</code>などを使うと通常のMarkdownの様な<code>[^1]</code>でリンクを作って
<code>[^1]:</code>で参照先を書く、と言うことも出来ます。</p>

<p>(<code>kramdown</code>ソースコード表示を変更したくてちょっと変えてみましたが、
色々あって取り敢えず保留中です)</p>

<h1 id="テンプレートの変更">テンプレートの変更</h1>

<p>Rakefileにちょっと手を加えて、
<code>rake new_post['xxx']</code>で作る段階でYAMLブロックに挿入される要素を増やします。</p>

<p><code>Rakefile</code>内の110行目辺りに<code>new_post</code>にあたる部分があるので
ここの<code>Creating new post...</code>以下にある部分を変更します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>...
</span><span class='line'>  puts "Creating new post: #{filename}"
</span><span class='line'>  open(filename, 'w') do |post|
</span><span class='line'>    post.puts "---"
</span><span class='line'>    post.puts "layout: post"
</span><span class='line'>    post.puts "title: \"#{title.gsub(/&amp;/,'&amp;amp;')}\""
</span><span class='line'>    post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}"
</span><span class='line'>    post.puts "comments: true"
</span><span class='line'>    post.puts "categories: [#{title.gsub(' ',',')}]"
</span><span class='line'>    post.puts "keywords: #{title.gsub(' ',',')}"
</span><span class='line'>    post.puts "tags: [#{title.gsub(' ',',')}]"
</span><span class='line'>    post.puts "published: false"
</span><span class='line'>    post.puts ""
</span><span class='line'>    post.puts "---"
</span><span class='line'>    post.puts ""
</span><span class='line'>    post.puts "&lt;!-- more --&gt;
</span><span class='line'>    post.puts ""
</span><span class='line'>    post.puts "&lt;h2&gt;Contents&lt;/h2&gt;"
</span><span class='line'>    post.puts "&amp;#123;:TOC&amp;#125;"
</span><span class='line'>  end
</span><span class='line'>...
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
初期値が<code>published: false</code>にしておいた方が気楽に<code>new_post</code>できると思います。
(間違って作った中途半端なファイルがいつの間にかアップロードされることが無い様に)</p>

<p>それから、ほぼ毎回使う下に区切りの<code>more</code>と、目次の項目も最初から書いてあります。</p>

<p><code>categories</code>等にタイトル名をそのまま入れていますが、
通常<code>rake new_post</code>をするときには、カテゴリーになるような言葉を
いくつか入れる様にして、最初からそれを<code>categories</code>と<code>keywards</code>と<code>tags</code>に入れて
しまっています。
(タイトル名はいずれにしろ変更するので)</p>

<p>同じ日に同じカテゴリーの投稿をするときには変更する必要がありますが、
それくらいなら手作業で良いと思いますので。</p>

<p>それから、YAMLブロックの最後に空白を入れてあります。
こうしないとブロックの一番最後の行がMarkdownエディタで見出し文字に
なってしまいますので。</p>

<p><code>categories</code>と<code>tags</code>については、今のところちゃんと使い切れてないので、
取り敢えず両方に同じ値を入れています。</p>

<p>直ぐ下の<code>new_page</code>にあたる部分にも、取り敢えず
<code>published: false</code>だけ追加してあります。</p>

<h1 id="Markdown拡張子の変更">Markdown拡張子の変更</h1>

<p>Rakefileでついでに26行目あたりにある</p>

<pre><code>new_post_ext    = "markdown"  # default new post file extension when using the new_post task
new_page_ext    = "markdown"  # default new page file extension when using the new_page task
</code></pre>

<p>の行を</p>

<pre><code>new_post_ext    = "md"  # default new post file extension when using the new_post task
new_page_ext    = "md"  # default new page file extension when using the new_page task
</code></pre>

<p>として、新しく<code>new_post</code>した時に出来るファイルの拡張子を<code>.md</code>にして短くして
おきました。</p>

<h1 id="関連記事">関連記事</h1>

<p><a href="https://github.com/LawrenceWoodman/related_posts-jekyll_plugin">ここ</a>から
<code>related_posts.rb</code>をとってきて<code>plugins</code>ディレクトリに入れます。</p>

<p>次に、
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;div class="related_posts"&gt;
</span><span class='line'>&lt;h3&gt;You may also like...&lt;/h3&gt;
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>&amp;#123;% for post in site.related_posts limit:5 %&amp;#125;
</span><span class='line'>&lt;li&gt;&lt;a href="&amp;#123;&amp;#123; post.url &amp;#125;&amp;#125;;"&gt;&amp;#123;&amp;#123;post.title &amp;#125;&amp;#125;&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>&amp;#123;% endfor %&amp;#125;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>と言った形の内容で、<code>source/_includes/post/related_posts.html</code>と言うファイルを作ります。</p>

<p>次に、<code>source/_layouts/post.html</code>を編集して、
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&amp;#123;% unless site.related_posts == false %&amp;#125;
</span><span class='line'>&amp;#123;% include post/related_posts.html %&amp;#125;
</span><span class='line'>&amp;#123;% endunless %&amp;#125;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
の3行を<code>footer</code>内に挿入する。(一番下に入れました。)</p>

<p>下にある<code>You may also like...</code>のところです。</p>

<p>さらに<code>_config.yml</code>へ</p>

<pre><code># Related post
related_posts: true
related_posts_limit: 5
</code></pre>

<p>と入れておきます。</p>

<p>このプラグインでは<code>tags</code>の値をみて、関連ある投稿を集めます。
プラグインの中身を見れば直ぐ分かるのですが、
最初、<code>categories</code>だけを設定していたので、
全然関連付け記事が取れなくてちょっと悩みました</p>

<h1 id="タグクラウド">タグクラウド</h1>

<blockquote><p>Ref: <a href="http://tokkonopapa.github.com/blog/2012/01/04/octopress-plugin-for-categories-cloud/">Octopress用Tag Cloudプラグインをリリースします</a></p></blockquote>

<p>で公開されているプラグインを使いました。
<a href="https://github.com/tokkonopapa/octopress-tagcloud">このレポジトリ</a>
をcloneするなり中身をダウンロードしてくるなりして、</p>

<ul>
<li><code>octopress-tagcloud/plugin/tag_cloud.rb</code>を<code>plugin/</code>フォルダに、</li>
<li><code>octopress-tagcloud/source/_includes/custom/asdies/</code>にある
<code>tag_cloud.html</code>と<code>category_list.html</code>を
<code>source/_includes/custom/asdies/</code>に</li>
</ul>


<p>コピーします。</p>

<p>後は
<code>_config.yml</code>内の<code>default_asides:</code>の配列に</p>

<pre><code>custom/asides/tag_cloud.html
</code></pre>

<p>を加えればタグクラウドが表示されます。</p>

<p>さらに</p>

<pre><code>custom/asides/category_list.html
</code></pre>

<p>を加えればカテゴリーが
リスト形式で表示されます。</p>

<p>ここでタグクラウド、と言っているものは<code>categories</code>で指定された物の
クラウド表記になります。(category_listも同様)</p>

<hr />

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p> <code>new_page</code>に与える値が、拡張子を持っていれば(<code>.</code>付きなら)、
  その名前のファイルが作られ、拡張子がなければ、その名前のディレクトリが出来て
  その中に<code>index.markdown</code>が出来ます。
  Markdownの拡張子に指定されているファイル(<code>.md</code>等)以外は<code>
  基本的にそのままコピーされます。
  なので直接</code>html<code>で書きたい場合には適当なところに</code>html<code>を作るか</code>rake new_page[]<code>
  の引数に</code>html`拡張子付きのファイル名を入れてテンプレートを作ることも
  場合によっては便利なこともあるかと思います。</p></p>

<p>  <a href='#fnref:1' rev='footnote'>↩</a>

</li><li id='fn:2'><p> このように下に表示されます。
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
