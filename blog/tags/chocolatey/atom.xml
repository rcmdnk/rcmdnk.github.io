<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Chocolatey | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/chocolatey/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T10:06:03+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows Package Manager?]]></title>
    <link href="https://rcmdnk.com/blog/2020/05/23/computer-windows-chocolatey-packagemanagement-powershell/"/>
    <updated>2020-05-23T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/05/23/computer-windows-chocolatey-packagemanagement-powershell</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B013I9SWMC?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B013I9SWMC&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51m%2BteN-t7L._SS200_.jpg" alt="Microsoft Windows 10 Home April 2018 Update適用 32bit/64bit 日本語版【最新】|オンラインコード版" /></a>
</div>

<p>Windowsの新しいパッケージマネージャー、
<a href="https://devblogs.microsoft.com/commandline/windows-package-manager-preview/">Windows Package Manager</a>
というものが開発中でプレビュー版として配布されるようになったそうです。</p>

<p>以前PackageManagementというものがあったはずなんですが、どうなったのか。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-package-manager" id="markdown-toc-windows-package-manager">Windows Package Manager</a></li>
  <li><a href="#packagemanagement" id="markdown-toc-packagemanagement">PackageManagement…?</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-package-manager">Windows Package Manager</h2>

<p>Windows Package ManagerはOSSになっていてGitHubでソースも見ることが出来ます。</p>

<div class="github-widget" data-repo="microsoft/winget-cli"></div>
<div class="github-widget" data-repo="microsoft/winget-pkgs"></div>

<p><a href="https://docs.microsoft.com/ja-jp/windows/package-manager/">Windows パッケージ マネージャー</a></p>

<p><a href="https://www.reddit.com/r/sysadmin/comments/gmrwxi/windows_package_manager_wingetexe/">📢 Windows Package Manager  winget.exe : sysadmin</a></p>

<p>使いたい場合は
Windowsの<a href="https://insider.windows.com/ja-jp/">Insider</a>版を入れると
使える様になるとのことです。</p>

<p>PowerShellとかで</p>

<pre><code>PS &gt; winget instll firefox
</code></pre>

<p>とかでアプリやツールがインストールできる様になります。</p>

<p>Microsoft Storeに行くと<strong>アプリインストーラー</strong>というのがあって、これをインストールすると
使える様になるのですが、
このアプリ自体は以前から存在していて既にインストールされてるかもしれません。
以前のこれが入っていても<code>winget</code>は使えません。</p>

<p>Insiderを入れてるとプレビュー版の<strong>アプリインストーラー</strong>がインストール出来るようになるので、
Insiderにしてから再度<strong>アプリインストーラー</strong>を入れると<code>winget</code>が使える様になります。</p>

<p>これをインストールしてもInsider版にしておかないと使えるようにはならないみたいです。
(PowerShellで<code>winget</code>コマンドが使えない。)</p>

<p>直接
<a href="https://github.com/microsoft/winget-cli/releases">Releases</a>
から取れる、とも書いてあるんですが、今現在ここにある
<strong>http://microsoft.desktopappinstaller_8wekyb3d8bbwe.appxbundle/</strong>
がリンク切れになってます。</p>

<p>自分でビルドするのも準備が面倒なのでやってません。</p>

<p>Microsoftのネイティブなパッケージマネージャー、コマンドラインツール、
ということで期待されていて、
特にマルウェアなどの危険なパッケージを排除し、信頼性の高いものにしようとしているみたいです。</p>

<p>その辺りでサードパーティーなChocolateyなどとの違いを見せていこうとしているようです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20131122_chocolatey_120_90.jpg" width="120" height="90" alt="20131122_chocolatey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/">Chocolateyのアップデート</a></div></li></ul>

<p>まだ開発は途上段階、といった感じで
パッケージをアップデートする、などは出来なかったりするみたいです。</p>

<p><a href="https://github.com/microsoft/winget-cli/issues/120">–update · Issue #120 · microsoft/winget-cli</a></p>

<h2 id="packagemanagement">PackageManagement…?</h2>

<p>と、サードパーティー製のものは今もある、という話ですが、
実はネイティブなパッケージマネージャーも以前出しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/1849756570?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=1849756570&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51ITdNrjmqL._SS90_CR0,0,120,90_.jpg" alt="Deliciously Chocolatey: 100 Cocoa-rich Recipes for Bakes, Cakes and Chocolate Treats" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement/">Windows 10でPackageManagement (OneGet) + Chocolateyでアプリ管理</a></div></li></ul>

<p>元々<a href="https://github.com/OneGet/oneget">OneGet</a>と言われていたものが
PackageManagementというプロジェクト?となりました。</p>

<p><a href="https://docs.microsoft.com/ja-jp/powershell/module/packagemanagement/?view=powershell-6">PackageManagement</a></p>

<p><a href="https://ja.wikipedia.org/wiki/PackageManagement">PackageManagement - Wikipedia</a></p>

<p>これを使って</p>

<pre><code>PS &gt; Install-Package Firefox
</code></pre>

<p>とかやるとインストールが出来るようになってました。
このコマンドは最初からインストールされています。</p>

<p>PackageManagementはCoholateyなどのレポジトリも使うことが出来、
それらサードパーティ製のレポジトリのラッパーツール的な使い方も出来ました。</p>

<p>なのでこれを使ってたんですが、いつのまにやらコマンドは使えるものの、</p>

<p>一方、Chocolateyの方は使えたのでそちらを使ってました。</p>

<p>で、今回こんな話が出てきたので、PackageManagementのアップデートか?
と思ったらどうやら全く別のものな模様。</p>

<p>最近のPackageManagementをちょっと探ってみると、どうやら一応使えてる人は使えてるみたい?
(でもやっぱり手元でやってみるとうまくいかない。。。)</p>

<p><a href="https://github.com/oneget/oneget">レポジトリ</a>
の方は1ヶ月位前にはアップデートがありますが、リリースは1年くらい前が最後。</p>

<p>なのでこちらは無くなる感じ?</p>

<p>あと、今回のWindows Package Managerの話が出てくる所で<code>OneGet</code>という単語は出てくるんですが、
<code>PackageManagement</code>という単語は見かけませんでした。</p>

<p>PackageManagementというものが認知度が低かったのか、ほぼなかったことにされそうな感じ?</p>

<p>PackageManagementがそもそもなんで<code>Management</code>という名前がツールとして微妙だな、と思ってましたが、
新しいのは<code>Manager</code>とそれっぽい感じ。
ただ、Widnows Package Managerとはまたそのままだな、と。</p>

<h2 id="まとめ">まとめ</h2>

<p>ということで、まだ実際に触ってないのですが、PackageManagementは?と思ったので書いておきました。</p>

<p>WSL2とかもあるので、Insider入れて色々と見てみても良いかな、と思い始めた今日このごろ。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 10でPackageManagement (OneGet) + Chocolateyでアプリ管理]]></title>
    <link href="https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement/"/>
    <updated>2016-03-11T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/1849756570?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=1849756570&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51ITdNrjmqL._SS200_.jpg" alt="Deliciously Chocolatey: 100 Cocoa-rich Recipes for Bakes, Cakes and Chocolate Treats" /></a>
</div>

<p><a href="https://rcmdnk.com/blog/2016/02/04/computer-windows/">新しいWindowsマシンを手に入れて</a>
からアプリとかを取り敢えず直接手で入れてましたが
落ち着いた所でMacのHomebrewやLinux apt-get/yum的な
パッケージ管理を試してみました。</p>

<p>Windows 10からはデフォルトでPackageManagementという
パッケージ管理用のコマンドツールが
PowerShellで使える様になっています。</p>

<p>そのツールからパッケージソースとしてChocolateyを使い、
登録されているアプリをインストールすることが出来ます。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#packagemanagement-oneget" id="markdown-toc-packagemanagement-oneget">PackageManagement (OneGet)</a></li>
  <li><a href="#最初にすること" id="markdown-toc-最初にすること">最初にすること</a></li>
  <li><a href="#packagemanagementを使ってみる" id="markdown-toc-packagemanagementを使ってみる">PackageManagementを使ってみる</a>    <ul>
      <li><a href="#providersouerce" id="markdown-toc-providersouerce">Provider/Souerce</a></li>
      <li><a href="#アプリのインストール" id="markdown-toc-アプリのインストール">アプリのインストール</a></li>
      <li><a href="#アプリのアンインストール" id="markdown-toc-アプリのアンインストール">アプリのアンインストール</a></li>
    </ul>
  </li>
  <li><a href="#powershell-tips" id="markdown-toc-powershell-tips">PowerShell tips</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="packagemanagement-oneget">PackageManagement (OneGet)</h2>

<p><a href="https://technet.microsoft.com/en-us/library/mt422622.aspx">PackageManagement</a>
は元々
<a href="https://github.com/OneGet/oneget">OneGet</a>
と呼ばれていたもので、
Windows 10からはPowerShellコマンドとしてデフォルトでインストールされています。</p>

<p>以前、Chocolateyというツールをインストールして使っていましたが、
PackageManagementではこのChocolateyもパッケージソースとして取り込むことで
Chocolateyに登録されているアプリもPackageManagementのコマンドで
管理できる様になります。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/11/22/computer-windows/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20131122_chocolatey_120_90.jpg" width="120" height="90" alt="20131122_chocolatey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/11/22/computer-windows/">Chocolateyをインストール: Cygwinからも使う</a></div></li></ul>

<p>デフォルトで入ってるツールという事でこれで管理してみることに。</p>

<p>Windows 10より前のバージョンでは
以下よりWindows Management Framework 5.0をインストールすれば使える様になります。</p>

<blockquote>
  <p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=46889">Download Windows Management Framework 5.0 Preview April 2015 from Official Microsoft Download Center</a></p>
</blockquote>

<h2 id="最初にすること">最初にすること</h2>

<p>なにげに超重要事項ですが、
PackageManagementコマンドを使う前に
管理者権限でPowerShellを立ち上げて</p>

<pre><code>PS &gt; Set-ExecutionPolicy RemoteSigned
</code></pre>

<p>を実行します。</p>

<p><code>ExecutionPlicy</code>はPowerShellのスクリプト実行に関するポリシーで、
デフォルトでは<code>Restricted</code>になっていて、
一切のスクリプトの実行が禁止されています。</p>

<p>なので普通にPowerShellからスクリプトを実行することも出来ません。</p>

<p>設定できる値は</p>

<ul>
  <li><code>Restricted</code>: 全てのスクリプトの実行禁止。</li>
  <li><code>AllSigned</code>: 署名付きのスクリプトのみ実行可能。</li>
  <li><code>RemoteSigned</code>: 署名付きのスクリプト、及びローカルに保存されているスクリプトが実行可能。</li>
  <li><code>Unrestricted</code>: 全てのスクリプトが実行可能。ただし署名なしのネット上のスクリプトは実行するかどうか許可を求められる。</li>
  <li><code>Bypass</code>: 全てのスクリプトをそのまま実行。</li>
</ul>

<p>ということで、PackageManagementなんかはインストール用の
スクリプトをダウンロードして使うので<code>RemoteSigned</code>以下の設定にする必要があります。</p>

<p><code>ローカル</code>と言ってもネットからダウンロードしたものはZoneIDという情報により
識別されるとのこと。</p>

<blockquote>
  <p><a href="http://www.atmarkit.co.jp/ait/articles/0805/16/news139.html">Tech TIPS：WindowsでPowerShellスクリプトの実行セキュリティポリシーを変更する - ＠IT</a></p>
</blockquote>

<p>いずれにしろ、この設定をしないままPackageManagementを使ってインストールしようとすると
インストールできたように見えて出来てない、みたいな事が起こるので注意。
(最初それがわからないまま全然インストール出来ないので暫く無視していた訳で。。。)</p>

<h2 id="packagemanagementを使ってみる">PackageManagementを使ってみる</h2>

<p>ExecutionPlicyの設定が終わったら、
通常ユーザーでPowerShellを立ち上げ直してPackageManagementコマンドを使ってみます。</p>

<blockquote>
  <p><a href="https://technet.microsoft.com/en-us/library/mt422622.aspx">Package Management Cmdlets</a></p>
</blockquote>

<p>上のページに使えるコマンドが載っていますが、
基本、<code>Find-</code>が取り扱える物の検索、<code>Get-</code>が既にインストールされてる物の検索、
<code>Install-</code>がインストール、<code>Uninstall-</code>がアンインストール、になります。</p>

<h3 id="providersouerce">Provider/Souerce</h3>

<p>PackageManagementではProviderを経由してパッケージをインストールします。
ProviderはPSModuleやNuGet、Chocolateyなどパッケージを供給するシステムです。</p>

<p>さらにそれらのProviderが使うSourceの設定もあります。
ChocolateyならSourceもChocolateyです。</p>

<pre><code>PS &gt; Find-PackageProvider

Name                           Version          Source                         Summary
----                           -------          ------                         -------
nuget                          2.8.5.202        https://az818661.vo.msecnd.... NuGet provider for the OneGet meta-pa...
chocolatey                     2.8.5.130        https://az818661.vo.msecnd.... ChocolateyPrototype provider for the ...
ContainerProvider              0.5.2            PSGallery                      ContainerProvider is a Windows PowerS...
GistProvider                   0.6              PSGallery                      Gist-as-a-Package - PackageManagement...
TSDProvider                    0.2              PSGallery                      PowerShell PackageManager provider to...
GitHubProvider                 0.5              PSGallery                      GitHub-as-a-Package - PackageManageme...
MyAlbum                        0.1.2            PSGallery                      MyAlbum provider discovers the photos...
OfficeProvider                 1.0.0.1          PSGallery                      OfficeProvider allows users to instal...
</code></pre>

<p>で使えるプロバイダー一覧が出てきますが、実際にインストールされているものは</p>

<pre><code>PS &gt; Get-PackageProvider

Name                     Version          DynamicOptions
----                     -------          --------------
msi                      3.0.0.0          AdditionalArguments
msu                      3.0.0.0
NuGet                    2.8.5.201        Destination, ExcludeVersion, Headers, FilterOnTag, Contains, AllowPrerelea.
PowerShellGet            1.0.0.1          PackageManagementProvider, Type, Scope, InstallUpdate, PackageManagementPr.
Programs                 3.0.0.0          IncludeWindowsInstaller, IncludeSystemComponent
</code></pre>

<p>で出てきます。最初はNuGetやChocolateyは入っていません。</p>

<p>登録は<code>Install-PackageProvider Chocolatey</code>でも良いのですが、</p>

<pre><code>PS &gt; Get-PackageProvider Chocolatey -ForceBootstrap
</code></pre>

<p>としてもインストールされて無ければ自動的インストールされます。</p>

<p>このコマンドのヘルプを見る限りそうでは無さそうなんですが、
このオプションを付けなくても何故かGetで確認するだけでもインストール出来てるみたいです。</p>

<pre><code>PS &gt; Get-PackageProvider

Name                     Version          DynamicOptions
----                     -------          --------------
Chocolatey               2.8.5.130        SkipDependencies, ContinueOnFailure, ExcludeVersion, ForceX86, PackageSave.
msi                      3.0.0.0          AdditionalArguments
msu                      3.0.0.0
NuGet                    2.8.5.201        Destination, ExcludeVersion, Headers, FilterOnTag, Contains, AllowPrerelea.
PowerShellGet            1.0.0.1          PackageManagementProvider, Type, Scope, InstallUpdate, PackageManagementPr.
Programs                 3.0.0.0          IncludeWindowsInstaller, IncludeSystemComponent
</code></pre>

<p>でChocolateyが入っていればOK。ついでのソースもチェックすると</p>

<pre><code>PS &gt; Get-PackageSource

Name                             ProviderName     IsTrusted  IsRegistered IsValidated  Location
----                             ------------     ---------  ------------ -----------  --------
chocolatey                       Chocolatey       True       True         True         http://chocolatey.org/api/v2
PSGallery                        PowerShellGet    False      True         False        https://www.powershellgallery.
</code></pre>

<p>こちらにも<code>chocolatey</code>が入っているはずです。
(最初は<code>PSGallery</code>だけがSourceにはあります。)</p>

<p>これでChocolateyに登録されているアプリをインストールする準備が整いました。</p>

<h3 id="アプリのインストール">アプリのインストール</h3>

<p>まず、Chocolateyのパッケージに登録されている名前を探すために<code>Find</code>で</p>

<pre><code>PS &gt; Find-Package -Name Firefox

Name                           Version          Source                         Summary
----                           -------          ------                         -------
Firefox                        45.0             chocolatey                     Bringing together all kinds of awesomeness to...
</code></pre>

<p>な感じで探すとインストールできるパッケージ一覧が出てきます。
ここでは<code>Firefox</code>という名前で検索したら<code>Firefox</code>というパッケージが
<code>chocolatey</code>ソースに見つかりました。</p>

<p>もちろん、Chocolateyのページからパッケージを探してきてもOKです。</p>

<blockquote>
  <p><a href="https://chocolatey.org/packages">Chocolatey Gallery  Packages</a></p>
</blockquote>

<p>他のコマンドでもソウですが、ここの<code>-Name</code>と云うオプションは無くても大丈夫です。
<code>-</code>オプションになってない最初の引数を検索ワードとして使います。
2つ目以降の引数はコマンドオプションになるので
複数を一気に検索することは出来ない?みたいです。</p>

<p>また、<code>Find-</code>に引数を与えなければ全ての扱えるパッケージが表示されます。</p>

<p>Chocolateyのパッケージだけ表示したい場合は</p>

<pre><code>PS &gt; Find-Package -ProviderName chocolatey
</code></pre>

<p>とします。(-Nameとの組み合わせもOK、というかしないと沢山有りすぎる。)</p>

<p>取り敢えずFirefoxが見つかったのでインストールするには</p>

<pre><code>PS &gt; Install-Package Firefox
</code></pre>

<p>でOK。</p>

<p>この時、</p>

<pre><code>パッケージは、信頼済みとマークされていないパッケージ ソースから取得されています。
'chocolatey' からソフトウェアをアンインストールしますか?
[Y] はい(Y)  [A] すべて続行(A)  [N] いいえ(N)  [L] すべて無視(L)  [S] 中断(S)  [?] ヘルプ (既定値は "N"): y
</code></pre>

<p>と言った感じの表示が出たら上の<code>ExecutionPlicy</code>の設定がきちんと出来ていない状態の可能性があります。
文章を見るとインストールしようとしてるのに<code>アンインストール</code>と言われていて、
これを<code>Y</code>で答えると一見何故かインストールされたかの様になります。
(<code>Get</code>のリストに出る。)
が、実際にはChocolateyのFirefox用のインストールスクリプトを取ってこれただけで
アプリ自体のインストールは行われていません。
(ここでしっかりとしたエラーみたいのが出ないのでちょっと戸惑う。。。
どこかわからない所にインストールされて見つけられないだけじゃないか、的な。。。)</p>

<p>この手のアプリのインストールは通常のインストールファイルを実行してるだけなので、
成功すれば<strong>C:\Program Files\Mozilla Firefox</strong>等に入って
スタートメニューにも登録されているはずです。</p>

<pre><code>PS &gt; Get-Package Firefox
Name                           Version          Source                         Summary
----                           -------          ------                         -------
Firefox                        45.0             C:\Chocolatey\lib\Firefox.4... Bringing together all kinds of awesomeness to make browsing better for you
</code></pre>

<p>みたいに<code>Chocolatey</code>の物が入っていればOK。</p>

<p>また、既にFirefoxがインストールされている場合、
インストールに失敗しますが<code>Get</code>のリストに登録はされます。
(多分<code>Install-Package</code>コマンド実行時点でスクリプトを取ってきて
<strong>C:\Chocolatey\lib</strong>にスクリプトを置くのでそれを見て<code>Get</code>はリストを作ってる感じ。)</p>

<pre><code>PS &gt;  Get-Package Firefox

Name                           Version          Source                         Summary
----                           -------          ------                         -------
Firefox                        45.0             C:\Chocolatey\lib\Firefox.4... Bringing together all kinds of awesom.
Mozilla Firefox 45.0 (x64 ja)  45.0                                            Mozilla Firefox 45.0 (x64 ja)
</code></pre>

<p>ちなみにProviderNameを指定しないと普通にインストールされたものも検索され、
表示されます。</p>

<h3 id="アプリのアンインストール">アプリのアンインストール</h3>

<p>アンインストールは</p>

<pre><code>PS &gt; Uninstall-Package Firefox
</code></pre>

<p>この場合もChocolateyのパッケージいとかだと通常のアプリのアンインストールプログラムを呼び出すだけなので、
仮にもともとFirefoxが入っていて<code>Install-Package</code>をして失敗しても(Firefoxはすでに入っているため)、
<code>Uninstall-Package</code>は出来てもともと入っていたアプリがアンインストールされます。</p>

<p>なので現在すでにインストールされているアプリを
PackageManagementで管理したい、という場合には
一度アンインストールしたりしなくても良くて、
コマンド自体は失敗しても良いから<code>Install-Package</code>で再追加しておけば良いのだと思います。</p>

<div class="postscript">
  <p><strong>追記: 2016/05/14 </strong></p>

  <p>どうも一部のアプリではアンインストールの設定がきちんと書かれてないのか、
<code>Uninstall-Package</code>をしてもリストから削除されるだけで
Windows自体からは削除されないことがあるみたいです。</p>

  <p>コマンドを打って一瞬で終了するような場合は大概きちんとアンインストール出来ていません。</p>

  <p>その場合は<strong>設定</strong><i class="fa fa-arrow-right"></i><strong>アプリと機能</strong>へ行って手動でアンインストールしてください。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="powershell-tips">PowerShell tips</h2>

<p>PackageManagementとは直接関係ないけどいくつかPowerShellに関して。</p>

<ul>
  <li>コマンドの大文字小文字は関係ない</li>
</ul>

<p>Windowsは基本的に大文字小文字を区別しないシステムなので
PowerShell上でも大文字小文字は基本的に関係ありません。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4838506961?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4838506961&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51Cv7ChquuL._SS90_CR0,0,120,90_.jpg" alt="ローマ字の書き方―大文字と小文字 単行本 – 1990/4" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/18/computer-windows-mac-linux/">ファイル名やディレクトリ名の大文字小文字</a></div></li></ul>

<p>上のコマンドもわかりやすく<code>Install-Package Firefox</code>とかやってますが</p>

<pre><code>PS &gt; install-package firefox
</code></pre>

<p>でも全く同じです。</p>

<ul>
  <li>コマンドのヘルプ</li>
</ul>

<p>コマンドのヘルプを見るUnixの<code>man</code>に当たるコマンドは<code>Get-Help</code>です。</p>

<pre><code>PS &gt; Get-Help Install-Package
</code></pre>

<p>等とします。
さらに詳しい情報などが欲しい場合には</p>

<pre><code>PS &gt; Get-Help Install-Package -Detailed
</code></pre>

<p>と<code>-Detailed</code>オプションを。<code>-Examples</code>で例を、
<code>-Full</code>とするとそれらを含めた全てのヘルプを表示してくれます。</p>

<h2 id="まとめ">まとめ</h2>

<p>差し当たりインストールは出来る様になりましたが、
今のところただインストール、アンインストールがコマンドラインから出来る、
というだけの状態。</p>

<p>Chocolateyにはxml形式でアプリをリストしてあるファイルを使うと
全てのアプリを一気にインストールできる、という機能がありましたが、
PackageManagementにはまとめてどうこうする、という機能は今のところ見当たりません。</p>

<p>コマンドラインからインストールできることのメリットは
インストールやその管理を自動化する事に大きくあるので
<a href="https://github.com/rcmdnk/homebrew-file">Brew-file</a>
の様な自動でリストファイルを作って管理出来る様なものが欲しいところ。</p>

<p>前にChocolateyでやってたようにCygiwnからPowerShellスクリプトを呼んで
どうこうするようにすれば簡単なものはすぐ作れそうなものですが、
せっかくPackageManagementが純正で入ってる様な状態なので
PowerShellでなんとか書いてみたいな、とも思ってます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chocolateyのアップデート]]></title>
    <link href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/"/>
    <updated>2014-07-30T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey</id>
    <content type="html"><![CDATA[<p>久しぶりに
<a href="https://rcmdnk.com/blog/tags/chocolatey/">Chocolatey</a>
を実行しようと思って
Chocolatey自体をアップデートしたら
色々変更があったのでそれらの処置について。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#cygwinからchocolateyを呼ぶ方法" id="markdown-toc-cygwinからchocolateyを呼ぶ方法">CygwinからChocolateyを呼ぶ方法</a></li>
  <li><a href="#chocolateyをアップデート-インストール箇所が変わった" id="markdown-toc-chocolateyをアップデート-インストール箇所が変わった">Chocolateyをアップデート: インストール箇所が変わった</a></li>
  <li><a href="#実行ファイルが変更された" id="markdown-toc-実行ファイルが変更された">実行ファイルが変更された</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="cygwinからchocolateyを呼ぶ方法">CygwinからChocolateyを呼ぶ方法</h2>

<p>Chocolateyの<code>choco</code>コマンドなんかは
コマンドプロンプトやPowershellで使うことが出来ますが、
Cygwinからは通常使えません。</p>

<p>ただ、Powershell等は普段使わないのでどうにも使いづらいものです。</p>

<p>ここで、Cygwinでは</p>

<pre><code>$ cmd /c choco...
</code></pre>

<p>などと書くとコマンドプロンプト用の実行ファイルなどがCygwinから実行出来ます。
なので、各コマンドをaliasでラップして使える様にしたというのがこの話。</p>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/11/22/computer-windows/">Chocolateyを導入: Cygwinからも使う</a></p>
</blockquote>

<p>ただし、アップデート後はここに書かれている様な方法だと下に書くようにCygwinからは実行出来くなります。</p>

<h2 id="chocolateyをアップデート-インストール箇所が変わった">Chocolateyをアップデート: インストール箇所が変わった</h2>

<p>Chocolatey自体も自身の<code>update</code>コマンドを引数なしで使うとアップデートできます。</p>

<pre><code>$ choco update
</code></pre>

<p>これでアップデートできるのですが、その後、
<code>choco</code>コマンドを実行してみると、
まずは下に書くようにCygwinからは実行出来なくなってたんですが、
さらに、コマンドプロンプトなどから行っても、実行できるものの</p>

<pre><code>C:\&gt; choco
The default install location has been changed to 'C:\ProgramData\chocolatey'.
  This install will be updated to that location in the next version. It
  is strongly suggested you move this installation to the new location
  as soon as possible to limit write access from all users. Do not forget
  to update PATH &amp; ChocolateyInstall environment variables.
...
</code></pre>

<p>の様なWarningが出るようになりました。</p>

<blockquote>
  <p><a href="https://github.com/chocolatey/chocolatey/wiki/DefaultChocolateyInstallReasoning">DefaultChocolateyInstallReasoning · chocolatey/chocolatey Wiki</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/chocolatey/chocolatey/wiki/Migrate-Old-Chocolatey-Directory-to-ProgramData">Migrate Old Chocolatey Directory to ProgramData · chocolatey/chocolatey Wiki</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/chocolatey/chocolatey/issues/452">[Enhancement] Default install in ProgramData · Issue #452 · chocolatey/chocolatey</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/chocolatey/chocolatey/issues/494">Add deprecation warning for default installation location · Issue #494 · chocolatey/chocolatey</a></p>
</blockquote>

<p>インストールの説明ページでも
インストール時に行うPATHの設定先が<code>ProgramData</code>下になっています。</p>

<p>コマンドプロンプトからのインストールは</p>

<pre><code>&gt; @powershell -NoProfile -ExecutionPolicy unrestricted -Command "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET PATH=%PATH%;%systemdrive%\ProgramData\chocolatey\bin
</code></pre>

<p>です。</p>

<blockquote>
  <p><a href="https://github.com/chocolatey/chocolatey/wiki/Installation">Installation · chocolatey/chocolatey Wiki</a></p>
</blockquote>

<p>また、Chocolateyによるインストールはシステム全体用、という方針に変わったこともあるようで、
上記のコマンドプロンプトによるインストールを行うと、
<code>PATH</code>や<code>ChocolateyInstall</code>
という値の設定はユーザーの環境変数ではなく、システムの環境変数
に設定される様になっています。</p>

<p>上で手動で変更する際には余りその辺注意されてませんが、
通常個人だけで使うだけならユーザー変数で十分ですが、
他のユーザーも使う可能性がある場合は</p>

<pre><code>C:\ProgramData\chocolatey\bin;
</code></pre>

<p>というPATHを
システムの環境変数に加えておくべきです。</p>

<h2 id="実行ファイルが変更された">実行ファイルが変更された</h2>

<p>以前は、<code>...\Chocolatey\bin\:</code>の下に<code>choco.bat</code>の様なバッチファイル
が入っていました。</p>

<p>ですが、今回アップデートした所、これらは<code>exe</code>ファイルに取って代わられています。</p>

<blockquote>
  <p><a href="https://github.com/chocolatey/chocolatey/issues/372">[Enhancement] Replace Batch Redirector with Shims · Issue #372 · chocolatey/chocolatey</a></p>
</blockquote>

<p>元の<code>bat</code>ファイルも新しい<code>exe</code>ファイルも
<code>...\Chocolatey\chocolateyinstall\chocolatey.ps1</code>
(を呼んでる<code>chocolatey.cmd</code>)
へのラッパーファイルみたいなものなんですが、
<a href="http://technet.microsoft.com/en-us/library/dd837644">Shims</a>
という機能を使って<code>exe</code>の形で良い物が出来る、ということで
取って代わられたようです。</p>

<p>これを呼んでみると</p>

<pre><code>$ choco

  Exception.ToString() が失敗したため、例外文字列を表示できません。
</code></pre>

<p>というエラーが。
ここでの<code>choco</code>は実際には<code>$ cmd /c choco</code>です。</p>

<p>直接<code>choco</code>を呼んで見ても同じエラーが。
どうも呼べない様子。</p>

<p>そこで、
<code>...\Chocolatey\chocolateyinstall\chocolatey.cmd</code>
の方を直接呼ぶとうまくいきました。
こちらは<code>cmd /c</code>なしで直接呼んでもいけます。</p>

<p>なので、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span></span><span class="k">if</span> <span class="o">[[</span> <span class="s2">&quot;</span><span class="nv">$OSTYPE</span><span class="s2">&quot;</span> <span class="o">=</span>~ <span class="s2">&quot;cygwin&quot;</span> <span class="o">]]</span><span class="p">;</span><span class="k">then</span>
</span><span class="line">  <span class="c1"># Chocolatey</span>
</span><span class="line">  <span class="nv">chocolatey</span><span class="o">=</span><span class="s1">&#39;/cygdrive/c/ProgramData/chocolatey/chocolateyinstall/chocolatey.cmd&#39;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">choco</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cinst</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2"> install&quot;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">clist</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2"> list&quot;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cpack</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2"> pack&quot;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cpush</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2"> push&quot;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cuninst</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2"> uninstall&quot;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cup</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$chocolatey</span><span class="s2"> update&quot;</span>
</span><span class="line"><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じで直接<code>chocolatey.cmd</code>を呼ぶコマンドにaliasしておきます。</p>

<p>また、以前は<code>tmp</code>/<code>temp</code>の環境変数がセットされてるとエラーが出ていたので、</p>

<pre><code>unset tmp temp
</code></pre>

<p>みたいなセッティングも入れてましたが今回はセットされてても大丈夫だったので
外してあります。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chocolateyをインストール: Cygwinからも使う]]></title>
    <link href="https://rcmdnk.com/blog/2013/11/22/computer-windows/"/>
    <updated>2013-11-22T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/11/22/computer-windows</id>
    <content type="html"><![CDATA[<p>最近ずっと気になっていたWindowsのパッケージ管理マネージャーの
<a href="http://chocolatey.org/">Chocolatey</a>
を入れてみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#インストール" id="markdown-toc-インストール">インストール</a></li>
  <li><a href="#インストールされるもの" id="markdown-toc-インストールされるもの">インストールされるもの</a></li>
  <li><a href="#基本的なコマンド" id="markdown-toc-基本的なコマンド">基本的なコマンド</a>    <ul>
      <li><a href="#ヘルプ" id="markdown-toc-ヘルプ">ヘルプ</a></li>
      <li><a href="#リストサーチ" id="markdown-toc-リストサーチ">リスト/サーチ</a></li>
      <li><a href="#インストール-1" id="markdown-toc-インストール-1">インストール</a></li>
      <li><a href="#アップデート" id="markdown-toc-アップデート">アップデート</a></li>
      <li><a href="#アンインストール" id="markdown-toc-アンインストール">アンインストール</a></li>
    </ul>
  </li>
  <li><a href="#chocolateygui" id="markdown-toc-chocolateygui">ChocolateyGUI</a></li>
  <li><a href="#cygwinから使う" id="markdown-toc-cygwinから使う">Cygwinから使う</a></li>
  <li><a href="#既にインストールされてるプログラムを登録する" id="markdown-toc-既にインストールされてるプログラムを登録する">既にインストールされてるプログラムを登録する</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="インストール">インストール</h2>

<p>公式にあるように、コマンドプロンプトを立ち上げて次のコマンドを貼り付けて
エンターするだけです。</p>

<pre><code>&gt; @powershell -NoProfile -ExecutionPolicy unrestricted -Command "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET PATH=%PATH%;%systemdrive%\chocolatey\bin
</code></pre>

<div class="postscript">
  <p><strong>追記: 2014/07/30</strong></p>

  <p>Chocolateyの最近のアップデートでインストール場所を
<code>C:\ProgramData\Chocolatey</code>にするように推奨が変わっています。
（コレ以外の場所にインストールすると常にWarningが出る。。。）</p>

  <p>インストールコマンドも</p>

  <pre><code>&gt; @powershell -NoProfile -ExecutionPolicy unrestricted -Command "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET PATH=%PATH%;%systemdrive%\ProgramData\chocolatey\bin
</code></pre>

  <p>の様に<code>ProgramData</code>を加えて行うのが現在の通常のインストール方法です。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>この過程で、
<code>システムのプロパティ</code>
<i class="fa fa-arrow-right"></i>
<code>詳細設定</code>
<i class="fa fa-arrow-right"></i>
<code>環境変数</code>の
<code>ユーザー環境変数</code>として</p>

<ul>
  <li><code>ChocolateyInstall</code>: <code>C:\Chocolatey</code></li>
  <li><code>Path</code>: <code>C:Chocolatey\bin:</code></li>
</ul>

<p>の二つの新たな変数が追加されます。もし、Pathを他の所で使っていればその
Pathに追加される形になっているはずです。</p>

<div class="postscript">
  <p><strong>追記: 2014/07/30</strong></p>

  <p>これらもアップデートにより、システム環境変数の方に追加される様になっています。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>上のコマンドの中で<code>SET PATH</code>をしているので立ち上げたコマンドプロンプトの中では
Chocolateyのコマンドへのパスが通ってますが、上の環境変数は
再起動後に有効になるので、新たにコマンドプロンプトを立ち上げるとまだ使えません。
(直接ディレクトリに行けば勿論使えますが。)</p>

<p>GUIバージョンの<code>ChocolateyGUI</code>と言うのがあって、
真っ先にインストールして使ってみたいわけですが、
これも環境変数が有効になってないと立ち上がりすらしないので、
Chocolatey本体をインストール出来たら一度Windowsを再起動します。</p>

<p>ChocolateyのインストールはPowerShellを直接使ったりする方法も有りますが
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>、
実行ポリシーの問題など、ちょっとややこしいので特別PowerShellで行う必要が無ければ
コマンドプロンプトに上記コマンドを貼り付けてしまうのが簡単です。</p>

<h2 id="インストールされるもの">インストールされるもの</h2>

<p>Chocolatey本体や関連ファイル等は<code>C:\Chocolatey</code>の下に置かれます。
上の<code>ChocolateyInstall</code>の環境変数で指定されているフォルダです。</p>

<p>この値をインストール時に変更すればインストール場所を変えることも可能ですが、
色々な理由<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>:</p>

<ul>
  <li>プログラムじゃないし、<code>Program Files</code>フォルダは管理者権限が無いと扱えないから駄目。</li>
  <li>でもユーザー限定のものじゃなくてシステムワイドな物だからユーザーディレクトリも嫌。</li>
  <li>DOSコマンドだと、余り長いパスを扱えない事があるのでなるべくパスは短く。</li>
</ul>

<p>と言った様な事があるみたいですが、取り敢えず三番目は結構重要なので
デフォルト通り<code>C:</code>直下に置いておくのが無難です。</p>

<p><code>Chorolatey</code>フォルダの中は</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Chocolatey
</span><span class="line">├── bin
</span><span class="line">├── chocolateyinstall
</span><span class="line">├── lib
</span><span class="line">└── lib-bad</span></code></pre></td></tr></table></div></figure>
<p>こんな感じの構造になっていて、<code>chocolateyinstall</code>の中に
本体であるPowerShellのスクリプト等が入っています。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">chocolateyinstall/
</span><span class="line">├── chocolatey.cmd
</span><span class="line">├── chocolatey.config
</span><span class="line">├── chocolatey.ps1
</span><span class="line">...</span></code></pre></td></tr></table></div></figure>

<p><code>chocolatey.ps1</code>が中心となるPowerShellスクリプトで、
ここから更に各ツール等を呼んでいます(chocolateyinstallフォルダの中にある)。
<code>chocolatey.cmd</code>はコマンドプロンプト用のラッパーです。</p>

<p><code>chocolatey.config</code>には使うソース先の設定等が書かれています<sup id="fninref:3"><a href="#fnin:3" rel="footnote">3</a></sup>。</p>

<p>インストールの時にパスを通した<code>bin</code>フォルダには</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class=""><span class="line">bin
</span><span class="line">├── _processed.txt
</span><span class="line">├── choco.bat
</span><span class="line">├── chocolatey
</span><span class="line">├── chocolatey.bat
</span><span class="line">├── cinst
</span><span class="line">├── cinst.bat
</span><span class="line">├── clist
</span><span class="line">├── clist.bat
</span><span class="line">...</span></code></pre></td></tr></table></div></figure>

<p>と言った形でコマンドが入っていて、<code>bat</code>ファイルは<code>chocolatey.cmd</code>へのラッパー
(<code>cinst.bat</code>なら<code>chocolatey.cmd install</code>を呼んでる)、
<code>bat</code>がついてないものは単に付いてる物を呼び出してるだけの短縮コマンドです。</p>

<p>残りの<code>lib</code>にはパッケージインストール時に出来るもので、
各パッケージのインストール用の設定ファイルが
ダウンロードされてきて配置されます。
<code>lib-bad</code>は何らかの問題があった物が入ります。</p>

<h2 id="基本的なコマンド">基本的なコマンド</h2>

<h3 id="ヘルプ">ヘルプ</h3>
<p>ここまで来たら(再起動後)、コマンドプロンプトを開いて
取り敢えず</p>

<pre><code>&gt; choco /?
</code></pre>

<p>とすればヘルプが見れます。</p>

<h3 id="リストサーチ">リスト/サーチ</h3>

<p>インストールするにはChocolateyで決められたパッケージ名が必要ですが、
これは<a href="http://chocolatey.org/packages">Chocolatey Gallery</a>で探すか、
コマンドでは<code>list</code>を使って</p>

<pre><code>&gt; choco list Firefox
adblockpluschrome 0.0.0.2
adblockplusfirefox 0.0.0.1
...
Firefox 25.0.1
...
Reading environment variables from registry. Please wait... Done.
&gt;
</code></pre>

<p>と言った形でFirefoxに関係するパッケージのリストを取得できますが、
Firefoxの場合でも20個位リストされます。
この<code>list</code>コマンドは都度サーバーとやりとりしてるらしく、結構時間がかかります。
最後に引数を与えないと全リストを表示するので物凄く時間がかかるので注意を。。。
(<code>search</code>コマンドもv0.9.8.21から追加されたと有りますが、現状<code>list</code>の単なる別名です。)</p>

<p>一方、インストール済のパッケージをリストするには<code>-localonly</code>か<code>-lo</code>を使って</p>

<pre><code>&gt; choco list -lo
Firefox 25.0.1
thunderbird 24.1.1
...
&gt;
</code></pre>

<p>とすると表示されます。</p>

<h3 id="インストール-1">インストール</h3>

<p>差し当たりパッケージのインストールは</p>

<pre><code>&gt; cinst Firefox
</code></pre>

<p>等とすればFirefoxがインストールされます(<code>cinst</code>=<code>chocolatey install</code>=<code>choco install</code>)。</p>

<p>インストールされる先は基本的には通常インストール通り<code>Program Files</code>以下になります。</p>

<p>既に手動でインストール済だがChocolateyとしてはインストールしてないプログラムを
Chocolateyからインストールすると、</p>

<blockquote><p>What if I install X and I already have X installed?</p><p>With most packages when you already have something installed, the chocolatey process will just perform the install again silently. Most times this means that it does nothing and in the end you have what you already had.</p><footer><strong>chocolatey</strong> <cite><a href="https://github.com/chocolatey/chocolatey/wiki/ChocolateyFAQs">ChocolateyFAQs</a></cite></footer></blockquote>

<p>とあるように、基本的にはパッケージのインストール用ファイルを取ってきた後に</p>

<pre><code>'7zip 9.22.01.20130618' already installed.
If you want to reinstall the current version of an existing package, please use the -force command.
</code></pre>

<p>こんな感じでもうインストールしてある、と言って止まります<sup id="fninref:4"><a href="#fnin:4" rel="footnote">4</a></sup>。</p>

<p>複数のパッケージをインストールしたい場合には、以前はループを回したりしなくては
行けなかったみたいですが、v0.9.8.21から</p>

<pre><code>&gt; cinst Firefox thunderbird
</code></pre>

<p>と加えて書くだけでOK。</p>

<p>また、</p>

<figure class="code"><figcaption><span>packages.config</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span></span><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class="line"><span class="nt">&lt;packages&gt;</span>
</span><span class="line">  <span class="nt">&lt;package</span> <span class="na">id=</span><span class="s">&quot;Firefox&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">  <span class="nt">&lt;package</span> <span class="na">id=</span><span class="s">&quot;thunderbird&quot;</span><span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;/packages&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>と言ったXML形式のファイルを<code>packages.config</code>と言う様に<code>.config</code>と言う拡張子にして
保存し、</p>

<pre><code>&gt; cinst packages.config
</code></pre>

<p>とすると、中身に書いてあるパッケージを一度にインストールしてくれます。</p>

<p><code>list</code>とこのconfigファイルを適当に扱うスクリプトでも書けば
<a href="https://rcmdnk.com/blog/2013/09/13/computer-mac-install-homebrew/">brewall</a>
的な一元管理が出来る様になると思うので、そのうち。。。
(下に書くようにCygwinから簡単に使えたのでShellスクリプトとかで書けば簡単に
出来そうですが、せっかくだから最終的にはPowerShellで書けたら。全く使ったことないですが。)</p>

<h3 id="アップデート">アップデート</h3>

<p>これも短縮コマンドが用意されてて(<code>cup</code>=<code>chocolatey update</code>)、コマンドに
パッケージ名を与えると各パッケージのアップデード、全てアップデートしたい場合には</p>

<pre><code>&gt; cup all
</code></pre>

<p>と<code>all</code>を与えます。何も引数を与えないとChocolatey自身をアップデートします。</p>

<h3 id="アンインストール">アンインストール</h3>

<p>これも短縮コマンド<code>cuninst</code>=<code>chocolatey uninstall</code>を使って</p>

<pre><code>&gt; cuninst package
</code></pre>

<p>とするとアンインストール出来ます。</p>

<h2 id="chocolateygui">ChocolateyGUI</h2>

<p>ここで、GUIの管理プログラムがあるのでインストールしてみます。</p>

<pre><code>&gt; cinst ChocolateyGUI
</code></pre>

<p>通常のプログラム同様、スタートアップに登録されてるはずですが、
上に書いたとおり、一度再起動して環境変数を有効にしておかないと動かない
(うんともすんとも言わない)ので注意して下さい。</p>

<p>これを立ち上げるとこんな感じで、</p>

<p><img src="https://rcmdnk.com/images/post/20131122_chocoGUI1.jpg" title="" alt="" />
<img src="https://rcmdnk.com/images/post/20131122_chocoGUI2.jpg" title="" alt="" /></p>

<p>現在インストールされているもの、ソース先にパッケージ登録されているもの
一覧を見ることが出来、それぞれの場所で、インストールやアンインストールを
ボタンひとつで出来ます。
最初、小数のパッケージを試してみる分には分かりやすいと思います。</p>

<h2 id="cygwinから使う">Cygwinから使う</h2>

<div class="postscript">
  <p><strong>追記: 2014/07/30</strong></p>

  <p>この項目もアップデートにより使えなくなってるので
aliasを新しくしました。</p>

  <blockquote>
    <p><a href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/">Chocolateyのアップデート</a></p>
  </blockquote>

  <p><strong>追記ここまで</strong></p>
</div>

<p>さて、こんな感じでコマンドラインから管理出来るわけですが、
流石にWindowsのコマンドプロンプトを使うのは怠いし、
PowerShellも良くわからない。。。</p>

<p>ということで、Cygwinからbash(別に何でもいいわけですが)で使います。</p>

<p>PATHがWindowsの環境変数で通ってるのでchoco等のコマンドが
Cygwinの中でも直接見えます(Cygwinの中でも最初に設定されるPATHとして有効)。</p>

<p>ただ、これらはコマンドプロンプト用のコマンドなので、</p>

<pre><code>$ cmd /c choco...
</code></pre>

<p>としてあげないと行けません<sup id="fninref:5"><a href="#fnin:5" rel="footnote">5</a></sup>。</p>

<p>また、最初にこのコマンドを打ってみた時、</p>

<pre><code>$ cmd /c choco list -lo
Item has already been added. Key in dictionary: 'TEMP'  Key being added: 'temp'
Reading environment variables from registry. Please wait... Done.
$
</code></pre>

<p>こんな感じのメッセージが出て何も表示されませんでした。</p>

<p>取り敢えず、temp等を調べてみると</p>

<pre><code>$ echo $TEMP
/tmp
$ echo $temp
C:\Users\user\AppData\Local\Temp
</code></pre>

<p>と、<code>$tmp</code>にWindowsのパスが直接そのまま入っていて
これは
Windowsの環境変数で、ユーザーの環境変数として</p>

<pre><code>`TEMP`:  %USERPROFILE%\AppData\Local\Temp
`TMP`:   %USERPROFILE%\AppData\Local\Temp
</code></pre>

<p>として指定されている値です。</p>

<p>Cygwinの中では<code>TEMP</code>という値を<code>/tmp</code>ディレクトリにするのは決まっているからか、
これらのユーザー環境変数は小文字になって設定されているちょっと特殊な感じになっています
<sup id="fninref:6"><a href="#fnin:6" rel="footnote">6</a></sup>。</p>

<p>環境変数のところにあるように、Cygwinの中で<code>tmp</code>と言う値も同様に
この値になっています。</p>

<p>これらの小文字の値はCygwinのなかでは正しく無いパス表記(バックスラッシュを使ってる)
ですし、使わないので、</p>

<pre><code>unset tmp temp
</code></pre>

<p>としてもう一度試してみると</p>

<pre><code>$ cmd /c choco list -lo
7zip 9.22.01.20130618
...
</code></pre>

<p>と上手く行きました
<sup id="fninref:7"><a href="#fnin:7" rel="footnote">7</a></sup>。</p>

<p>以上で使える様になったので、簡単に使うため、<code>.bashrc</code>に</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span></span><span class="k">if</span> <span class="o">[[</span> <span class="s2">&quot;</span><span class="nv">$OSTYPE</span><span class="s2">&quot;</span> <span class="o">=</span>~ <span class="s2">&quot;cygwin&quot;</span> <span class="o">]]</span><span class="p">;</span><span class="k">then</span>
</span><span class="line">  <span class="c1"># Chocolatey</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">choco</span><span class="o">=</span><span class="s1">&#39;cmd /c choco&#39;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cinst</span><span class="o">=</span><span class="s1">&#39;cmd /c cinst&#39;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cup</span><span class="o">=</span><span class="s1">&#39;cmd /c cup&#39;</span>
</span><span class="line">  <span class="nb">alias</span> <span class="nv">cuninst</span><span class="o">=</span><span class="s1">&#39;cmd /c cuninst&#39;</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># unset tmp/temp (=C:\Users\user\AppData\Local\Temp)</span>
</span><span class="line">  <span class="c1"># for Chocolatey (otherwise it complains...)</span>
</span><span class="line">  <span class="nb">unset</span> tmp temp
</span><span class="line"><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>

<p>とか書いておくと幸せになれます。</p>

<h2 id="既にインストールされてるプログラムを登録する">既にインストールされてるプログラムを登録する</h2>

<p>Cygwinから使える様になったので、適当なコマンドでざっと
現在インストールされてるファイルをChocolatey管理にしてみました。</p>

<pre><code>$ ls /cygdrive/c/Program\ Files &gt; programfiles.txt
$ while read a;do choco list "$a";done &lt; programfiles.txt 2&gt;&amp;1|tee log.txt
</code></pre>

<p>と、取り敢えず<code>C:\Program\ Files</code>にあるフォルダ名(130個程)を全部取ってきて
listしてみます。</p>

<p>すると、上にも書いたように各プログラム毎に幾つものパッケージが該当するので、
そのままだと多すぎ(~1万程)。
重複も多くあるので取り敢えず</p>

<pre><code>$ sort log.txt |uniq &gt; packages.txt
</code></pre>

<p>これで千行くらいになりました。</p>

<p>こうすると元のプログラムとパッケージの対応が分からなくなる部分もありますが、
取り敢えずプログラムとパッケージが同じや似たようなのは近くに残るし、
後は適当に目で必要そうなのを探ってみました。
見てる中で知らなかった面白そうなプログラムも見つけられることもあるかもしれないので、
ざっと見て仕分けするのは悪く無いと思います。</p>

<p>結局50程残りました。</p>

<p>取り敢えず、必要そうなパッケージを残して、適当に上のxml形式に変換します。
(Vimでrecordingを使ってやったのでコマンドはありません、すいません。)</p>

<p>出来たら<code>packages.config</code>と名前を変えてやって</p>

<pre><code>$ cinst packages.config
</code></pre>

<p>とすると、片っ端からインストールを行っていきます。</p>

<p>無理にxmlにしないでも、ただのリストにして</p>

<pre><code>$ while read a;do cinst $a;done &lt; packages.config
</code></pre>

<p>でも全く同じことです(50個くらいを引数として全部一気に渡しても良いのかもしれませんが。。。)</p>

<p>既にインストールされてるものに関しては大概パッケージ情報だけを取ってきて
スルーしてくれますが、
上に書いたように中にはインストーラーが立ち上がって対話的に処理する必要が
あるものもあるかもしれません。</p>

<p>一方で、パッケージが見つからなかったものもメモしておきます</p>

<pre><code>$ grep -B1 "No packages found" log.txt |grep -v "No packages"|grep -v "\-\-" &gt; notfound.txt
</code></pre>

<p>こんな感じで一覧を作成。
次は自分用にパッケージを作成してこれらのプログラムも
簡単に入れられるようになれば、と。</p>

<h2 id="まとめ">まとめ</h2>

<p>昨年出来たばかりで今年前半にはまだ登録パッケージが少ないな、という印象でしたが、
アクティブに動いてるみたいで、主要なプログラムは大体入っている感じです。
日本発のフリーソフトみたいのは流石に入ってないのが多いですが、
問題ないようなもの(他のソフトをバンドルしてインストールするようなのは
公式には禁止、とのこと)
まず自分用に作って公式に挙げていったりもしてみたいですね。</p>

<p>取り敢えず使える事は確認して満足したので、
適当な取りまとめスクリプトでも作ったら次はMacでBoxenを。。。</p>

]]></content>
  </entry>
  
</feed>
