<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: KeyRemap4MacBook | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/keyremap4macbook/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2025-11-01T00:19:32+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="https://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[KeyRemap4MacBookの設定(+MadRuby)]]></title>
    <link href="https://rcmdnk.com/blog/2014/05/14/computer-mac-keyremap4macbook/"/>
    <updated>2014-05-14T14:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2014/05/14/computer-mac-keyremap4macbook</id>
    <content type="html"><![CDATA[<p>ちょっと前に買ったMacの設定備忘録その5。</p>

<p>KeyRemap4Macbookの設定。</p>

<p><a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-btt/">BetterTouchToolの設定</a>
と合わせて色々弄る前にやってしまいたい設定。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#keyremap4macbook" id="markdown-toc-keyremap4macbook">KeyRemap4MacBook</a></li>
  <li><a href="#madruby" id="markdown-toc-madruby">MadRuby</a></li>
  <li><a href="#今回やった他の設定集" id="markdown-toc-今回やった他の設定集">今回やった他の設定集</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="keyremap4macbook">KeyRemap4MacBook</h2>

<p>KeyRemap4MacBook
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>
の設定について。</p>

<p><a href="https://rcmdnk.com/blog/2014/05/14/computer-mac-dropbox/">ropboxからprivate.xmlをインストールしたら</a>
立ち上げて</p>

<ul>
  <li>ChangeKey
    <ul>
      <li>MySettings* 以下全てチェック。</li>
      <li><strong>Pass Through Mode</strong>で<strong>Simultaneous Key Presses [Escape+Tab] to toggle “pass Through Mode”</strong>にチェック。</li>
      <li><strong>VimEmulation</strong>: ChangeKey4, 6, 7とEnable Vim Emulation 以下全てにチェック。</li>
    </ul>
  </li>
  <li>Key Repeat
    <ul>
      <li>Basic Configuration
        <ul>
          <li>Key Repeat
            <ul>
              <li>Delay Until Repeat: 100 ms</li>
              <li>Key Repeat        :  30 ms</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Status Message
    <ul>
      <li><code>Show sticky modifiers state</code> にチェック。</li>
    </ul>
  </li>
  <li>MenuBar
    <ul>
      <li><code>Show icon in menu bar</code>のチェックを外す。</li>
    </ul>
  </li>
  <li>Misc &amp; Uninstall
    <ul>
      <li><strong>Check for updates on startup</strong>: <code>Beta &amp; stable releases</code>へ変更</li>
      <li><strong>Check for updates (Beta &amp; stable releases)</strong>を押してBeta版を入れる。</li>
    </ul>
  </li>
</ul>

<p>さらに、<strong>VimEmulation</strong>用にMadRubyを設定します。</p>

<h2 id="madruby">MadRuby</h2>

<p>MadRubyはウェブからインストールするアプリですが、
Caskには入ってないので、自分で作っています。</p>

<figure class="code"><figcaption><span>madruby.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span></span><span class="k">class</span><span class="w"> </span><span class="nc">Madruby</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="no">Cask</span>
</span><span class="line"><span class="w">  </span><span class="n">url</span><span class="w"> </span><span class="s1">&#39;http://www.wingsforpigs.com/downloads/MadRuby_1.0.3.dmg&#39;</span>
</span><span class="line"><span class="w">  </span><span class="n">homepage</span><span class="w"> </span><span class="s1">&#39;http://www.wingsforpigs.com/MadRuby/MadRuby.html&#39;</span>
</span><span class="line"><span class="w">  </span><span class="n">version</span><span class="w"> </span><span class="s1">&#39;1.0.3&#39;</span>
</span><span class="line"><span class="w">  </span><span class="n">sha256</span><span class="w"> </span><span class="s1">&#39;a0d45b892b28e9fd4e5ae17578e3afc6e385307635c422d71292d47b177d7480&#39;</span>
</span><span class="line"><span class="w">  </span><span class="n">link</span><span class="w"> </span><span class="s1">&#39;MadRuby.app&#39;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>これは
<a href="https://github.com/rcmdnk/homebrew-rcmdnkcask">rcmdnk/homebrew-rcmdnkcask</a>
に入ってるので</p>

<pre><code>$ brew tap rcmdnk/homebrew-rcmdnkcask
$ brew cask install madruby
</code></pre>

<p>とすれば入れられます。</p>

<div class="postscript">
  <p><strong>追記: 2014/08/13 </strong></p>

  <p>madrubyのCaskファイルを本家の方に移したので今はrcmdnkcaskをTapしなくても
入れられます。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>立ち上げるとセキュリティーチェックが立ち上がりますが、
ここで設定をする様にボタンを押すと、
何故か<strong>システム環境設定</strong><i class="fa fa-arrow-right"></i><strong>アクセシビリティ</strong>
の方に飛ばされます。</p>

<p><a href="https://rcmdnk.com/blog/2014/05/07/computer-mac/">Macで最初に行う設定備忘録</a>
に書いたように、実際には
<strong>システム環境設定</strong><i class="fa fa-arrow-right"></i><strong>セキュリティーとプライバシー</strong>
で設定を行う必要があるので、こちらに移動して、
そこにMadRubyがあるはずなのでチェックを入れます。</p>

<p><a href="https://rcmdnk.com/blog/2013/07/08/computer-mac-keyremap4macbook-vim/">Vim_emu for KeyRemap4MacBookのアップデート</a>
に従いショートカットを入れ、設定(<code>Preferences</code>)の
<code>Updates &amp; Startup</code>の方からのログイン時にも起動するよう設定しておきます。</p>

<p>ただ、なぜかここにチェックを入れてもうまくログイン時に立ち上がらなかったので、
<strong>ユーザとグループ</strong><i class="fa fa-arrow-right"></i><strong>ログイン項目</strong>
を見て、やはり登録されてないので、
手で<code>ログイン項目</code>に登録しておきます(古過ぎてログイン項目に登録する仕様が違う？)。</p>

<p>次に、メニューバーアイコンの色を変えます。</p>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/12/13/computer-mac/">Macでアプリのアイコンを変更する</a></p>
</blockquote>

<p>良いのが落ちてないので、自分で</p>

<p><code>~/Applications/MadRuby.app/Contents/Resources</code> (caskで入れたのでホーム下)</p>

<p>にある<strong>statusImage.png</strong>と<strong>statusImageBusy.png</strong>
を上のページを参考にしてグレースケールに変更しました。</p>

<p>これで、アイコンを変えた後に、
MadRubyを再び立ち上げるとまたアクセシビリティの警告が出てしまいました。
ただ、アクセシビリティの方ではMadRubyにチェックがかかった状態。</p>

<p>同しようもない状態でしたが、
一度このチェックを外して、MadRubyを立ち上げて警告を出させて、
再びアクセシビリティに行ってチェックをつけたらOKにになりました。
(単にチェックを外してつけるだけでもOKかもしれません。)</p>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/05/30/computer-bash-screen-linux/">メタキー/ESCについて: iTermでそれらのキーを送る設定も</a></p>
</blockquote>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/06/05/computer-mac-keyremap4macbook/">Macでのキーバインド設定</a></p>
</blockquote>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2/">MacでVimっぽくカーソルやマウス、ウィンドウを動かす</a></p>
</blockquote>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/06/10/computer-mac-keyremap4macbook-vim/">Vim以外でVimする: Mac編</a></p>
</blockquote>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/06/20/computer-mac-keyremap4macbook-vim/">Vimを使う上でのIME(日本語入力)の取り扱い</a></p>
</blockquote>

<blockquote>
  <p><a href="https://rcmdnk.com/blog/2013/07/08/computer-mac-keyremap4macbook-vim/">Vim_emu for KeyRemap4MacBookのアップデート</a></p>
</blockquote>

<h2 id="今回やった他の設定集">今回やった他の設定集</h2>

<blockquote>
  <p><a href="https://rcmdnk.com/mac/mac_settings">Macの設定</a></p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim_emu for KeyRemap4MacBookのアップデート]]></title>
    <link href="https://rcmdnk.com/blog/2013/07/08/computer-mac-keyremap4macbook-vim/"/>
    <updated>2013-07-08T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/07/08/computer-mac-keyremap4macbook-vim</id>
    <content type="html"><![CDATA[<p><a href="https://rcmdnk.com/blog/2013/06/10/computer-mac-keyremap4macbook-vim/">Vim以外でVimする: Mac編</a>
で作った<a href="https://github.com/rcmdnk/vim_emu">vim_emu</a>をアップデートしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#change-mode-keys" id="markdown-toc-change-mode-keys">Change Mode Keys</a></li>
  <li><a href="#enable-recording-macro" id="markdown-toc-enable-recording-macro">Enable Recording Macro</a></li>
  <li><a href="#その他の変更点" id="markdown-toc-その他の変更点">その他の変更点</a></li>
  <li><a href="#インストール" id="markdown-toc-インストール">インストール</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="change-mode-keys">Change Mode Keys</h2>
<p><i class="key">⎋</i>/<i class="key ctrl">symobl</i>-<i class="key">[</i>で
Normal Modeに入るキーマップに加え、
これらでNormal-Insert ModeをToggleするキー、
<i class="key">j</i>-<i class="key">k</i>の同時押しでToggleするキー等を追加しました。</p>

<p><i class="key">⎋</i>/<i class="key ctrl">symobl</i>-<i class="key">[</i>については
長押しで<i class="key ESC">symobl</i>そのものを送る様にもしました。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Key/Commands</th>
      <th style="text-align: left">Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ChangeKey1</td>
      <td style="text-align: left">Escape to enter Normal Mode, holding to emulate raw ESC.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey2</td>
      <td style="text-align: left">+ Escape to back in Insert Mode</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey3</td>
      <td style="text-align: left">Escape to back in Normal Mode in other than Inser Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey4</td>
      <td style="text-align: left">Ctrl-[ to enter Normal Mode, holding to emulate raw ESC.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey5</td>
      <td style="text-align: left">+ Ctrl-[ to back in Insert Mode</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey6</td>
      <td style="text-align: left">Ctrl-[ to back in Normal Mode in other than Inser Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey7</td>
      <td style="text-align: left">Simultaneous jk toggles Normal-Insert Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey8</td>
      <td style="text-align: left">Simultaneous qw toggles Normal-Insert Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey9</td>
      <td style="text-align: left">Simultaneous sd toggles Normal-Insert Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey10</td>
      <td style="text-align: left">Ctlr-l toggles Normal-Insert Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey11</td>
      <td style="text-align: left">Tap Left Cmd toggles Normal-Insert Mode.</td>
    </tr>
    <tr>
      <td style="text-align: left">ChangeKey12</td>
      <td style="text-align: left">Tap Right Cmd toggles Normal-Insert Mode.</td>
    </tr>
  </tbody>
</table>

<p>ChangeKey 1, 3 , 4, 6, 10-12についてはVisual Mode等の時にもNormal Modeへの
戻るキーとして使いますが7-9については同時押し操作の制限の関係で
Visual Mode等の時には効きません。</p>

<p>従って、他のキーと組み合わせが必要で、他の操作への影響を最低限にしたい場合は
3や6を使います。</p>

<h2 id="enable-recording-macro">Enable Recording Macro</h2>
<p>Vim等の色々機能がついたエディターで無くてはならない機能の1つとして
キー操作をマクロとして保存して再び実行する、と言う機能があります。</p>

<p>KeyRemap4MacBook単体では再現するのが難しいのですが、
<del>MadRuby http://www.wingsforpigs.com/MadRuby/MadRuby.html</del>
という良さげなキー操作記憶再生アプリを見つけたので
これを使ってマクロ機能を実装してみました
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。
フリーのアプリです。</p>

<p>このアプリは、ショートカットキーを使ってキー操作の記憶を開始して
再びショートカットキーで停止します。
実行もショートカットキーから。
さらに複数回の実行を指定することも出来ます。</p>

<p>アプリを導入したら、
これらのショートカットキーを以下の様に設定します。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: right">Function</th>
      <th style="text-align: left">Shortcut</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">Start Recording</td>
      <td style="text-align: left"><i class="key">⌃</i>-<i class="key">⇧</i>-<i class="key">⌘</i>-<i class="key">6</i></td>
    </tr>
    <tr>
      <td style="text-align: right">Stop Recording</td>
      <td style="text-align: left"><i class="key">⌃</i>-<i class="key">⇧</i>-<i class="key">⌘</i>-<i class="key">7</i></td>
    </tr>
    <tr>
      <td style="text-align: right">Play Macro</td>
      <td style="text-align: left"><i class="key">⌃</i>-<i class="key">⇧</i>-<i class="key">⌘</i>-<i class="key">8</i></td>
    </tr>
    <tr>
      <td style="text-align: right">Multiple Play Macro</td>
      <td style="text-align: left"><i class="key">⌃</i>-<i class="key">⇧</i>-<i class="key">⌘</i>-<i class="key">9</i></td>
    </tr>
  </tbody>
</table>

<p><img src="https://rcmdnk.com/images/post/20130708_madruby.jpg" /></p>

<p>これらはvim_emuの中で参照して以下の様にキーが設定されています。
全てNormal Modeの時に有効です。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Key/Commands</th>
      <th style="text-align: left">Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">q</td>
      <td style="text-align: left">Start recording a macro.</td>
    </tr>
    <tr>
      <td style="text-align: center">q(while recording macro)</td>
      <td style="text-align: left">Stop recording a macro.</td>
    </tr>
    <tr>
      <td style="text-align: center">@</td>
      <td style="text-align: left">Execute the macro once.</td>
    </tr>
    <tr>
      <td style="text-align: center">n@ (n=2-9)</td>
      <td style="text-align: left">Execute macro n-times.</td>
    </tr>
  </tbody>
</table>

<p>Vimと違って<i class="key">q</i><i class="key">a</i>の<i class="key">a</i>の様にマクロの収納先は指定しないで<i class="key">q</i>だけで記憶を開始します。
従って記憶できる操作は1つだけです
<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>。
記憶中にNormal Modeに戻って<i class="key">q</i>で終了するわけですが、
この間に他のアプリに移ってしまっても、永遠とマクロを記憶し続けるので
気をつけて下さい
<sup id="fninref:3"><a href="#fnin:3" rel="footnote">3</a></sup>。</p>

<p>再生に関しても収納先の指定が無いので<i class="key">@</i>だけで再生します。
注意として、<i class="key">@</i>を繰り返して押す場合、<i class="key">⇧</i>も離して繰り返し
押さないと続けてマクロを上手く入力出来ません。</p>

<p>複数回実行したい場合は<i class="key">2</i>~<i class="key">9</i>までの数字を押した後に
<i class="key">@</i>を押せば数字分だけ実行します。</p>

<p>MadRubyのショートカットは他のショートカットに被らないような設定にしてありますが、
もし他のキー設定と被る場合や、普段もMadRubyを使いたくてもっと
簡単なキー設定にしたい場合は
<code>vim_emu/vim_emu_core.xml</code>の<code>Enable Recording Macro</code>
にあるキー設定も変更して下さい。</p>

<p>下のデモでは
<code>aaa</code>という文字列を検索して移動して<code>AAA</code>と置き換える作業を記憶して
繰り返し実行しています。</p>

<pre><code>&lt;ESC&gt;/aaa&lt;ESC&gt;hqni&lt;BS&gt;AAA&lt;ESC&gt;q@@@@@@@@@uuuuuuuuuuh5@
</code></pre>

<p>とキーボードからは入力しています。
検索時に単語が選択されるのを一旦解除するのに<i class="key">h</i>を使ったり、
が逆に検索後、<i class="key">⌫</i>で一気に消したりするところとかも
実際のVimと違いますが、
一応これくらいの変換の作業は繰り返し出来るようになります。
(流石にsed的な変換は無理なのでこの辺の作業はマクロで繰り返しで。)</p>

<p>MadRubyは、最初の<i class="key">q</i>をした所で現れ、</p>

<ul>
  <li><i class="key">n</i><i class="fa fa-arrow-right"></i><i class="key">⌘</i>-<i class="key">g</i></li>
  <li><i class="key">i</i>は記憶されず(右下のモード表示から<code>--VIM--</code>が消える)</li>
  <li><i class="key">⌫</i></li>
  <li>AAA</li>
  <li><i class="key">⎋</i>は記憶されず(右下のモード表示へ<code>--VIM--</code>が現れる)</li>
</ul>

<p>と記憶され<i class="key">q</i>で終了しています。</p>

<div class="embed-video-container"></div>

<p>実用性はともかく、ちょっと、おぉっ、ってなります。</p>

<h2 id="その他の変更点">その他の変更点</h2>

<ul>
  <li><code>d3w</code>など、<code>y</code>、<code>d</code>、<code>c</code>の時にも2-9で移動を数字分だけ出来る様に改善。</li>
  <li>Visual Modeでライン選択の時、以前は最初に上に向かうとカレント行が除かれたが
最初に上に向かう時だけカレント行も選択する様に変更。</li>
  <li>RturnはそのままRturnを返す様に変更。</li>
  <li>H/Lについては意味ない動きしかできないので削除。(ubiquitous_vimを真似てみたものの
キーの無駄遣いにしかならないので…)</li>
  <li>GitHubのレポジトリーバージョンをKeyRemap4MacBookの中に入っているものと
かち合わないように変更。</li>
  <li>ドイツ語キーボードサポート。</li>
</ul>

<h2 id="インストール">インストール</h2>
<p>KeyRemap4MacBookが入った状態で<a href="https://github.com/rcmdnk/vim_emu">vim_emu</a>
をcloneしてきて中にある<code>install.sh</code>を実行すれば
自分設定のすぐ下にもう1つの<code>VIM Emulation</code>が現れます。</p>

<pre><code>$ git clone https://github.com/rcmdnk/vim_emu
$ cd vim_emu
$ ./install.sh
</code></pre>

<p>キーがバッティングするので元から入っている<code>VIM Emulation</code>項目はオフにして下さい。</p>

<p>アンインストールは<code>$HOME/Library/Application Support/KeyRemap4MacBook/</code>
から<code>vim_emu*</code>を消し、<code>private.xml</code>の下の方に追加された
<code>&lt;include path="vim_emu_test.xml"&gt;&lt;/include&gt;</code>を削除してください。</p>

<p>そのうちKeyRemap4MacBook本体の方にPull Requestしていつの間にか入れてもらおうと思ってます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vimを使う上でのIME(日本語入力)の取り扱い]]></title>
    <link href="https://rcmdnk.com/blog/2013/06/20/computer-mac-keyremap4macbook-vim/"/>
    <updated>2013-06-20T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/06/20/computer-mac-keyremap4macbook-vim</id>
    <content type="html"><![CDATA[<p>Vimで日本語入力をしているとノーマルモードに戻ったと時に
毎回IMEをoffにしてやらないとコマンドが打てません。
これはかなり面倒なのでノーマルモード移行時に
自動的にIMEがoffになるようにしたい所で、
その辺りのまとめというか、自分設定とついでに見つけた情報の寄せ集め。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#macでkarabinerkeyremap4macbookを使ってimeをノーマルモードで必ずオフにする" id="markdown-toc-macでkarabinerkeyremap4macbookを使ってimeをノーマルモードで必ずオフにする">MacでKarabiner(KeyRemap4MacBook)を使ってIMEをノーマルモードで必ずオフにする</a></li>
  <li><a href="#macos-sierraでimeをノーマルモードで必ずオフにする" id="markdown-toc-macos-sierraでimeをノーマルモードで必ずオフにする">macOS SierraでIMEをノーマルモードで必ずオフにする</a></li>
  <li><a href="#windowsでyamyを使ってimeをノーマルモードで必ずオフにする" id="markdown-toc-windowsでyamyを使ってimeをノーマルモードで必ずオフにする">Windowsでyamyを使ってIMEをノーマルモードで必ずオフにする</a></li>
  <li><a href="#gvimで出来る設定" id="markdown-toc-gvimで出来る設定">GVimで出来る設定</a></li>
  <li><a href="#日本語固定モード" id="markdown-toc-日本語固定モード">日本語固定モード</a></li>
  <li><a href="#tera-termでの制御シーケンスの使用" id="markdown-toc-tera-termでの制御シーケンスの使用">Tera Termでの制御シーケンスの使用</a></li>
  <li><a href="#windowsでautohotkeyを使う方法" id="markdown-toc-windowsでautohotkeyを使う方法">WindowsでAutoHotkeyを使う方法</a></li>
  <li><a href="#imeの状態でカーソルの色を変更する" id="markdown-toc-imeの状態でカーソルの色を変更する">IMEの状態でカーソルの色を変更する</a></li>
  <li><a href="#imeのonoffをsyntaxで制御する" id="markdown-toc-imeのonoffをsyntaxで制御する">IMEのON/OFFをsyntaxで制御する</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="macでkarabinerkeyremap4macbookを使ってimeをノーマルモードで必ずオフにする">MacでKarabiner(KeyRemap4MacBook)を使ってIMEをノーマルモードで必ずオフにする</h2>
<p>Macでは<a href="https://rcmdnk.com/blog/tags/karabiner/">Karabiner</a>(<a href="https://rcmdnk.com/blog/tags/keyremap4macbook/">旧)KeyRemap4MacBook</a>)を使ったキーリマップで
ノーマルモードに戻るときに<i class="key">ESC</i>/<i class="key">ctrl</i>-<i class="key">[</i>を押した際
IMEをオフにするようにしています。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span></span><span class="nt">&lt;item&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;name&gt;</span>ESC<span class="w"> </span>to<span class="w"> </span>IME<span class="w"> </span>off<span class="w"> </span>(to<span class="w"> </span>English)<span class="w"> </span>+<span class="w"> </span>Esc<span class="w"> </span>+<span class="w"> </span>Esc<span class="nt">&lt;/name&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;appendix&gt;</span>Enable<span class="w"> </span>for<span class="w"> </span>all<span class="w"> </span>but<span class="w"> </span>HHK<span class="nt">&lt;/appendix&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;identifier&gt;</span>private.vim.ime_off_ESC<span class="nt">&lt;/identifier&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;only&gt;</span>TERMINAL,<span class="w"> </span>VI<span class="nt">&lt;/only&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;inputsource_only&gt;</span>JAPANESE<span class="nt">&lt;/inputsource_only&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;autogen&gt;</span>
</span><span class="line"><span class="w">    </span>__KeyToKey__<span class="w"> </span>KeyCode::ESCAPE,<span class="w"> </span>ModifierFlag::NONE,
</span><span class="line"><span class="w">    </span>KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH,
</span><span class="line"><span class="w">    </span>KeyCode::VK_CHANGE_INPUTSOURCE_JAPANESE,
</span><span class="line"><span class="w">    </span>KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH,
</span><span class="line"><span class="w">    </span>KeyCode::ESCAPE,<span class="w"> </span>KeyCode::ESCAPE
</span><span class="line"><span class="w">  </span><span class="nt">&lt;/autogen&gt;</span>
</span><span class="line"><span class="nt">&lt;/item&gt;</span>
</span><span class="line"><span class="nt">&lt;item&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;name&gt;</span>Control<span class="w"> </span>+<span class="w"> </span>BRACKET_LEFT<span class="w"> </span>to<span class="w"> </span>IME<span class="w"> </span>off<span class="w"> </span>(to<span class="w"> </span>English)<span class="w"> </span>+<span class="w"> </span>Esc<span class="w"> </span>+<span class="w"> </span>Esc<span class="nt">&lt;/name&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;identifier&gt;</span>private.vim.ime_new<span class="nt">&lt;/identifier&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;only&gt;</span>TERMINAL,<span class="w"> </span>VI<span class="nt">&lt;/only&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;inputsource_only&gt;</span>JAPANESE<span class="nt">&lt;/inputsource_only&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;autogen&gt;</span>
</span><span class="line"><span class="w">    </span>__KeyToKey__<span class="w"> </span>KeyCode::BRACKET_LEFT,
</span><span class="line"><span class="w">    </span>MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL|ModifierFlag::NONE,
</span><span class="line"><span class="w">    </span>KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH,
</span><span class="line"><span class="w">    </span>KeyCode::VK_CHANGE_INPUTSOURCE_JAPANESE,
</span><span class="line"><span class="w">    </span>KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH,
</span><span class="line"><span class="w">    </span>KeyCode::ESCAPE,<span class="w"> </span>KeyCode::ESCAPE
</span><span class="line"><span class="w">  </span><span class="nt">&lt;/autogen&gt;</span>
</span><span class="line"><span class="nt">&lt;/item&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>ターミナル(含iTerm)及びVim(含MacVim)上で有効になります。</p>

<p>最後に<i class="key">ESC</i>を2回使っているのは文字を変換中の場合でも
一気に抜けるためです。
これだと本来のIME変換中の<i class="key">ESC</i>の機能(変換中の文字を消すだけ)
が失われますが、1回でも消してIMEをオフにする、状態になって
中途半端なので取り敢えず2回に。</p>

<p>KeyRemap4MacBookでは<code>変換中</code>の状態を取る要素が(調べた限り)無いので、
どちらか好みの設定にする、ということで。</p>

<p>また、こういった設定を書いてある所で余り見かけませんが、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span></span><span class="nt">&lt;inputsource_only&gt;</span>JAPANESE<span class="nt">&lt;/inputsource_only&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>を使うとIMEがON(日本語入力)の時だけ有効になります。</p>

<p>これはGNU screenと併用している時に絶対必要で、
これを外してしまうとGNU screenでコピーモードに入ろうと
<i class="key">ctrl</i>-<i class="key">[</i>を押してもすぐ<i class="key">ESC</i>が押され終了することになり
コピーモードが使えなくなります。</p>

<p><i class="key">ESC</i>1回設定なら特に問題が無いのですが、2回設定の場合は必須。</p>

<p>日本語に戻す際に
<code>英語</code><i class="fa fa-arrow-right"></i><code>日本語</code><i class="fa fa-arrow-right"></i><code>英語</code>
と言った周りくどいことをしてますが、
これはGoogle日本語入力等を使っていて、入力中に補完表示がある状態で
GNU screenのコピーモードに入ろうとプレフィクス+<i class="key">ctrl</i>-<i class="key">[</i>
を押してしまうと補完表示が残る様になってしまったのでその処置です。</p>

<p>IMEをオフにするには
<code>KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</code>の代わりに
<code>KeyCode::JIS_EISUU</code>(USキーボード使用時にも使えます)でもOKです。
(VK_CHANGE_INPUTSOURCE_*と言うバーチャルキーを使ってみたかっただけ。)</p>

<div class="postscript">
  <p><strong>追記: 2013/10/23 </strong></p>

  <p>OS X Mavericksにした所上の<code>VK_CHANGE_INPUTSOURCE_ENGLISH</code>が効かなくなりました。
取り敢えずの所<code>JIS_EISUU</code>で代用。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<div class="postscript">
  <p><strong>追記: 2013/10/24 </strong></p>

  <p>作者の人に聞いたら動いてる、とのことだったので再び試してみたら動きました。。。
何やら不安定だったのか、単に自分の早とちりだったのか。。。
いずれにしろ、Mavericksでも上のままでも大丈夫です。
(もしアップデート直後に駄目でもOSが安定したら？大丈夫になるはず。。。)</p>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="macos-sierraでimeをノーマルモードで必ずオフにする">macOS SierraでIMEをノーマルモードで必ずオフにする</h2>

<div class="postscript">
  <p><strong>追記: 2017/03/12 </strong></p>

  <p>macOS SierraではKarabiner (旧KeyRemap4MacBook)は現状使えません。</p>

  <p>ということで色々試したりしていましたが、
最終的にGoogle日本語入力+iTerm2だと
Google日本語入力にキー設定を1つ加えるだけでこれが実現できました。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/03/12/computer-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20170312_imeoff_120_90.jpg" width="120" height="90" alt="20170312_imeoff_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/03/12/computer-vim/">VimでNormalモード切り替え時にIMEをOFFにする、をMacでKarabiner無しで実現する 3</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

<div class="postscript">
  <p><strong>追記: 2017/08/31 </strong></p>

  <p>Karabinerの後継のKarabiner-ElementsとGNU screenの設定を追加することで上手くやる方法を見つけました。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/08/31/computer-mac-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20170831_escime_120_90.jpg" width="120" height="90" alt="20170831_escime_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/08/31/computer-mac-vim/">VimでNormalモード切り替え時にIMEをOFFにする、をMacでKarabiner-Elementsを使って実現する</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="windowsでyamyを使ってimeをノーマルモードで必ずオフにする">Windowsでyamyを使ってIMEをノーマルモードで必ずオフにする</h2>

<p>Windowsでは<a href="http://rcmdnk.github.io/blog/tags/yamy/">yamy</a>
を使って同じ様な事をしています。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># For Cygwin {{{
</span><span class="line">window Cygwin /cygwin/ : Global
</span><span class="line">  key A-v = RButton # Paste
</span><span class="line">
</span><span class="line">  # IL: IME on
</span><span class="line">  # IC: IME inserting
</span><span class="line">
</span><span class="line">  key IL-~IC-Esc = $ToggleIME Esc # Make IME off, Exit insert mode
</span><span class="line">  key IC-Esc = Esc # Stop inserting, Make IME off, Exit insert mode
</span><span class="line">
</span><span class="line">  key IL-*IC-C-LeftSquareBracket = Esc $ToggleIME Esc # Stop inserting, Make IME off, Exit insert mode
</span><span class="line"># }}}
</span><span class="line">window PuTTY /putty/ : Global</span></code></pre></td></tr></table></div></figure>

<p>cygwin上のみで有効になる様な設定です。
yamyではIMEが有効である(<code>IL</code>)の状態に加え、入力中(<code>IC</code>)と言う状態を使えるので、
上の設定では</p>

<ul>
  <li>IMEオンの状態で文字を入力中に<i class="key">ESC</i>を押したら入力キャンセル(元々のESCの動き)</li>
  <li>IMEオンの状態で文字を入力中でないときに<i class="key">ESC</i>を押したらIMEをオフにしてESC(ノーマルモードへ)</li>
  <li><i class="key">ctrl</i>-<i class="key">[</i>を押したら入力中でもどんな状態でも最初にESCで行動をキャンセルし、IMEをオフにしてESC(ノーマルモードへ)</li>
</ul>

<p>となっています。</p>

<p>ついでに最初の<i class="key">Alt</i>-<i class="key">v</i>の設定は、
このキーで右クリックをすることにより
<code>貼り付け</code>を出来る様にしてあります。
<code>cygwin</code>を<code>putty</code>に替えて、PuTTYの設定で右クリックが貼り付けになっていれば
PuTTYでも同じ事が出来ます。
(ただし、マウスカーソルはターミナル上に無いとカーソル下のウィンドウを選ぶ
だけなので注意。)</p>

<p>Macだと元々<i class="key">Command</i>-<i class="key">v</i>が貼り付けで<i class="key">Control</i>と区別されているので
ターミナルなどでも貼り付けが使えますが、Windowsだと貼り付けキーが
使えないのでこれで代用を。</p>

<div class="postscript">
  <p><strong>追記: 2013/06/28 </strong></p>

  <p>下記ではGvimやPuTTYでも同じ様な設定を使うため、
<code>Terminal</code>という新しいグループを作って
<code>Cygwin</code>、<code>Gvim</code>、<code>PuTTY</code>上で有効にするようにしています。
CUIの<code>vim.exe</code>を直接呼び出したWindowは
<code>ConsoleWindowClass</code>と言うクラスだと言う事がyamyの調査から確認できるのですが
そもそもIMEの変換が良く分からない動きをしたりして、
イマイチちゃんと設定できなかったのでコメントアウトしてあります。
(わざわざCUI版Vimを直接呼び出す必要も無いと思いますし。)</p>

  <p>後、上のコードコメントがちょっとおかしいのと
<code>$ToggleIME</code>の前<code>Esc</code>が要らない(<code>$ToggleIME</code>で入力を中断してIME Offの動きをするので)点も下では治してあります。</p>

  <figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># Terminal/Vim {{{
</span><span class="line">keymap Terminal : Global
</span><span class="line">  key A-v = RButton # Paste
</span><span class="line">  # IL: IME on
</span><span class="line">  # IC: IME inserting
</span><span class="line">  key IL-~IC-Esc = $ToggleIME Esc # Make IME off, Exit insert mode
</span><span class="line">  key IC-Esc = Esc # Stop inserting
</span><span class="line">  key IL-*IC-C-LeftSquareBracket = $ToggleIME Esc # Stop inserting, Make IME off, Exit insert mode
</span><span class="line">keymap Global
</span><span class="line">#}}}
</span><span class="line">
</span><span class="line"># For Cygwin {{{
</span><span class="line">window Cygwin /cygwin/ : Terminal
</span><span class="line"># }}}
</span><span class="line">
</span><span class="line"># For Gvim {{{
</span><span class="line">window GVim /Vim/ : Terminal
</span><span class="line">#window CVim /ConsoleWindowClass/ : Terminal
</span><span class="line"># }}}
</span><span class="line">
</span><span class="line"># For PuTTY {{{
</span><span class="line">window PuTTY /putty/ : Terminal
</span><span class="line"># }}}
</span><span class="line"> 
</span><span class="line">keymap Global</span></code></pre></td></tr></table></div></figure>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="gvimで出来る設定">GVimで出来る設定</h2>
<p>GVimではCUI版と違い、IMEを制御出来る部分があり、
Vim側だけで詳細に制御出来ます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">" ime setting
</span><span class="line">if has('multi_byte_ime') || has('xim') || has('gui_macvim')
</span><span class="line">  " Insert mode: lmap off, IME ON
</span><span class="line">  set iminsert=2
</span><span class="line">  " Serch mode: lmap off, IME ON
</span><span class="line">  set imsearch=2
</span><span class="line">  " Normal mode: IME off
</span><span class="line">  inoremap &lt;silent&gt; &lt;ESC&gt; &lt;ESC&gt;:set iminsert=0&lt;CR&gt;
</span><span class="line">endif</span></code></pre></td></tr></table></div></figure>

<p>といった感じで<code>.vimrc</code>で設定すればインサートモードやサーチモードに入った時はIMEをONにして
ノーマルモードに戻るときにオフにします。</p>

<p>GVimの方は殆ど使わないので実際使ってみないと分からない事もあるんですが、
日本語関連のことだと普通のGVimやらMacVimだと上手く設定が効かなくて、
KaoriYa version (<a href="http://www.kaoriya.net/software/vim/">Windows</a>、
<a href="https://github.com/splhack/macvim-kaoriya">Mac</a>だと
効く、と言った話も見ました。</p>

<blockquote>
  <p>Ref: <a href="http://vimwiki.net/?'iminsert'">iminsert</a></p>
</blockquote>

<blockquote>
  <p>Ref: <a href="http://code.google.com/p/macvim-kaoriya/wiki/Readme#%e6%97%a5%e6%9c%ac%e8%aa%9e%e5%85%a5%e5%8a%9b(IM)%e8%87%aa%e5%8b%95%e3%82%aa%e3%83%b3/%e3%82%aa%e3%83%95">macvim-kaoriya:日本語入力(IM)自動オン/オフ</a></p>
</blockquote>

<h2 id="日本語固定モード">日本語固定モード</h2>
<p><a href="https://github.com/fuenor/im_control.vim">im_control.vim</a>
というプラグインを使ってIMEのオン/オフをより詳細に設定する方法が
<a href="https://sites.google.com/site/fudist/Home/vim-nihongo-ban">vim UTF-8 日本語版</a>
の中サイトの以下のページにに詳しくあります。基本的にはGVim専用。</p>

<blockquote>
  <p>Ref: <a href="https://sites.google.com/site/fudist/Home/vim-nihongo-ban/vim-japanese/ime-control">Vim/GVimで「日本語入力固定モード」を使用する</a></p>
</blockquote>

<p>Windows専用ですが、こんなプラグインも。</p>

<blockquote>
  <p>Ref: <a href="http://qiita.com/rbtnn/items/855a8dce0ff0a3ea26f2">Vimのノーマルモード中は自動的にIMEをOFFにする。（Windowsのみ）</a></p>
</blockquote>

<h2 id="tera-termでの制御シーケンスの使用">Tera Termでの制御シーケンスの使用</h2>
<p>普段Tera Termは使わないのですが
IMEの制御以外にもシーケンスを使った色々な設定が以下のサイトに詳しくあります。</p>

<blockquote>
  <p>Ref: <a href="http://ttssh2.sourceforge.jp/manual/ja/usage/tips/vim.html">vim からの制御シーケンスの使用例</a></p>
</blockquote>

<blockquote>
  <p>Ref: <a href="http://slashdot.jp/journal/522812/IME-%e5%88%b6%e5%be%a1">dodaの日記： IME 制御</a></p>
</blockquote>

<p>Tera Termを使ってない場合でもシーケンスを使った設定や使い方が参考になると思います。</p>

<h2 id="windowsでautohotkeyを使う方法">WindowsでAutoHotkeyを使う方法</h2>
<p><a href="http://www.autohotkey.com/">Autohotkey</a>はちゃんと使ったことないですが
<a href="http://rcmdnk.github.io/blog/tags/yamy/">yamy</a>で
<i class="key">Ctrl</i><i class="fa fa-exchange"></i><i class="key">Alt</i>の交換でちょこちょこ不具合がるので
ちょっと他のリマップソフトも検討中のため、メモ。
下記のサイトには<code>imdisable</code>を
<code>挿入モード</code><i class="fa fa-exchange"></i><code>ノーマルモード</code>
変換の際に自動で変更する設定も載っています。</p>

<blockquote>
  <p>Ref: <a href="http://blog.blueblack.net/item_393">VimのノーマルモードでIMEを常時無効化する</a></p>
</blockquote>

<div class="postscript">
  <p><strong>追記: 2013/08/04 </strong></p>

  <p>AutoHotkeyを使い始めたので、AutoHotkeyでの方法を自分でも作ってみました:</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/08/04/computer-windows-autohotkey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130723_AutoHotKey_120_90.jpg" width="120" height="90" alt="20130723_AutoHotKey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/08/04/computer-windows-autohotkey/">Vimを使う上でのIME(日本語入力)の取り扱い with AutoHotKey</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="imeの状態でカーソルの色を変更する">IMEの状態でカーソルの色を変更する</h2>
<p>GVim限定ですが、<code>CursorIM</code>というhightlighが定義されていて
通常の時の<code>CursorIM</code>と違う色を設定することでIMEの状態でカーソルの色を変えられます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">if has('multi_byte_ime')
</span><span class="line">  highlight Cursor guifg=NONE guibg=Green
</span><span class="line">  highlight CursorIM guifg=NONE guibg=Purple
</span><span class="line">fi</span></code></pre></td></tr></table></div></figure>

<h2 id="imeのonoffをsyntaxで制御する">IMEのON/OFFをsyntaxで制御する</h2>

<p>vim-jpにこんな話もありました。</p>

<blockquote>
  <p>Ref: <a href="https://github.com/vim-jp/issues/issues/13">IMEのON/OFFをsyntaxで制御する</a></p>
</blockquote>

<p>以上!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim以外でVimする: Mac編]]></title>
    <link href="https://rcmdnk.com/blog/2013/06/10/computer-mac-keyremap4macbook-vim/"/>
    <updated>2013-06-10T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/06/10/computer-mac-keyremap4macbook-vim</id>
    <content type="html"><![CDATA[<p>この記事は<a href="http://atnd.org/events/33746">Vim Advenvimt Calendar 2012</a> 192日目の記事です。
前回は@manga_osyoさんの<a href="http://d.hatena.ne.jp/osyo-manga/20130609/1370789385">textobj-context をつくったAdd Staraereal</a>でした。</p>

<p>このブログではVAC107日目に
<a href="https://rcmdnk.com/blog/2013/03/17/vim/">Vim以外でVimする: Windows編</a>という記事で
Windows上でVimエディタ以外の場所でVimっぽく操作することを
<a href="http://sourceforge.jp/projects/yamy/">yamy</a>という
キー設定変更ソフトで実現する方法を紹介しました。
(<a href="https://rcmdnk.com/blog/2013/08/03/computer-windows-autohotkey/">Vim以外でVimする: Windows+AutoHotkey編</a>でAutoHotkey (or Standalone)でする方法も追加。)</p>

<p>今回の記事はそのMac編です。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#karabiner-elementsでの設定" id="markdown-toc-karabiner-elementsでの設定">Karabiner-Elementsでの設定</a></li>
  <li><a href="#keyremap4macbook" id="markdown-toc-keyremap4macbook">KeyRemap4MacBook</a></li>
  <li><a href="#vim_emu-vim-emulation-with-keyremap4macbook" id="markdown-toc-vim_emu-vim-emulation-with-keyremap4macbook">vim_emu: Vim emulation with KeyRemap4MacBook</a>    <ul>
      <li><a href="#設定ファイル--インストール" id="markdown-toc-設定ファイル--インストール">設定ファイル &amp; インストール</a></li>
      <li><a href="#有効にするアプリの選択" id="markdown-toc-有効にするアプリの選択">有効にするアプリの選択</a></li>
      <li><a href="#主なモード" id="markdown-toc-主なモード">主なモード</a></li>
      <li><a href="#normal-mode等が有効時の表示" id="markdown-toc-normal-mode等が有効時の表示">Normal Mode等が有効時の表示</a></li>
      <li><a href="#できること" id="markdown-toc-できること">できること</a>        <ul>
          <li><a href="#insert-mode" id="markdown-toc-insert-mode">Insert Mode</a></li>
          <li><a href="#normal-mode移動系" id="markdown-toc-normal-mode移動系">Normal Mode:移動系</a></li>
          <li><a href="#normal-modeyankcutchangepaste" id="markdown-toc-normal-modeyankcutchangepaste">Normal Mode:Yank/Cut/Change/Paste</a></li>
          <li><a href="#normal-modeその他" id="markdown-toc-normal-modeその他">Normal Mode:その他</a></li>
          <li><a href="#visual-mode" id="markdown-toc-visual-mode">Visual Mode</a></li>
          <li><a href="#command-model" id="markdown-toc-command-model">Command Model</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="karabiner-elementsでの設定">Karabiner-Elementsでの設定</h2>

<div class="postscript">
  <p><strong>追記: 2017/09/05 </strong></p>

  <p>最新のmacOS SierraではKarabinerは使えなくなっていて、代わりに
<a href="https://github.com/tekezo/Karabiner-Elements">Karabiner-Elements</a>
がSierra用に開発されています。</p>

  <p>このKarabiner-Elements用にも作りました。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/09/05/computer-mac-karabiner-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20170905_vimemu_120_90.jpg" width="120" height="90" alt="20170905_vimemu_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/09/05/computer-mac-karabiner-vim/">Vim以外でVimする: Mac+Karabiner-Elements編</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="keyremap4macbook">KeyRemap4MacBook</h2>
<p><img src="https://rcmdnk.com/images/MacApp/KeyRemap4MacBook.png" width="100" height="100" alt="KeyRemap4MacBook" /></p>

<p><del>KeyRemap4MacBook</del>
はMac用のキーバインド編集アプリです。
今回はこのアプリを使います。</p>

<div class="postscript">
  <p><strong>追記: 2022/06/24 </strong></p>

  <p>現在は
<a href="https://karabiner-elements.pqrs.org/">Karabiner-Elements</a>
に名前が変わってます。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>このアプリについては上記公式ページにも詳しい解説がありますし、
このブログでもいくつか紹介記事を書いたので
良かったら見てみてください。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/06/05/computer-mac-keyremap4macbook/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/KeyRemap4MacBook_120_90.png" width="120" height="90" alt="KeyRemap4MacBook_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/05/computer-mac-keyremap4macbook/">Macでのキーバインド設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/KeyRemap4MacBook_120_90.png" width="120" height="90" alt="KeyRemap4MacBook_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim/">KeyRemap4MacBookで初期状態で設定出来るVim設定</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/vim_120_90.png" width="120" height="90" alt="vim_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2/">MacでVimっぽくカーソルやマウス、ウィンドウを動かす</a></div></li></ul>

<p>上のタイトルと各エントリの日付を見て貰えれば
分かる様に基本的に今回の内容の一部を
フライイングして書いたものです…
(<a href="https://rcmdnk.com/blog/2013/03/17/vim/">Vim以外でVimする: Windows編</a>の時と同様、まとめてみようと思ったら物凄く長くなりそうだったので分けました)</p>

<p>最初の2つはデフォルト機能や単なる使い方ですが、
3つ目は <a href="https://rcmdnk.com/blog/2013/03/17/vim/">Windows編</a>で紹介した
モード変更無しでモディファイヤーキーと同時押しで行うVimの動きで、
<i class="key">⌘</i>-<i class="key">⌃</i>-<i class="key">h</i>/<i class="key">j</i>/<i class="key">k</i>/<i class="key">l</i>
でカーソルを上下左右にしたり、
他にもマウスポインタやウィンドウを動かす事を可能にする設定を
紹介しています。</p>

<h2 id="vim_emu-vim-emulation-with-keyremap4macbook">vim_emu: Vim emulation with KeyRemap4MacBook</h2>

<p>ということで今回の本題です。
KeyRemap4MacBookには元々<code>Complete Vim</code>、<code>Ubiquitous Vim</code>と言うモードが入っていて、
これらを有効にするとノーマルモードの動きは大体再現出来ます。</p>

<p>ただ、ノーマルモードだけであればワザワザモード変化させなくても
上のモディファイヤーキーとの同時押し、で殆ど十分ですが
ビジュアルモードなど範囲選択も使いたいところです。</p>

<p>Windows同様、選択は<i class="key">Shift</i>を押しながら移動すれば
可能なんですが、そんなことはしれられないので
やはりVim以外でもVimっぽく選択コピペしたい、
ということを再現するのがデフォルト設定に加えて作ってみた理由の一つです。</p>

<p>Windowsに比べてMacの方でしか再現出来ない部分等もあったり、
これまで知らなかったショートカットキーとかも覚えたので
その辺も勉強になりました。</p>

<h3 id="設定ファイル--インストール">設定ファイル &amp; インストール</h3>
<p>設定ファイルの最新版、及び詳しい仕様方法は
<a href="https://github.com/rcmdnk/vim_emu">GitHubのvim_emuレポジトリ</a>
を御覧ください。</p>

<div class="github-widget" data-repo="rcmdnk/vim_emu"></div>

<p>上のREADMEにも書いてありますが、
KeyRemap4MacBookの作者の方に連絡してみたところ、
本体にも入れていただいたので、
もし、現在すでにKeyRemap4MacBookをインストール済の人であれば
現在のベータ版(現時点で8.3.7)にすれば
上のvim_emuの設定項目が追加されますので是非試してください
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p>安定バージョンが現在8.3.5なので、問題なければ
安定バージョンにもそのうち追加されるかな、と。</p>

<p>vim_emuが入っているバージョンを導入すると
下の様に<code>VIM Emulation</code>の項目が追加されます。</p>

<p><img src="https://rcmdnk.com/images/post/20130610_KeyRemap4MacBook_vim_emu.jpg" title="" alt="" /></p>

<p>有効にするために、<code>Enable Vim Emulation</code>にチェックを入れ、
Normal Modeに入るためのキーとして
<i class="key">ESC</i>または<i class="key">⌃</i>-<i class="key">[</i>を選んでください。勿論両方選択も可能です。</p>

<p><code>Enable Visual Block Mode</code>については、下に書く様にこのモードが
ちょっと特殊なので別に有効化/無効化出来る様にしてあります。
(通常は無効の方が良いかと。)</p>

<h3 id="有効にするアプリの選択">有効にするアプリの選択</h3>
<p>KeyRemap4MacBookでは各設定をアプリ毎に有効にしたり無効にしたりできるのですが、
初期設定ではvim_emuはターミナル (iTerm)、Vim (MacVim)、Firefox、Emacs、
またパスワード入力のポップアップでは無効になるようになっています。</p>

<p>もし、この設定を変えたい場合は、ベータ版をインストールした場合は
<code>/Applications/KeyRemap4MacBook.app/Contents/Resources/appdef.xml</code>、
またvim_emuをGitHubから直接入れた場合は
<code>~/Library/Application Support/KeyRemap4MacBook/vim_emu.xml</code>
の中にある</p>

<pre><code>&lt;replacementdef&gt;
  &lt;replacementname&gt;VIM_EMU_ONLY_APPS&lt;/replacementname&gt;
  &lt;replacementvalue&gt;&lt;/replacementvalue&gt;
&lt;/replacementdef&gt;
&lt;replacementdef&gt;
  &lt;replacementname&gt;VIM_EMU_IGNORE_APPS&lt;/replacementname&gt;
  &lt;replacementvalue&gt;TERMINAL, VI, PASSWORD, FIREFOX, EMACS&lt;/replacementvalue&gt;
&lt;/replacementdef&gt;
</code></pre>

<p>の部分を変更してください。</p>

<ul>
  <li><code>VIM_EMU_ONLY_APPS</code>: 設定されたアプリ上でだけ有効になる。空欄の場合はすべてのアプリ。</li>
  <li><code>VIM_EMU_IGNORE_APPS</code>: 設定されたアプリ上では無効にする。</li>
</ul>

<p>例えば、テキストエディット上でだけ有効にしたい場合は</p>

<pre><code>&lt;replacementdef&gt;
  &lt;replacementname&gt;VIM_EMU_ONLY_APPS&lt;/replacementname&gt;
  &lt;replacementvalue&gt;EDITOR&lt;/replacementvalue&gt;
&lt;/replacementdef&gt;
</code></pre>

<p>としてください。</p>

<p>アプリの定義等に関しては
<a href="http://rcmdnk.github.io/blog/2013/06/05/computer-mac-keyremap4macbook/">Macでのキーバインド設定</a>
や公式ページを参照してください。</p>

<h3 id="主なモード">主なモード</h3>
<p>まず、vim_emuには以下の様な主なモードがあります。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Mode</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Insert Mode</td>
      <td style="text-align: left">Macの通常の状態。</td>
    </tr>
    <tr>
      <td style="text-align: left">Normal Mode</td>
      <td style="text-align: left">hjkl等のキーでの移動、ビジュアルモードに入ったりできる状態。</td>
    </tr>
    <tr>
      <td style="text-align: left">Visual Mode</td>
      <td style="text-align: left">Character-wise, Line-wise, Block-wiseのビジュアルモードがあります。ただし、Block-wiseはちょっと特殊。</td>
    </tr>
    <tr>
      <td style="text-align: left">Command Mode</td>
      <td style="text-align: left">主にファイルの保存、終了コマンドが使えます。</td>
    </tr>
  </tbody>
</table>

<p>各モードへの入り方はVim同様、</p>

<ul>
  <li><i class="key">ESC</i>または<i class="key">⌃</i>-<i class="key">[</i>でNormal Modeへ(どちらを使うか、は選択可能、勿論両方選択も可能。)。</li>
  <li>Normal Modeから<i class="key">i</i>などでInsert Mode(通常Macの状態)へ。</li>
  <li>Normal Modeから<i class="key">v</i>/<i class="key">⇧</i>-<i class="key">v</i>/<i class="key">⌃</i>-<i class="key">v</i>でCharacter-wise, Line-wise, Block-wise の各Visual Modeへ。</li>
  <li>Normal Modeから<i class="key">:</i>でCommand Modeへ。</li>
</ul>

<p>:warning:
Block-Wise Visual Modeに関しては、カーソル移動では無く、
<i class="key">⌥</i>-<i class="key">⌘</i>とマウスのドラック、
とう言う方法を取っています。
これはMacデフォルトの機能で、文字選択が出来るアプリであれば
大概これで矩形選択できます
<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>。</p>

<p>ただ、その特性上、編集中のカーソルキー位置から、ではなく、
その時点でのマウスポインタの位置からの矩形選択スタート、になるので、
はっきり言って実用性無いですが、
矩形選択出来る事知らなかった人はためしてみると
ちょっと楽しいと思います(ショートカットキーとマウス直接でも良いですが)。
その様な機能なので、この機能は別にOn/Off出来る様になっています。</p>

<h3 id="normal-mode等が有効時の表示">Normal Mode等が有効時の表示</h3>
<p>Normal Mode等が有効になった場合、画面右下に下の様な表示が出ます。</p>

<p><img src="https://rcmdnk.com/images/post/20130610_KeyRemap4MacBook_display.jpg" title="" alt="" /></p>

<p>Visual Mode等の時はその表示が出るようにもなっています。</p>

<p>これらのMode変換は全てのアプリで共通で、さらに無効なアプリの上でも
表示は出続けます。
つまりテキストエディットでNormal Modeを有効にしたままターミナルに移ると
上の表示は出続けますが、この場合ターミナル上ではキーバインドは無効になっています。</p>

<p>もし、この表示が邪魔だ、という場合は</p>

<p><code>/Applications/KeyRemap4MacBook.app/Contents/Resources/include/checkbox/vim_emu/vim_emu_core_settings.xml</code>、
またvim_emuをGitHubから直接入れた場合は
<code>~/Library/Application Support/KeyRemap4MacBook/vim_emu/vim_emu_core_settings.xml</code>
の中にある</p>

<pre><code>&lt;autogen&gt;__ShowStatusMessage__ -- VIM &lt;/autogen&gt;
</code></pre>

<p>となっている<code>__ShowStatusMessage__</code>を含む行を全て消すかコメントアウトして下さい。</p>

<h3 id="できること">できること</h3>
<p>詳しくは<a href="https://github.com/rcmdnk/vim_emu">README</a>
や付属のHELPを見て頂ければ分かると思いますし、
とりあえずVimなので適当に打って出来るか試して頂ければ、と
と思ったりしてますがざっっと紹介したいと思います。</p>

<h4 id="insert-mode">Insert Mode</h4>
<p>このモードが初期状態で、
殆どのキーは変更を行なっていませんが、
Normal Modeに入るためのキー(<i class="key">ESC</i>、<i class="key">⌃</i>-<i class="key">[</i>)
と、<i class="key">⌃</i>-<i class="key">n</i>、<i class="key">⌃</i>-<i class="key">p</i>
はリマップされています。</p>

<p>Macでは大概のアプリで入力中に<i class="key">ESC</i>を押すと補完が出来るので、
<i class="key">⌃</i>-<i class="key">n</i>、<i class="key">⌃</i>-<i class="key">p</i>では
この機能を使ってVimの様な補完のキーバインディングを再現しています。</p>

<h4 id="normal-mode移動系">Normal Mode:移動系</h4>
<p>まず、勿論<i class="key">h</i>/<i class="key">j</i>/<i class="key">k</i>/<i class="key">l</i>の動きは再現しています。</p>

<p>Windowsの時と違い、単語移動において、単語末へ移動、が出来る様になっていますので、
<i class="key">e</i>等が<i class="key">w</i>と区別されます。(<i class="key">⇧</i>-<i class="key">w</i>、<i class="key">⇧</i>-<i class="key">e</i>等各大文字に関しては小文字と全く同じ動き。)
単語末移動があるので<i class="key">g</i><i class="key">e</i>についても追加してあります
<sup id="fninref:3"><a href="#fnin:3" rel="footnote">3</a></sup>。</p>

<p>移動系に関しては<i class="key">4</i><i class="key">w</i>などとすることにより
4単語進む、と言った、<i class="key">数字</i> <i class="key">コマンド</i>で繰り返し、
ということも出来る様になっています。
ただし、数字は2-9だけです。
<a href="https://rcmdnk.com/blog/2013/03/17/vim/">Windows編</a>と違い、現状<i class="key">y</i>などとの連携は取れません。</p>

<h4 id="normal-modeyankcutchangepaste">Normal Mode:Yank/Cut/Change/Paste</h4>
<p><i class="key">y</i> <i class="key">y</i>、<i class="key">⇧</i>-<i class="key">d</i>、<i class="key">c</i><i class="key">w</i>等、
ひと通りのコピー/カット機能は使えます。</p>

<p>勿論貼り付けは<i class="key">p</i>でカーソルキーの次へ位置へ貼り付け(大文字ならその場へ貼り付け)。</p>

<h4 id="normal-modeその他">Normal Mode:その他</h4>
<p>Undo(<i class="key">u</i>、Redo(<i class="key">⌃</i>-<i class="key">r</i>)
や<i class="key">/</i>での検索、等。
<i class="key">*</i>でカーソル下の単語検索、も。</p>

<h4 id="visual-mode">Visual Mode</h4>
<p>基本的にNormal Modeで使える動きで範囲を変更出来る。
<i class="key">y</i>/<i class="key">d</i>などでコピー/カット。</p>

<h4 id="command-model">Command Model</h4>
<p><i class="key">w</i><i class="key"> </i>で名前をつけて保存、
<i class="key">w</i><i class="key">q</i>で保存して終了、等。</p>

<h2 id="まとめ">まとめ</h2>
<p>以前の<a href="https://rcmdnk.com/blog/2013/03/17/vim/">Windows編</a>同様に
基本的にMacに元々あるキーボードショートカット
<sup id="fninref:4"><a href="#fnin:4" rel="footnote">4</a></sup>をVimmerとして
分かりやすい位置に持ってきた(まとめた)に過ぎません。</p>

<p>例えば行連結の<i class="key">⇧</i>-<i class="key">j</i>に関しては</p>

<ol>
  <li><i class="key">⌘</i>-<i class="key">⇢</i> (行末へ移動)</li>
  <li><i class="key">Space</i></li>
  <li><i class="key Delete">Foward</i></li>
  <li><i class="key">⇠</i></li>
</ol>

<p>という一連のキーを割り当てて居ます
<sup id="fninref:5"><a href="#fnin:5" rel="footnote">5</a></sup>。</p>

<p>思いつく限りキー設定を入れてみたつもりですが、
このキーの割り当てが無い、とか
このキーの動きがおかしい、とか
あればここでのコメントなりメールなり
なんなりで教えて貰えるとありがたいです。</p>

<p><a href="https://rcmdnk.com/blog/2013/03/17/vim/">Windows編</a>で作ったyamy
の設定についても、おかしな点やこれは出来るんじゃないか?
ていうのがあれば是非連絡ください。</p>

<div class="postscript">
  <p><strong>追記: 2013/07/08 </strong></p>

  <p><a href="https://rcmdnk.com/blog/2013/07/08/computer-mac-keyremap4macbook-vim/">vim_emu for KeyRemap4MacBookのアップデート</a></p>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacでVimっぽくカーソルやマウス、ウィンドウを動かす]]></title>
    <link href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2/"/>
    <updated>2013-06-06T13:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2</id>
    <content type="html"><![CDATA[<p>以前、
<a href="https://rcmdnk.com/blog/2013/03/17/vim">Windowsでyamyを使ってVimっぽい動きをVim以外で再現する</a>
方法を紹介しましたが、
今回はMacで、
<i class="key">⌘</i>-<i class="key">⌃</i>などとの同時押しで
カーソルやマウスポインタ、さらにウィンドウを動かす方法についてです。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#カーソルキーを動かす" id="markdown-toc-カーソルキーを動かす">カーソルキーを動かす</a></li>
  <li><a href="#マウスカーソルを動かす" id="markdown-toc-マウスカーソルを動かす">マウスカーソルを動かす</a></li>
  <li><a href="#ウィンドウの移動" id="markdown-toc-ウィンドウの移動">ウィンドウの移動</a>    <ul>
      <li><a href="#必要なapplescriptの導入" id="markdown-toc-必要なapplescriptの導入">必要なAppleScriptの導入</a></li>
      <li><a href="#bettertouchtoolでの設定" id="markdown-toc-bettertouchtoolでの設定">BetterTouchToolでの設定</a></li>
    </ul>
  </li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="カーソルキーを動かす">カーソルキーを動かす</h2>
<p><a href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim">前回</a>
紹介した通り、KeyRemap4MacBookには最初からいくつか
Vimっぽい動きを再現する設定が入っていますが、
<i class="key">⌘</i>-<i class="key">⌃</i>
という組み合わせを使いたいので、以下の設定を<code>private.xml</code>に加えています。</p>

<figure class="code"><figcaption><span>vimode_ctrl_cmd_KeyRemap4Macbook.xml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span></span><span class="nt">&lt;item&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;name&gt;</span>VI<span class="w"> </span>mode<span class="w"> </span>with<span class="w"> </span>CONTROL_L+COMMAND_L<span class="nt">&lt;/name&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;appendix&gt;</span>CONTROL_L+COMMAND_L+H/J/K/L<span class="w"> </span>to<span class="w"> </span>cursor<span class="w"> </span>Left/Down/Up/Right<span class="nt">&lt;/appendix&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;identifier&gt;</span>private.my_cursor<span class="nt">&lt;/identifier&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;autogen&gt;</span>--KeyToKey--<span class="w"> </span>KeyCode::H,<span class="w"> </span>ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,<span class="w"> </span>KeyCode::CURSOR_LEFT<span class="nt">&lt;/autogen&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;autogen&gt;</span>--KeyToKey--<span class="w"> </span>KeyCode::J,<span class="w"> </span>ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,<span class="w"> </span>KeyCode::CURSOR_DOWN<span class="nt">&lt;/autogen&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;autogen&gt;</span>--KeyToKey--<span class="w"> </span>KeyCode::K,<span class="w"> </span>ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,<span class="w"> </span>KeyCode::CURSOR_UP<span class="nt">&lt;/autogen&gt;</span>
</span><span class="line"><span class="w">  </span><span class="nt">&lt;autogen&gt;</span>--KeyToKey--<span class="w"> </span>KeyCode::L,<span class="w"> </span>ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,<span class="w"> </span>KeyCode::CURSOR_RIGHT<span class="nt">&lt;/autogen&gt;</span>
</span><span class="line"><span class="nt">&lt;/item&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>これで、</p>

<ul>
  <li>どの場所でも<i class="key">⌘</i>-<i class="key">⌃</i>-<i class="key">h</i>/<i class="key">j</i>/<i class="key">k</i>/<i class="key">l</i>によってカーソルを左下上右に動かせる</li>
</ul>

<p>となります。</p>

<h2 id="マウスカーソルを動かす">マウスカーソルを動かす</h2>
<p>KeyRemap4MacBookでは<code>VK_MOUSEKEY_LEFT</code>等といったキー設定でキーバインドにマウスカーソルの移動を当てられます。
他にも<code>PointingButton::RIGHT</code>で左クリック、<code>VK_MOUSEKEY_SCROLL_UP</code>で上スクロール、
を設定出来ます。</p>

<p>これらを入れた設定がこれ。</p>

<div><script src="https://gist.github.com/5501291.js"></script>
<noscript><pre><code>&lt;item&gt;
  &lt;name&gt;Mouse Keys (right click to P)&lt;/name&gt;
  &lt;appendix&gt;CONTROL_L+COMMAND_L+Y/U/I/O to Left/Down/Up/Right&lt;/appendix&gt;
  &lt;appendix&gt;CONTROL_L+COMMAND_L+N/]/P to left/middle/right click&lt;/appendix&gt;
  &lt;appendix&gt;CONTROL_L+COMMAND_L+M/. to mouse wheel down/up&lt;/appendix&gt;
  &lt;identifier&gt;private.my_mousekeys_arrow_2&lt;/identifier&gt;
  &lt;autogen&gt;--KeyToKey-- KeyCode::Y, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, KeyCode::VK_MOUSEKEY_LEFT&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToKey-- KeyCode::U, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, KeyCode::VK_MOUSEKEY_DOWN&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToKey-- KeyCode::I, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, KeyCode::VK_MOUSEKEY_UP&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToKey-- KeyCode::O, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, KeyCode::VK_MOUSEKEY_RIGHT&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToPointingButton-- KeyCode::N, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, PointingButton::LEFT&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToPointingButton-- KeyCode::BRACKET_RIGHT, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, PointingButton::MIDDLE&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToPointingButton-- KeyCode::P, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, PointingButton::RIGHT&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToKey-- KeyCode::M, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, KeyCode::VK_MOUSEKEY_SCROLL_DOWN&lt;/autogen&gt;
  &lt;autogen&gt;--KeyToKey-- KeyCode::COMMA, ModifierFlag::CONTROL_L |ModifierFlag::COMMAND_L|ModifierFlag::NONE, KeyCode::VK_MOUSEKEY_SCROLL_UP&lt;/autogen&gt;
&lt;/item&gt;</code></pre></noscript></div>

<p>これで、</p>

<ul>
  <li>マウスカーソルを<i class="key">⌘</i>-<i class="key">⌃</i>-<i class="key">y</i>/<i class="key">u</i>/<i class="key">i</i>/<i class="key">o</i>(<i class="key">h</i>/<i class="key">j</i>/<i class="key">k</i>/<i class="key">l</i>の上のキー達)によって左下上右に動かせる</li>
  <li>ついでにクリックとかも出来る(<i class="key">⌘</i>-<i class="key">⌃</i>-<i class="key">n</i>/<i class="key">p</i>で左/右クリック)</li>
  <li>ホイール操作も(<i class="key">⌘</i>-<i class="key">⌃</i>-<i class="key">m</i>/<i class="key">,</i>で下/上ホイール)</li>
</ul>

<p>を出来る様になります。
これも初期設定ででも<code>Mouse Keys</code>という項目があり、
矢印でマウスを移動させたりするようになっていますが、
そこにある注意にあるように<code>General</code><i class="fa fa-arrow-right"></i><code>deon't remap any pointing devices</code>
にチェックを入れてしまうと機能しなくなるので注意してください。</p>

<h2 id="ウィンドウの移動">ウィンドウの移動</h2>
<p><a href="https://rcmdnk.com/blog/2013/03/17/vim/">Windowsのyamy時</a>と比べてKeyRemap4MacBookで出来なかった事は
ウィンドウの移動です。</p>

<p>これに関してはAppleScriptでウィンドウを動かすスクリプトを作って
それを<a href="http://blog.boastr.net/?page_id=1722">BetterTouchTool</a>
でショートカット起動することにより出来るようにしました。</p>

<h3 id="必要なapplescriptの導入">必要なAppleScriptの導入</h3>

<ul>
  <li>
    <p><a href="https://github.com/rcmdnk/AppleScript">AppleScript</a>レポジトリにある
  <code>windowMove*</code>という5つのスクリプトを取ってくる。
  次の様にコンパイルして</p>

    <pre><code>  osacompile -o windowMove.scpt  windowMove.script
</code></pre>

    <p>出来たファイル(<code>windowMove.scpt</code>など)を<code>~/Library/Scripts</code>等好きなところへ置いておく。</p>
  </li>
  <li>
    <p>もしくは、上のAppleScriptレポジトリの物全部インストールするので良ければ、
  READMEにあるようにレポジトリをcloneして<code>install.sh</code>を実行する。
  (レポジトリにあるスクリプトを全部コンパイルして<code>~/Library/Scripts</code>へ入れます。)</p>
  </li>
</ul>

<h3 id="bettertouchtoolでの設定">BetterTouchToolでの設定</h3>
<ul>
  <li>BetterTouchToolの<code>Gestures</code><i class="fa fa-arrow-right"></i><code>Keyboard</code>で新しいショートカットを
    <ul>
      <li><code>Keyboard Shortcut</code>: <i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">y</i></li>
      <li><code>Trigger Other Keyboard Shortcut</code>: 空白</li>
      <li>
        <p><code>Trigger Predefined Action</code>: <code>Open Application/File/Scripts</code><i class="fa fa-arrow-right"></i><code>~/Library/Scripts/windowMoveLeft.scpt</code>を選択</p>

        <p>の様に<code>y</code>,<code>u</code>,<code>i</code>,<code>o</code>に対して<code>Left</code>,<code>Down</code>,<code>Up</code>,<code>Right</code>を指定する。</p>
      </li>
    </ul>
  </li>
</ul>

<p>以上で</p>

<ul>
  <li>ウィンドウを<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">y</i>/<i class="key">u</i>/<i class="key">i</i>/<i class="key">o</i>)によって左下上右に動かせる</li>
</ul>

<p>が出来る様になります。
が、ここでちょっと困ったことに<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">u</i>
が<code>Mail.app</code>でメールの未読/既読の切り替えです。</p>

<p>このショートカットは使いたいのでKeyRemap4MacBookの方で他のキーに割り当てよう、
と思ったんですがBetterTouchToolで上書きしてしまうとそちらが優先されるので
<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">u</i>の指定はKeyRemap4MacBook
からはウィンドウを動かす、と解釈されてしまいます。</p>

<p>回避策としては</p>

<ul>
  <li>環境設定から未読/既読のキーボードショートカットを変える</li>
  <li>BetterTouchToolで違うキーにWindowMoveを割り当ててそれを使う</li>
  <li>BetterTouchToolで違うキーにWindowMoveを割り当ててさらにKeyRemap4MacBook
で再度<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">y</i>等に割り当て直す</li>
</ul>

<p>などが考えられますが、キーボードショートカットの変更はやはり
KeyRemap4MacBookで閉じたいのと、Windowsで
<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">y</i>の設定にしていて慣れてしまっているので
一番回りくどい感じですが3番目の方法を取り次の様に設定しています。</p>

<ul>
  <li>BetterTouchToolで<i class="key">⌥</i>-<i class="key">⇧</i>-<i class="key">y</i>/<i class="key">u</i>/<i class="key">i</i>/<i class="key">o</i>にそれぞれwindowMoveLeft/Down/Up/Rightを指定。</li>
  <li>KeyRemap4MacBookで<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">y</i>/<i class="key">u</i>/<i class="key">i</i>/<i class="key">o</i>にそれぞれ<i class="key">⌥</i>-<i class="key">⇧</i>-<i class="key">y</i>/<i class="key">u</i>/<i class="key">i</i>/<i class="key">o</i>を指定</li>
</ul>

<p>従って現設定では<code>Cmd+Shift</code>+<code>y</code>でも<code>Option+Shift</code>+<code>y</code>でもウィンドウは
左に動きます。
KeyRemap4MacBookでの設定は<a href="https://gist.github.com/rcmdnk/5501590">こちらのGist</a>
にあります。</p>

<p>これでもいくつか潰してしまっているショートカット
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>
<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>
がありますが、
差し当たり使わないものなので良しとしておきます。</p>
]]></content>
  </entry>
  
</feed>
