<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Windows | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/windows/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T00:24:25+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NVIDIA GeForceからディスプレイへの音声出力でのトラブル]]></title>
    <link href="https://rcmdnk.com/blog/2020/06/21/computer-windows/"/>
    <updated>2020-06-21T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/06/21/computer-windows</id>
    <content type="html"><![CDATA[<p>デスクトップPCからの音声出力をGPUから出力しているディスプレイから
行っている状態でちょっと困ったことになったのでそれについて。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#環境" id="markdown-toc-環境">環境</a></li>
  <li><a href="#問題発生" id="markdown-toc-問題発生">問題発生</a></li>
  <li><a href="#解決策1" id="markdown-toc-解決策1">解決策1</a></li>
  <li><a href="#解決策2" id="markdown-toc-解決策2">解決策2</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="環境">環境</h2>

<p>PCはNVIDIA GeForce RTX 2070 superを積んだWindowsマシン。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07KSNSFLB?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07KSNSFLB&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/718Rm465mpL._SS90_CR0,0,120,90_.jpg" alt="AOC ゲーミング モニター C32G1/11 (31.5インチ/144Hz/1ms/VA 曲面パネル/HDMI×2 DP×1)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/09/20/computer-windows/">増税前にWindows用PC購入: FRONTIERでFRGAH370/WSB/NTK GAを購入</a></div></li></ul>

<p>普段はここからDisplayPort (to DisplayPort)でディスプレイに画像を出力。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07KSNSFLB?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07KSNSFLB&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/718Rm465mpL._SS90_CR0,0,120,90_.jpg" alt="AOC ゲーミング モニター C32G1/11 (31.5インチ/144Hz/1ms/VA 曲面パネル/HDMI×2 DP×1)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/09/21/computer-windows/">AOC C32G1/11 144Hz 31.5インチのVA局面パネルディスプレイを購入</a></div></li></ul>

<p>ディスプレイにはスピーカーは付いてませんが、イヤフォンジャックがついていて
そこにスピーカーを付けて音を出しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/10/26/computer-windows/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20191026_speaker2_120_90.jpg" width="120" height="90" alt="20191026_speaker2_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/10/26/computer-windows/">ダイソーの300円スピーカー</a></div></li></ul>

<p>こんな感じでDisplayPortやらHDMIのデジタル出力だと画像と同時に音声も送れます。</p>

<h2 id="問題発生">問題発生</h2>

<p>問題が発生したのは別のディスプレイにHDMI (to HDMI)で画像を送ろうと接続した時。</p>

<p>この時、音も新しくつないだディスプレイ(こちらはスピーカー付き)の方から出る様になりました。</p>

<p>その後、HDMIを外すとDisplayPortでつないだ方からは音が出ない状態で、
サウンド設定の辺りを見てみてもそれが見当たりません。</p>

<p><img src="https://rcmdnk.com/images/post/20200621_sound1.png" alt="20200621_sound1.png" class="pic" /></p>

<p>HDMI接続前は<strong>32G1WG4</strong>というディスプレイのものがありそれが既定になっていましたが、
HDMIを接続するとそれが消え、HDMIに繋がれた<strong>Capsule II</strong>というものが既定になります。</p>

<p>その後、HDMIを外すと、当然<strong>Capsule II</strong>は利用不可になるわけですが、
<strong>32G1WG4</strong>は復帰しません。</p>

<p>何故か他に2つDisplayPortはあるのですが、これは恐らくつないでない出力のもの。</p>

<p>治すには一旦スリープに落とすなり再起動する必要がありました。
DisplayPortを繋げ直すと治ることもありましたが治らないことも。</p>

<p>これだと気軽に別ディスプレイを繋げられず困った状態に。</p>

<h2 id="解決策1">解決策1</h2>

<p>NVIDIAのGPUを使っていると、NVIDIAコントロールパネル、というものがインストールされていると思います。</p>

<p>タスクバー上にある緑のアイコンをクリックするかコントロールパネルの中から探して立ち上げます。</p>

<p><img src="https://rcmdnk.com/images/post/20200621_nvidiacp3.jpg" alt="20200621_nvidiacp3.jpg" class="pic" />
<img src="https://rcmdnk.com/images/post/20200621_nvidiacp4.png" alt="20200621_nvidiacp4.png" class="pic" /></p>

<p>この中でデジタル・オーディオ設定、というのを開くと、
各ポートに繋がっているディスプレイ毎にオーディオが選べる様になっています。</p>

<p><img src="https://rcmdnk.com/images/post/20200621_nvidiacp1.png" alt="20200621_nvidiacp1.png" class="pic" /></p>

<p>GeForce RTX 2070 superは3つのDisplayPort出力と1つのHDMI出力があります。</p>

<p>PCの背面に(設置の向きによりますが)上の画像の通り、右からDisplayPort(1)、HDMI、DisplayPort(2)、DisplayPort(3)と配置されています。
(HDMIが真ん中にぽつんとあるのは設計上の意味があるのでしょうか?)</p>

<p>DisplayPort(3)にAOC 32G1WG4がありますが、これが普段使っているディスプレイ。
(3)を使っていたのは一番左にあり、ディスプレイが(PCの後ろから見て)左側にあるため。</p>

<p>もう一つのHDMIにつながってるCapsule IIが臨時的に付けてるもの。</p>

<p>モバイルプロジェクターです(HDMI入力あり、スピーカー機能もついてる)。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07QBXMY2Z?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07QBXMY2Z&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/415l0kv0gGL._SS200_.jpg" alt="Anker Nebula Capsule II" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07QBXMY2Z?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07QBXMY2Z&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Anker Nebula Capsule II</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07QBXMY2Z?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07QBXMY2Z&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FAnker+Nebula+Capsule+II%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FAnker+Nebula+Capsule+II%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>HDMIの方はドロップダウンボックスみたいになっていますが、
ここで、<strong>オーディオをオフにする</strong>というのを選択出来る様になっています。
(何故かDisplayPortの方はその選択が出来ない。。。)</p>

<p>ここで、HDMIをつないだ状態で一度この設定を<strong>オーディオをオフにする</strong>にします。
(つないでないと選択も出来ないので一度はつなぐ必要あり。)</p>

<p><img src="https://rcmdnk.com/images/post/20200621_nvidiacp2.png" alt="20200621_nvidiacp2.png" class="pic" /></p>

<p>ここでオフにしてしまうと、DisplayPortから出してる32G1WG4の方がサウンド設定にはない状態のため
音が出なくなりますが、ここは一旦諦めてHDMIも外してスリープに。</p>

<p>再度開始するとサウンド設定に32G1WG4が現れ、ディスプレイから音が出るようになっています。</p>

<p>このままHDMIを繋いでみると、32G1WG4のディスプレイ側から音が出続け、HDMIを外しても大丈夫な状態に。</p>

<p>HDMIの<strong>Capsule II</strong>側は選択出来ない状態になりますが、仕方ないか、という状態。</p>

<p>とりあえずこれでもいいか、と思ってましたが、ちょっと別のことを試してみることに。</p>

<h2 id="解決策2">解決策2</h2>

<p>最初はDisplayPort(3)に繋いでいたわけですが、音声出力が優先されるのは上のものでは?
ということでDisplayPort(1)に繋いでみました。</p>

<p>HDMIの方は一度<strong>Capsule II</strong>に関しても有効にしてあります。</p>

<p>その状態でHDMIをつなぐと、音は32G1WG4のディスプレイの方から出続けました。</p>

<p>この状態だとHDMIの方の<strong>Capsule II</strong>も選択出来る状態で切り替えが可能です。</p>

<p>その後、HDMIを外してみてもちゃんとディスプレイ側から音が出続けます。</p>

<p>試しに、HDMIを接続した状態で、<strong>Capsule II</strong>の方を既定の出力にしてみると、
HDMIをつなぐとCapsule IIから、外すと32G1WG4のディスプレイの方から出る様になり、
期待通りの動作になりました。</p>

<p>もう一つDisplayPort(2)がありますが、こちらに繋いでも同じ状態。
優先度的にも(1)と同じく、何もしなければHDMIよりもDisplayPort(2)の方が優先される様でした。</p>

<p>なのでNVIDIAコントロールパネルの表示順、というわけではなく、DisplayPort(1)、(2)が優先、
その次HDMIで最後がDisplayPort(3)?</p>

<p>これでDisplayPort(3)とかにも繋げてみると今度はうまくいきそう?な感じになってました。</p>

<p>この状態でサウンド設定を見てみると、繋いでないものも<strong>32G1WG4</strong>が残っている状態になっています。</p>

<p><img src="https://rcmdnk.com/images/post/20200621_nvidiacp5.jpg" alt="20200621_nvidiacp5.jpg" class="pic" /></p>

<p>ただ、DisplayPort(3)はやはり何かバグってる感じで、
もう一度DisplayPort(3)につなぎ、HDMIを繋いで<strong>Capsule II</strong>から音を出すようにした所、
DisplayPort(3)に関する<strong>32G1WG4</strong>がサウンド設定から消え、
復帰しなくなりました。(一度スリープで復帰)</p>

<p>なのでとりあえずDisplayPort(3)は無視してDisplayPort(2)に繋いだ状態にすることで
問題なく使えるようになりました。</p>

<h2 id="まとめ">まとめ</h2>

<p>NVIDIA GeForce RTX 2070 superの一番左の出力、DisplayPort(3)は問題がある?
様で、HDMIに別のディスプレイを繋ぐことでDisplayPort(3)から音の出力が出来なくなります。</p>

<p>ハードウェア的な問題、というよりはソフトウェア的な問題な感じですが、
この個体が何か壊れているのか、NVIDIA GeForce RTX 2070 superの問題なのか、
もしくはGeForce系ではよくあることなのか?</p>

<p>ざっと同じ様な症状を探してみた所では同じ問題を抱えてる人は見つかりませんでした。
なので個体の問題かもしれませんが、
多分問題があっても、同じ様な状態を作ることは余りないでしょうし、
特にDisplayPort(1)や(2)は問題ないのでなかなか当たらなそう。</p>

<p>個体の問題なら保証でなんとかならないか、とも思いますが、
そうとも限らないし、
とりあえずDisplayPort(2)に繋いでおけば問題ないので、しばらくはそれで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WSL2は場合によってはWSL1の10倍も速い!?]]></title>
    <link href="https://rcmdnk.com/blog/2020/06/02/computer-windows/"/>
    <updated>2020-06-02T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/06/02/computer-windows</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07F1PWZV6?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07F1PWZV6&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51prjN5W9KL._SS200_.jpg" alt="【WSLオフィシャル販売】Groundswell メンズ Tシャツ/Groundswell Mens Tee" /></a>
</div>

<p>WindowsのWindows Subsystem for Linux (WSL)のバージョン2 (WSL2)が
制しきりシースされ、最新のWindowsアップデートを行うことで
使える様になりました。</p>

<p>ということでちょっと使ってみましたが、プロセスによってはかなり速くなってそうです。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-subysytem-for-linux-wsl" id="markdown-toc-windows-subysytem-for-linux-wsl">Windows Subysytem for Linux (WSL)</a></li>
  <li><a href="#wsl2のインストール" id="markdown-toc-wsl2のインストール">WSL2のインストール</a></li>
  <li><a href="#パフォーマンスチェック" id="markdown-toc-パフォーマンスチェック">パフォーマンスチェック</a>    <ul>
      <li><a href="#ファイルの生成削除" id="markdown-toc-ファイルの生成削除">ファイルの生成削除</a></li>
      <li><a href="#ddでのチェック" id="markdown-toc-ddでのチェック">ddでのチェック</a></li>
      <li><a href="#サブシェルチェック" id="markdown-toc-サブシェルチェック">サブシェルチェック</a></li>
      <li><a href="#サブシェルチェック-2" id="markdown-toc-サブシェルチェック-2">サブシェルチェック 2</a></li>
      <li><a href="#git-clone" id="markdown-toc-git-clone">git clone</a></li>
    </ul>
  </li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-subysytem-for-linux-wsl">Windows Subysytem for Linux (WSL)</h2>

<p>Windows Subysytem for Linux (WSL)はWindows上でLinuxの実行環境を作るシステムです。</p>

<p>以前もサードパーティーなCygwinの様なものはありましたが、
Windowsネイティブで、というところで期待されています。</p>

<p>WSL 1では独自のサブシステムを作ってLinuxの実行環境を作っていました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160605_bashonubuntuonwindows_120_90.jpg" width="120" height="90" alt="20160605_bashonubuntuonwindows_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/">Windowsに採用されたBash (Ubuntu)を試してみる</a></div></li></ul>

<p>WSL 2では仮想マシンでLinuxカーネルを動かしてホントのLinux環境になります。</p>

<p>これによってWSL 1では互換性がなかったLinuxのソフトウェアなども問題なく動かせる様になります。</p>

<p>Windowsでの仮想マシンの利用、というのは以前もありましたが、
WSLではMacとかでターミナルを立ち上げる感覚でシステムごと立ち上げる事ができ
今まで使っていた仮想マシン環境とはかなり感覚的に違うものになっています。</p>

<h2 id="wsl2のインストール">WSL2のインストール</h2>

<p>まずはWindowsをバージョン19041以上にする必要があります。</p>

<p>これはつい先日配信が開始された
May 2020 Updateを入れると入ります。</p>

<p>ただし、今回はその前にInsider Programで入れて19041以上にしてやっています。
(ちょうどWSL2試そうと思ったタイミングで正式リリースが来てしまった。。。)</p>

<p>May 2020 Updateがまだ来て無くてInsider Programを入れたくない場合は
以下に従ってMay 2020 Updateを入手:</p>

<blockquote>
  <p><a href="https://support.microsoft.com/ja-jp/help/4028685/windows-10-get-the-update">Windows 10 May 2020 Update を入手する</a></p>
</blockquote>

<p>ただ、結構問題が起きてる様なので、無理に急いで上げるのは避けたほうが良いかもしれません。</p>

<blockquote>
  <p><a href="https://pc.watch.impress.co.jp/docs/news/1255346.html">「Windows 10 May 2020 Update」でブルースクリーン発生やBluetooth未接続、一部アプリでIME不具合 - PC Watch</a></p>
</blockquote>

<p>WSL2のインストールは以下に従って。</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/wsl/install-win10">Windows Subsystem for Linux (WSL) を Windows 10 にインストールする Microsoft Docs</a></p>
</blockquote>

<p>WSLが入ってない場合はまずPowerShellを管理者権限で起動して(Windowsのスタートボタンを右クリック、から)</p>

<pre><code>PS C:\WINDOWS\system32&gt; dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
</code></pre>

<p>もう一つ、”仮想マシン プラットフォーム” のオプション コンポーネントを有効にするために</p>

<pre><code>PS C:\WINDOWS\system32&gt; dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
</code></pre>

<p>を実行して再起動。</p>

<p>再起動後、WSL2をデフォルトにするため、管理者権限で立ち上げたPowerShellから</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl --set-default-version 2
</code></pre>

<p>を実行します。これで今後入れるLinuxディストリビューションがWSL2として動きます。</p>

<p>すでにUbuntuすでにとかを入れている場合、更新プログラムパッケージを使って更新する必要があります。</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/wsl/wsl2-kernel">WSL 2 Linux カーネルの更新  Microsoft Docs</a></p>
</blockquote>

<p>から更新プログラムパッケージをダウンロードして実行します。</p>

<p>実行後、PowerShellを管理者権限で立ち上げて
インストール済のLinuxディストリビューションをWSL2にします。</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl -l
Linux 用 Windows サブシステム ディストリビューション:
Ubuntu (既定)
PS C:\WINDOWS\system32&gt; wsl --list --verbose
  NAME      STATE           VERSION
* Ubuntu    Running         1
</code></pre>

<p>現在はUbuntuがWSL1で入っています。
これをWSL2に変更。</p>

<p>上で<code>Running</code>になってますが、WSLを立ち上げていても、以下のコマンドを実行すると
強制的に終了するので、
WSL側の作業はちゃんと終了してからやってください。</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl --set-version Ubuntu 2
変換中です。この処理には数分かかることがあります...
WSL 2 との主な違いについては、https://aka.ms/wsl2 を参照してください
変換が完了しました。
PS C:\WINDOWS\system32&gt;
PS C:\WINDOWS\system32&gt; wsl -l -v
  NAME      STATE           VERSION
* Ubuntu    Stopped         2
PS C:\WINDOWS\system32&gt;
</code></pre>

<p>ちなみに恐らくWSLの中で使っているファイルの数とかに関係あるとは思うんですが、
今回上のコマンドをやってみた所、30分近くかかりました。</p>

<p>さらに実行中に他のことしてたら、
多分ファイルのIOが激しいからだと思いますが、
時々不安定になることがあって作業に支障をきたす位でした。</p>

<p>なのでやるなら夜中とか使わない時にやった方が良いと思います。</p>

<p>もし、更新プログラムパッケージを適用してないと</p>

<pre><code>PS C:\WINDOWS\system32&gt; wsl --set-version Ubuntu 2
変換中です。この処理には数分かかることがあります...
WSL 2 を実行するには、カーネル コンポーネントの更新が必要です。詳細については https://aka.ms/wsl2kernel を参照してください
PS C:\WINDOWS\system32&gt;
</code></pre>

<p>的なメッセージが出ます。</p>

<h2 id="パフォーマンスチェック">パフォーマンスチェック</h2>

<p>WSL 2ではファイルIOなどかなり改善されている、ということだったのでちょっとテストしてみました。</p>

<p>テスト環境は</p>

<ul>
  <li>WSLのOS: 18.04.2 LTS (Bionic Beaver)</li>
  <li>CPU: Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz</li>
  <li>Memory: 16696168 kB (/proc/meminfo)</li>
</ul>

<h3 id="ファイルの生成削除">ファイルの生成削除</h3>

<p>以下のコマンドを実行</p>

<pre><code>$ x=$(seq 1 1000)
$ time for i in $x;do rm -f file &amp;&amp; touch file;done
</code></pre>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  real  0m10.056s
  user  0m0.406s
  sys 0m7.922s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  real  0m0.949s
  user  0m0.281s
  sys 0m0.226s
</code></pre>
  </li>
</ul>

<p>WSL 2の方が10倍位速くなっています。</p>

<h3 id="ddでのチェック">ddでのチェック</h3>

<p>以下を実行</p>

<pre><code>$ for i in $(seq 1 10);do sleep 1;dd if=/dev/zero of=/tmp/write$1.tmp ibs=1M obs=1M count=1024 2&gt;&amp;1|grep -v "^1024+0";done
</code></pre>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.30206 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.295579 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.300499 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.295048 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.298456 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.298082 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.297875 s, 3.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.305186 s, 3.5 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 1.39612 s, 769 MB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.297403 s, 3.6 GB/s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.640851 s, 1.7 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.660463 s, 1.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.648255 s, 1.7 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.656519 s, 1.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.65121 s, 1.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.651856 s, 1.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.665299 s, 1.6 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.723154 s, 1.5 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.707145 s, 1.5 GB/s
  1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.711927 s, 1.5 GB/s
</code></pre>
  </li>
</ul>

<p>これはなぜかWSL 1の方が倍くらい速い。</p>

<p>何度かチェックしてみてるんですが変わりません。</p>

<p>上のチェックで大きくWSL 2の方が速かったのにちょっとこの結果の意味はよくわかってません。</p>

<h3 id="サブシェルチェック">サブシェルチェック</h3>

<p>Cygwinとかを使ってて異常に遅いな、と感じるのはサブシェルを立ち上げる様なプロセスが
走っているときでした。</p>

<p>システム上、別のプロセスを立ち上げる様なことが通常のLinuxとかに比べて格段に遅くなるようです。</p>

<p>同様にWSLを使ってみた時もサブシェルを立ち上げると遅くなるな、と感じてました。</p>

<p>ということでそのチェック。</p>

<p>以下を実行</p>

<pre><code>$ x=$(seq 1 10000)
$ j=0; time for i in $x;do j=$(expr $j + 1);done
</code></pre>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  real  0m49.069s
  user  0m2.406s
  sys 0m37.063s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  real  0m5.699s
  user  0m0.855s
  sys 0m1.192s
</code></pre>
  </li>
</ul>

<p>ということでこれもWSL 2の方が10倍位速くなっています。</p>

<p>同じ作業をサブシェルを作らずに行うには以下の様なコマンドが使えます。</p>

<pre><code>$ x=$(seq 1 10000)
$ j=0; time for i in $x;do ((j++));done
</code></pre>

<p>これだと</p>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  real  0m0.043s
  user  0m0.016s
  sys 0m0.031s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  real  0m0.014s
  user  0m0.014s
  sys 0m0.000s
</code></pre>
  </li>
</ul>

<p>WSL 1でも上のWSL 2より格段に速くなっています。速すぎて正確さに欠けますが、
ここでもWSL 2の方が速くはなってます。</p>

<h3 id="サブシェルチェック-2">サブシェルチェック 2</h3>

<p>別のコマンドでチェック</p>

<pre><code>$ x=$(seq 1 1000)
$ time for i in $x;do a="XXXabcXXX";a=$(echo $a|sed "s/abc/def/");done
</code></pre>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  real  0m8.042s
  user  0m0.344s
  sys 0m6.344s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  real  0m1.004s
  user  0m1.158s
  sys 0m0.137s
</code></pre>
  </li>
</ul>

<p>これも約10倍くらいの差。</p>

<p>同様のことをサブシェルなしだと</p>

<pre><code>$ x=$(seq 1 1000)
$ time for i in $x;do a=XXXabcXXX;a=${a/abc/def};done
</code></pre>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  real  0m0.006s
  user  0m0.016s
  sys 0m0.000s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  real  0m0.003s
  user  0m0.001s
  sys 0m0.002s
</code></pre>
  </li>
</ul>

<p>ということで、WSL 2の方が速い、ですが、こういったことは通常でも
なるべくサブシェルを使わずにやった方が圧倒的に速くなります。</p>

<h3 id="git-clone">git clone</h3>

<p>ファイルの書き込みを多く行う<code>git clone</code>とかが速くなった、という話を見たのでチェック。</p>

<pre><code>$ repo=git@github.com:rcmdnk/rcmdnk.github.io.git
$ (time git clone $repo &gt;&amp;/dev/null) 2&gt;&amp;1|tr '\n' ' '|tr '\t' ' '
</code></pre>

<p>自分のレポジトリで大きそうなもの(このブログのレポジトリ)でチェック。
サイズはclone後に337MBほどでした。</p>

<ul>
  <li>
    <p>WSL 1</p>

    <pre><code>  real 0m47.073s user 0m3.891s sys 0m3.453s
  real 0m26.106s user 0m2.859s sys 0m2.766s
  real 0m27.844s user 0m2.828s sys 0m3.000s
  real 0m26.955s user 0m2.844s sys 0m3.078s
  real 0m38.123s user 0m3.156s sys 0m2.922s
  real 1m0.090s user 0m3.969s sys 0m3.750s
  real 0m43.652s user 0m3.313s sys 0m3.297s
  real 0m30.926s user 0m2.891s sys 0m3.297s
  real 0m25.048s user 0m3.156s sys 0m2.797s
  real 0m23.092s user 0m2.813s sys 0m2.391s
</code></pre>
  </li>
  <li>
    <p>WSL 2</p>

    <pre><code>  real 0m26.673s user 0m3.694s sys 0m1.374s
  real 0m26.953s user 0m4.328s sys 0m1.648s
  real 0m33.887s user 0m4.457s sys 0m2.148s
  real 0m53.725s user 0m5.659s sys 0m2.902s
  real 1m9.217s user 0m5.338s sys 0m2.212s
  real 0m30.451s user 0m3.649s sys 0m1.246s
  real 0m38.896s user 0m4.234s sys 0m1.693s
  real 1m0.555s user 0m4.976s sys 0m2.448s
  real 0m18.706s user 0m4.446s sys 0m1.277s
  real 0m17.233s user 0m3.457s sys 0m0.910s
</code></pre>
  </li>
</ul>

<p>ムラがありますが全体的にはWSL 2の方が速い。
ただ恐らくネットワーク的なムラが原因なのかな、という感じもあるので余り
意味のある結果ではないかもしれません。</p>

<h2 id="まとめ">まとめ</h2>

<p>ということで、軽くパフォーマンスを見てみた所、
差があるところで10倍くらいWSL 2の方が速くなっていました。</p>

<p>WSL 2が使える環境であれば特にデメリットも無いと思うのでWSL 2に上げた方が良いと思います。</p>

<p>すでに使ってるものを2に上げるのはちょっと時間がかかるので時間に余裕がある時にやったほうが良いですが。</p>

<p>ちょっと性能が低いPCだとWSL 1だと立ち上げるだけでも結構時間がかかって余り使いたくないものだったかもしれませんが、
WSL 2なら使えるかもしれません。</p>

<p>その他で気づいたことはまだ無いですが、今は結構使ってるのでまた
なにか気づいたら書いていこうと思います。</p>

<p>ddの結果は謎。</p>

<p>ちなみにターミナルとしてはWindows Terminalを使おうと思ってたんですが
ちょっと使いづらいところがあったので今はwslttyを使ってます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2020/05/31/computer-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20200531_profiles_120_90.png" width="120" height="90" alt="20200531_profiles_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2020/05/31/computer-ubuntu-bash/">Windows Terminalを試す</a></div></li></ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Package Manager?]]></title>
    <link href="https://rcmdnk.com/blog/2020/05/23/computer-windows-chocolatey-packagemanagement-powershell/"/>
    <updated>2020-05-23T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/05/23/computer-windows-chocolatey-packagemanagement-powershell</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B013I9SWMC?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B013I9SWMC&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51m%2BteN-t7L._SS200_.jpg" alt="Microsoft Windows 10 Home April 2018 Update適用 32bit/64bit 日本語版【最新】|オンラインコード版" /></a>
</div>

<p>Windowsの新しいパッケージマネージャー、
<a href="https://devblogs.microsoft.com/commandline/windows-package-manager-preview/">Windows Package Manager</a>
というものが開発中でプレビュー版として配布されるようになったそうです。</p>

<p>以前PackageManagementというものがあったはずなんですが、どうなったのか。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-package-manager" id="markdown-toc-windows-package-manager">Windows Package Manager</a></li>
  <li><a href="#packagemanagement" id="markdown-toc-packagemanagement">PackageManagement…?</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-package-manager">Windows Package Manager</h2>

<p>Windows Package ManagerはOSSになっていてGitHubでソースも見ることが出来ます。</p>

<div class="github-widget" data-repo="microsoft/winget-cli"></div>
<div class="github-widget" data-repo="microsoft/winget-pkgs"></div>

<p><a href="https://docs.microsoft.com/ja-jp/windows/package-manager/">Windows パッケージ マネージャー</a></p>

<p><a href="https://www.reddit.com/r/sysadmin/comments/gmrwxi/windows_package_manager_wingetexe/">📢 Windows Package Manager  winget.exe : sysadmin</a></p>

<p>使いたい場合は
Windowsの<a href="https://insider.windows.com/ja-jp/">Insider</a>版を入れると
使える様になるとのことです。</p>

<p>PowerShellとかで</p>

<pre><code>PS &gt; winget instll firefox
</code></pre>

<p>とかでアプリやツールがインストールできる様になります。</p>

<p>Microsoft Storeに行くと<strong>アプリインストーラー</strong>というのがあって、これをインストールすると
使える様になるのですが、
このアプリ自体は以前から存在していて既にインストールされてるかもしれません。
以前のこれが入っていても<code>winget</code>は使えません。</p>

<p>Insiderを入れてるとプレビュー版の<strong>アプリインストーラー</strong>がインストール出来るようになるので、
Insiderにしてから再度<strong>アプリインストーラー</strong>を入れると<code>winget</code>が使える様になります。</p>

<p>これをインストールしてもInsider版にしておかないと使えるようにはならないみたいです。
(PowerShellで<code>winget</code>コマンドが使えない。)</p>

<p>直接
<a href="https://github.com/microsoft/winget-cli/releases">Releases</a>
から取れる、とも書いてあるんですが、今現在ここにある
<strong>http://microsoft.desktopappinstaller_8wekyb3d8bbwe.appxbundle/</strong>
がリンク切れになってます。</p>

<p>自分でビルドするのも準備が面倒なのでやってません。</p>

<p>Microsoftのネイティブなパッケージマネージャー、コマンドラインツール、
ということで期待されていて、
特にマルウェアなどの危険なパッケージを排除し、信頼性の高いものにしようとしているみたいです。</p>

<p>その辺りでサードパーティーなChocolateyなどとの違いを見せていこうとしているようです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20131122_chocolatey_120_90.jpg" width="120" height="90" alt="20131122_chocolatey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/07/30/computer-windows-chocolatey/">Chocolateyのアップデート</a></div></li></ul>

<p>まだ開発は途上段階、といった感じで
パッケージをアップデートする、などは出来なかったりするみたいです。</p>

<p><a href="https://github.com/microsoft/winget-cli/issues/120">–update · Issue #120 · microsoft/winget-cli</a></p>

<h2 id="packagemanagement">PackageManagement…?</h2>

<p>と、サードパーティー製のものは今もある、という話ですが、
実はネイティブなパッケージマネージャーも以前出しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/1849756570?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=1849756570&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51ITdNrjmqL._SS90_CR0,0,120,90_.jpg" alt="Deliciously Chocolatey: 100 Cocoa-rich Recipes for Bakes, Cakes and Chocolate Treats" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/03/11/computer-windows-chocolatey-packagemanagement/">Windows 10でPackageManagement (OneGet) + Chocolateyでアプリ管理</a></div></li></ul>

<p>元々<a href="https://github.com/OneGet/oneget">OneGet</a>と言われていたものが
PackageManagementというプロジェクト?となりました。</p>

<p><a href="https://docs.microsoft.com/ja-jp/powershell/module/packagemanagement/?view=powershell-6">PackageManagement</a></p>

<p><a href="https://ja.wikipedia.org/wiki/PackageManagement">PackageManagement - Wikipedia</a></p>

<p>これを使って</p>

<pre><code>PS &gt; Install-Package Firefox
</code></pre>

<p>とかやるとインストールが出来るようになってました。
このコマンドは最初からインストールされています。</p>

<p>PackageManagementはCoholateyなどのレポジトリも使うことが出来、
それらサードパーティ製のレポジトリのラッパーツール的な使い方も出来ました。</p>

<p>なのでこれを使ってたんですが、いつのまにやらコマンドは使えるものの、</p>

<p>一方、Chocolateyの方は使えたのでそちらを使ってました。</p>

<p>で、今回こんな話が出てきたので、PackageManagementのアップデートか?
と思ったらどうやら全く別のものな模様。</p>

<p>最近のPackageManagementをちょっと探ってみると、どうやら一応使えてる人は使えてるみたい?
(でもやっぱり手元でやってみるとうまくいかない。。。)</p>

<p><a href="https://github.com/oneget/oneget">レポジトリ</a>
の方は1ヶ月位前にはアップデートがありますが、リリースは1年くらい前が最後。</p>

<p>なのでこちらは無くなる感じ?</p>

<p>あと、今回のWindows Package Managerの話が出てくる所で<code>OneGet</code>という単語は出てくるんですが、
<code>PackageManagement</code>という単語は見かけませんでした。</p>

<p>PackageManagementというものが認知度が低かったのか、ほぼなかったことにされそうな感じ?</p>

<p>PackageManagementがそもそもなんで<code>Management</code>という名前がツールとして微妙だな、と思ってましたが、
新しいのは<code>Manager</code>とそれっぽい感じ。
ただ、Widnows Package Managerとはまたそのままだな、と。</p>

<h2 id="まとめ">まとめ</h2>

<p>ということで、まだ実際に触ってないのですが、PackageManagementは?と思ったので書いておきました。</p>

<p>WSL2とかもあるので、Insider入れて色々と見てみても良いかな、と思い始めた今日このごろ。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 10でスタートメニューが開かなくなったときの対処法]]></title>
    <link href="https://rcmdnk.com/blog/2020/04/22/computer-windows/"/>
    <updated>2020-04-22T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/04/22/computer-windows</id>
    <content type="html"><![CDATA[<p>Windowsを使っててたまにスタートメニューをクリックしてもWidnowsボタンを押しても
スタートメニューが開かなくなることが良くあります。</p>

<p>良くあるのがそもそも良くないんですが、今までとりあえず再起動で直してたものが
その場で治せる様になったのでその方法について。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#startmenuexperiencehostexe" id="markdown-toc-startmenuexperiencehostexe">StartMenuExperienceHost.exe</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="startmenuexperiencehostexe">StartMenuExperienceHost.exe</h2>

<p>現在のWindows 10では<strong>StartMenuExperienceHost.exe</strong>
というプロセスがスタートメニューを管理しています。</p>

<p>以前までは<strong>ShellExperienceHost.exe</strong>というプロセスでタスクバーなどとまとめて管理されてましたが、
スタートメニューの部分だけが<strong>StartMenuExperienceHost.exe</strong>に分離されました。</p>

<blockquote>
  <p><a href="https://forest.watch.impress.co.jp/docs/news/1165022.html">スタートメニューのプロセスが独立、信頼性向上へ ～「Windows 10 19H1」Build 18317 - 窓の杜</a></p>
</blockquote>

<p>これは2019年のMay Updateで配布されているとのことです。</p>

<p>なので今スタートメニューがフリーズする、というようなことが起こると、それ以外の部分は
通常通り動いています。</p>

<p>タスクバーやスタートボタンすぐ下の検索ボタンなどは生きている状態。</p>

<p>この状態でスタートメニューを押しても反応しなくなった場合、
タスクマネージャーを開いてこれを一度タスクを終了させて強制的に再起動させることで治ることがあります。</p>

<p><strong>StartMenuExperienceHost.exe</strong>は<strong>プロセス</strong>タブではなくて<strong>詳細</strong>のタブに行くとあります。</p>

<p><img src="https://rcmdnk.com/images/post/20200422_startmenuexperiencehost.png" alt="20200422_startmenuexperiencehost.png" class="pic" /></p>

<p>右クリックして<strong>タスクの終了</strong>、をクリックすると一度終了しますが、
このサービスは自動的にすぐに再起動します。</p>

<p>それからスタートボタンを押してみると通常通り使える様になります。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim_ahkでクラスを使うようにしたり色々アップデートしてみた]]></title>
    <link href="https://rcmdnk.com/blog/2020/02/03/computer-windows-autohotkey/"/>
    <updated>2020-02-03T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/02/03/computer-windows-autohotkey</id>
    <content type="html"><![CDATA[<p>Windowsでエディタ以外の場所でも<code>h</code>/<code>j</code>/<code>k</code>/<code>l</code>で左下上右に移動したり
するようにする
AutoHotkey製<a href="https://github.com/rcmdnk/vim_ahk">vim_ahk</a>
ですが、
Issueなどももらったりして手をかけてみようと思ってたまま結構放置してしまてましたが、
ちょっと見直しをしてみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#vim_ahk" id="markdown-toc-vim_ahk">vim_ahk</a></li>
  <li><a href="#クラスの導入" id="markdown-toc-クラスの導入">クラスの導入</a></li>
  <li><a href="#v060での新しい点" id="markdown-toc-v060での新しい点">v0.6.0での新しい点</a></li>
  <li><a href="#autohotkeyの色々" id="markdown-toc-autohotkeyの色々">AutoHotkeyの色々</a>    <ul>
      <li><a href="#関数" id="markdown-toc-関数">関数</a></li>
      <li><a href="#ラベルと関数" id="markdown-toc-ラベルと関数">ラベルと関数</a></li>
      <li><a href="#と" id="markdown-toc-と"><code>=</code>と<code>==</code></a></li>
      <li><a href="#文字列連結" id="markdown-toc-文字列連結">文字列連結</a></li>
      <li><a href="#const的なものを作るのはちょっと面倒" id="markdown-toc-const的なものを作るのはちょっと面倒">const的なものを作るのはちょっと面倒</a></li>
      <li><a href="#クラス" id="markdown-toc-クラス">クラス</a></li>
      <li><a href="#静的クラス変数が作られるタイミング" id="markdown-toc-静的クラス変数が作られるタイミング">静的(クラス)変数が作られるタイミング</a></li>
      <li><a href="#参照カウント" id="markdown-toc-参照カウント">参照カウント</a></li>
      <li><a href="#guiのv-variable" id="markdown-toc-guiのv-variable">Guiのv Variable</a></li>
      <li><a href="#g-label" id="markdown-toc-g-label">g-label</a></li>
      <li><a href="#a_guicontrolを持つためにはg-labelが必要" id="markdown-toc-a_guicontrolを持つためにはg-labelが必要">A_GuiControlを持つためにはg-labelが必要</a></li>
      <li><a href="#guiclose-guiescapeにクラスメソッドを" id="markdown-toc-guiclose-guiescapeにクラスメソッドを">GuiClose, GuiEscapeにクラスメソッドを</a></li>
      <li><a href="#settimerにマイナスの値" id="markdown-toc-settimerにマイナスの値">SetTimerにマイナスの値</a></li>
    </ul>
  </li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="vim_ahk">vim_ahk</h2>

<div class="github-widget" data-repo="rcmdnk/vim_ahk"></div>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/08/03/computer-windows-autohotkey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130723_AutoHotKey_120_90.jpg" width="120" height="90" alt="20130723_AutoHotKey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/08/03/computer-windows-autohotkey/">Vim以外でVimする: Windows+AutoHotkey編</a></div></li></ul>

<p>出来ることなどは上記などを参照。</p>

<p>起動すると、メモ帳などで<i class="key">Esc</i>を押すと<strong>ノーマルモード</strong>になって
<code>h</code>/<code>j</code>/<code>k</code>/<code>l</code>で左下上右に移動したり、<code>yy</code>でラインコピー、<code>p</code>でペースト、とか出来ます。</p>

<p>擬似的なコマンドモードとか検索とかもなんとなしに出来る様にしてますが、
もしノーマルモードでの動きとか、Vimにあってvim_ahkにないものであったらうれしいもの、
とかあったらIssueとか出してもらうと嬉しいです。</p>

<h2 id="クラスの導入">クラスの導入</h2>

<blockquote>
  <p><a href="https://github.com/rcmdnk/vim_ahk/issues/34">Split script into logically seperated multiple files · Issue #34 · rcmdnk/vim_ahk</a></p>
</blockquote>

<p>元々はファイルを小分けにしたい、というIssueが来ていてどうしたものかと思ってたところからです。</p>

<p>最初は小さなスクリプトだったこともあり、また、AutoHotkeyのスクリプトとしてそれだけ
あると走る、という方が嬉しいかな、と思って一つのファイルで管理していたんですが、
結構大きくなってきたので分けたほうが色々見やすいかな、と言う状態に。</p>

<p>加えて、関数とかラベルとか結構ごちゃごちゃになっていたので整理したい、というところも。</p>

<p>それでどういうふうに分けたら良い中、と思ってたんですが、
そのまま分割していくだけとかだと余り嬉しくもないので、
いっそ色々書き直そうと思ってクラスとかを使って作り直すことにしました。</p>

<p>そうすればクラスごとにファイル分けたりすれば良いので。</p>

<p>というわけで一番上のスクリプトは</p>

<figure class="code"><figcaption><span>vim.ahk </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="c1">; Auto-execute section</span>
</span><span class="line"><span class="n">Vim</span> <span class="o">:=</span> <span class="n">new</span> <span class="n">VimAhk</span><span class="p">()</span>
</span><span class="line"><span class="nb">Return</span>
</span><span class="line">
</span><span class="line"><span class="nb">#Include</span> <span class="nv">%A_LineFile%</span>\<span class="o">..</span>\<span class="n">lib</span>\<span class="n">vim_ahk</span><span class="o">.</span><span class="n">ahk</span>
</span></code></pre></td></tr></table></div></figure>

<p>といった感じの簡単な形にして、
<strong>lib\vim_ahk.ahk</strong>にある
<code>VimAhk</code>クラスを中心に動くようにしました。</p>

<p>色々変更する中で気になったこととか知ったこととかがあったので、
ちょっとまとまってないかもしれませんがメモしておきたいと思います。</p>

<h2 id="v060での新しい点">v0.6.0での新しい点</h2>

<p>コード構成は結構変わりましたが、ユーザー側としてすぐわかる機能としては、
vim_ahkを有効にするかどうかを決めるアプリケーションリストに関して、
ウィンドウのタイトルでの指定がこれまでは完全に一致するものだけでしたが、
その文字列を含む、だったり正規表現も使える様にしました。</p>

<p>vim_ahkのトレイアイコンの右クリックから<code>VimMenu</code><i class="fa fa-arrow-right"></i><code>Settings</code>に行って、
<code>SetTitleMatchMode</code>という項目があるので、これの最初の項を
<code>2</code>にすると、ウィンドウタイトルに関してそれを含むもの全てをマッチする様になります。</p>

<p>これまでと同じ動作は<code>3</code>にしたときで、ウィンドウタイトルが完全一致したものだけを取っていました。</p>

<p><code>ahk_exe notepad.exe</code>みたいにClassやProcessを指定する場合は関係ありません。</p>

<p>これは、Windows 10でのOneNoteとかが、Process名は<code>ApplicationFrameHost.exe</code>というもので
他のウィンドウズアプリと同じなため、まとめてこれを指定するのは嫌だな、という点があり
ウィンドウタイトルを指定していたのですが、
これが今は<code>rcmdnk - OneNote</code>みたいにユーザー名を含むようなタイトルになっていました。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/vim_ahk/issues/37">doesn’t seem to work on onenote on windows 10 · Issue #37 · rcmdnk/vim_ahk</a></p>
</blockquote>

<p>これによってOneNote上ではデフォルトでは有効にならないような状態でした。</p>

<p>勿論、自分でタイトルを調べて<code>Settings</code>でそのタイトルを入れれば有効になるのですが、
上のような<code>SetTitleMatchMode</code>の設定があったので導入してみました。</p>

<p>これで、例えばブラウザとかで特定のページに関して、とかもやりやすくなるかもしれません。</p>

<h2 id="autohotkeyの色々">AutoHotkeyの色々</h2>

<p>今まで書いたものとかについては以下から。</p>

<p><a href="https://rcmdnk.com/blog/tags/autohotkey/">/blog/tags/autohotkey/</a></p>

<p>ちなみに今使っているのはAutoHotkey_Lのバージョン1の方です。</p>

<p>使っている今のバージョンはVersion 1.1.31.00。</p>

<blockquote>
  <p><a href="https://www.autohotkey.com/">AutoHotkey</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/Lexikos/AutoHotkey_L">Lexikos/AutoHotkey_L: AutoHotkey - macro-creation and automation-oriented scripting utility for Windows.</a></p>
</blockquote>

<p>ドキュメントを見るとV2の方もかなりできてる様ですが、根本的な言語体制が変わってる感じになってるので
移行するとしたら結構1から書き直さないといけない部分も出てくるかもしれません。</p>

<p>今回変更した中で色々調べたりもしたので気になった点とかをまとめておきます。</p>

<h3 id="関数">関数</h3>

<blockquote>
  <p><a href="https://www.autohotkey.com/docs/Functions.htm">Functions - Definition &amp; Usage  AutoHotkey</a></p>
</blockquote>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">MyFunc</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">&quot;abc&quot;</span><span class="p">){</span>
</span><span class="line">  <span class="nb">MsgBox</span> <span class="nv">%x%</span> <span class="nv">%y%</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>な感じで定義します。
引数にはデフォルトの値を与えることも出来ます。</p>

<p>関数を作るときには<code>()</code>を関数名と離して<code>MyFunc ()</code>みたいにするとエラーになってしまうので
必ずくっつける必要があります。</p>

<p>関数は引数による違う関数などは作れず、そのようなものを作った場合はDuplicationエラーになります。</p>

<p>引数に<code>func(x="abc", y="efg")</code>の様に引数名を指定した利用は出来ません。
ただ、このようなことをしてもエラーにならないのですが、
それは<code>x="abc"</code>というのが<code>x</code>と<code>"abc"</code>が等しいかどうか、という式として認識されるので、
この場合はFalseで<code>0</code>が入力されるだけです。</p>

<h3 id="ラベルと関数">ラベルと関数</h3>

<p>AutoHotkeyではラベルという形で</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nl">MyLabel:</span>
</span><span class="line">  <span class="nb">MsgBox</span> <span class="s">&quot;This is MyLabel&quot;</span>
</span><span class="line"><span class="nb">Return</span>
</span></code></pre></td></tr></table></div></figure>

<p>というものが作れ、これを</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span>  <span class="nb">Goto</span><span class="p">,</span> <span class="n">MyLabel</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいな感じで呼ぶことが出来ます。
AutoHotkeyではキーバインドを</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nl">a::</span>
</span><span class="line">  <span class="nb">MsgBox</span> <span class="s">&quot;a&quot;</span>
</span><span class="line">  <span class="nb">Goto</span><span class="p">,</span> <span class="n">MyLabel</span>
</span><span class="line">  <span class="n">MyFunc</span><span class="p">(</span><span class="s">&quot;myfunc&quot;</span><span class="p">)</span>
</span><span class="line"><span class="nb">Return</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいに設定していきますが、同じような雰囲気でラベルというものを作って
作業をまとめたりしていました。</p>

<p>関数やらオブジェクトやらが後から追加されて、より近代的な雰囲気の書き方ができる様になった感じで、
基本的にラベルでやっていたことは関数で置き換えが可能です。</p>

<p>その際に注意することとしては、ラベルの中では変数がグローバルで扱われるのに対して、
関数の中では変数がローカライズされる点。
必要な場合は<code>globl</code>を使って呼び込む必要があります。</p>

<h3 id="と"><code>=</code>と<code>==</code></h3>

<p><code>if</code>とかで比較する際、AutoHotkeyだと同じかどうか判断するのに<code>=</code>と<code>==</code>の両方を使えます。</p>

<blockquote><p>The == operator behaves identically to = except when either of the inputs is not numeric, in which case == is always case sensitive and = is always case insensitive (the method of insensitivity depends on StringCaseSense).</p><footer><strong>Variables and Expressions - Definition &amp; Usage | AutoHotkey</strong> <cite><a href="https://www.autohotkey.com/docs/Variables.htm">www.autohotkey.com/docs/&hellip;</a></cite></footer></blockquote>

<p>ということで、ほとんど同じですが、文字列比較の場合に<code>==</code>だと大文字小文字を区別し、<code>=</code>だと区別しない、ということです(ただし、<a href="https://www.autohotkey.com/docs/commands/StringCaseSense.htm">StringCaseSense</a>の設定による)。</p>

<p>敢えて大文字小文字を区別しないで比較したい、ということもあるかもしれませんが、
<a href="https://www.autohotkey.com/docs/commands/StringLower.htm">StringLower / StringUpper</a>
という変換関数もあるので、それで変換して<code>==</code>で比較するようにした方が見やすくはなると思います。</p>

<h3 id="文字列連結">文字列連結</h3>

<p>文字列を連結するときは<code>.</code>でつなげるかそのまま繋げるかで出来ます。</p>

<blockquote>
  <p><a href="https://www.autohotkey.com/docs/Variables.htm#concat">Variables and Expressions - Definition &amp; Usage  AutoHotkey</a></p>
</blockquote>

<blockquote>
  <p>When the dot is omitted, there should be at least one space between the items to be merged.</p>
</blockquote>

<p>とあるんですが、実際には</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">x</span> <span class="o">:=</span> <span class="s">&quot;abc&quot;</span>
</span><span class="line"><span class="n">y</span> <span class="o">:=</span> <span class="s">&quot;xxx&quot;</span><span class="n">x</span>
</span><span class="line"><span class="nb">MsgBox</span> <span class="o">%</span> <span class="n">y</span>
</span></code></pre></td></tr></table></div></figure>

<p>としてもちゃんと<code>y</code>は<code>xxxabc</code>となります。(バグ?か記述の間違え?)</p>

<p><code>.</code>を使う場合には両側にスペースが無いとうまくいきません。</p>

<p>通常どちらでも構わないんですが、後ろの文字列が<code>++</code>か<code>--</code>で始まる場合には
それ自体が特別な意味を持ってしまうので<code>.</code>を使って連結する必要があります。</p>

<h3 id="const的なものを作るのはちょっと面倒">const的なものを作るのはちょっと面倒</h3>

<blockquote>
  <p><a href="https://autohotkey.com/board/topic/90774-is-it-possible-to-create-constant/">Is it possible to create constant? - Ask for Help - AutoHotkey Community</a></p>
</blockquote>

<h3 id="クラス">クラス</h3>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">x</span> <span class="o">:=</span> <span class="n">new</span> <span class="n">MyClass</span><span class="p">(</span><span class="s">&quot;foo&quot;</span><span class="p">)</span>
</span><span class="line"><span class="n">x</span><span class="o">.</span><span class="n">Show</span><span class="p">()</span>
</span><span class="line"><span class="nb">Return</span>
</span><span class="line">
</span><span class="line"><span class="n">class</span> <span class="n">MyClass</span><span class="p">{</span>
</span><span class="line">  <span class="nb">static</span> <span class="n">ClassVar</span> <span class="o">:=</span> <span class="s">&quot;class variable&quot;</span>
</span><span class="line">  <span class="n">InstanceVar</span> <span class="o">:=</span> <span class="s">&quot;instance variable&quot;</span>
</span><span class="line">
</span><span class="line">  <span class="n">__New</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">){</span>
</span><span class="line">    <span class="n">this</span><span class="o">.</span><span class="n">Name</span> <span class="o">:=</span> <span class="n">name</span>
</span><span class="line">    <span class="nb">MsgBox</span> <span class="o">%</span> <span class="s">&quot;New MyClass: &quot;</span> <span class="n">this</span><span class="o">.</span><span class="n">Name</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">__Delete</span><span class="p">(){</span>
</span><span class="line">    <span class="nb">MsgBox</span> <span class="o">%</span> <span class="s">&quot;Deleting &quot;</span> <span class="n">this</span><span class="o">.</span><span class="n">Name</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">Show</span><span class="p">(){</span>
</span><span class="line">    <span class="nb">MsgBox</span> <span class="o">%</span> <span class="s">&quot;name: &quot;</span> <span class="n">this</span><span class="o">.</span><span class="n">name</span> <span class="s">&quot;, ClassVar: &quot;</span> <span class="n">MyClass</span><span class="o">.</span><span class="n">ClassVar</span> <span class="s">&quot;, InstanceVar: &quot;</span> <span class="n">this</span><span class="o">.</span><span class="n">InstanceVar</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいな感じで<code>class &lt;Class Name&gt;{...}</code>と定義します。</p>

<blockquote>
  <p><a href="https://www.autohotkey.com/docs/Objects.htm">Objects - Definition &amp; Usage  AutoHotkey</a></p>
</blockquote>

<h3 id="静的クラス変数が作られるタイミング">静的(クラス)変数が作られるタイミング</h3>

<p>クラス内で<code>static</code>を使ってクラス変数を作る際、これらは
auto-execute section(最初のReturnがある部分までのところ)
が実行されるより前に定義されます。</p>

<p>そこでは<code>static x := A_AppData . "\foo"</code>とか表現やAutoHotkeyの内部変数は使うことは出来ますが、
直前に定義したものに対して<code>static y: = x . "\bar</code>とかは出来ません。(これは<code>x</code>が定義されてないので<code>\bar</code>となる)。</p>

<blockquote><p>Static declarations are evaluated only once, before the auto-execute section, in the order they appear in the script. Each declaration stores a value in the class object. Any variable references in Expression are assumed to be global.</p><footer><strong>Objects - Definition &amp; Usage AutoHotkey</strong> <cite><a href="https://www.autohotkey.com/docs/Objects.htm#Reference_Counting">www.autohotkey.com/docs/&hellip;</a></cite></footer></blockquote>

<h3 id="参照カウント">参照カウント</h3>

<p>AutoHotkeyでデストラクタ(<code>__Delete</code>)を使うようなことは余りないかもしれませんが、
これがいつ呼ばれるか、というと
AutoHotkeyでは<code>delete</code>みたいなものはなく、消すためには
全ての参照しているものがなくなったときに消されるような参照カウントという方法を用いています。</p>

<figure class="code"><figcaption><span>vim.ahk </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">x</span> <span class="o">:=</span> <span class="n">new</span> <span class="n">MyClass</span><span class="p">(</span><span class="s">&quot;foo&quot;</span><span class="p">)</span>
</span><span class="line"><span class="n">y</span> <span class="o">:=</span> <span class="n">x</span>
</span><span class="line"><span class="n">x</span> <span class="o">:=</span>
</span><span class="line"><span class="n">y</span> <span class="o">:=</span>
</span><span class="line"><span class="nb">Return</span>
</span><span class="line">
</span><span class="line"><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>

<p>とかすると、<code>x:=</code>とした時点では<code>y</code>が最初に作ったMyClassのインスタンスを見ているので消えませんが、
<code>y :=</code>としてしまうと最初に作ったものを見ているものが居なくなるのでこの時点で<code>__Delete()</code>が走ります。</p>

<p>ただし、<code>SetTimer</code>とかでクラス内の変数とかを使ってるとちょっと振る舞いが予期せぬことがあるのでちょっと注意。</p>

<blockquote>
  <p><a href="https://www.autohotkey.com/boards/viewtopic.php?style=1&amp;f=86&amp;t=1434&amp;start=200">Suggestions on documentation improvements - Page 11 - AutoHotkey Community</a></p>
</blockquote>

<blockquote>
  <p><a href="https://www.autohotkey.com/boards/viewtopic.php?f=5&amp;t=24478">Question about __Delete() behavior in class with timer - AutoHotkey Community</a></p>
</blockquote>

<h3 id="guiのv-variable">Guiのv Variable</h3>

<p>Guiのテキストボックスとかいろいろな要素にはv variableという値を設定して、
<a href="https://www.autohotkey.com/docs/commands/Gui.htm#Submit">Gui Submit</a>
した時にその値を設定したv variableに代入するようにしたり、
また、v variableを使ってGuiControlでその要素を指定したりすることもできます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/11/07/computer-windows-autohotkey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171107_ahkguiinput0_120_90.png" width="120" height="90" alt="20171107_ahkguiinput0_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/07/computer-windows-autohotkey/">AutoHotkeyでのGUI操作</a></div></li></ul>

<p><a href="https://www.autohotkey.com/docs/commands/Gui.htm#Events">Gui - Syntax &amp; Usage  AutoHotkey</a></p>

<p>この値は</p>

<pre><code>Gui, Add, Checkbox, xm vMyCheckBox, My CheckBox
</code></pre>

<p>の様に<code>v</code> + <code>&lt;name&gt;</code>で定義します。(<code>v</code>は大文字でもOK)</p>

<p>このv variableはグローバル変数か静的変数である必要があるので、
関数内とかで使う際には<code>global</code>とかで呼び込む必要があります。</p>

<p>そうでないと</p>

<pre><code>a control's variable must be global or static the following variabl name contains an iliegal character
</code></pre>

<p>と怒れれます。</p>

<p>関数内で<code>static</code>を使って変数を定義しても使えますが、
<code>Gui Submit</code>を使って変数を取得したい場合には別の場所で行なう事になるので
<code>static</code>をうまく使うことは出来ないかと思ってます。</p>

<p><code>global</code>を使いたくないな、と思って、クラスの静的変数を使えないものかと、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">class</span> <span class="n">MyClass</span><span class="p">{</span>
</span><span class="line">  <span class="nb">static</span> <span class="n">var</span>
</span><span class="line">  <span class="n">MyFunc</span><span class="p">(){</span>
</span><span class="line">    <span class="o">...</span>
</span><span class="line">    <span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Checkbox</span><span class="p">,</span> <span class="o">%</span> <span class="s">&quot;xm v&quot;</span> <span class="n">MyClass</span><span class="o">.</span><span class="n">__Class</span> <span class="s">&quot;.var&quot;</span><span class="p">,</span> <span class="n">My</span> <span class="n">CheckBox</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいにすると</p>

<pre><code>The following variable name contains an illegal character
</code></pre>

<p>と怒られます。<code>MyClass.__Class</code>で<code>MyClass</code>という名前を呼んでるだけなので、この部分は
<code>vMyClass.var</code>で、<code>MyClass.var</code>というのはクラス変数である意味グローバルに見えるものなので
使えるかな、と思ったのですが、
v variableに<code>.</code>を含む文字列を使えないためエラーになってしまうようです。</p>

<p>ということで、色々調べてみたんですが、今の所、v variableにglobalでない値を入れて操作するのは
難しいかな、という感じでした。</p>

<h3 id="g-label">g-label</h3>

<p>v variableと似たようなもので、Guiの要素に対してつける<a href="https://www.autohotkey.com/docs/commands/Gui.htm#label">g-label</a>
というものがあります。</p>

<p>v variable同様<code>g</code> + <code>&lt;name&gt;</code>で定義します。(<code>g</code>は大文字でもOK)</p>

<p>g-labelはその要素をクリックしたときや、要素の値が変化したときなどに
実行する動作を定義します。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="o">...</span>
</span><span class="line"><span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Text</span><span class="p">,</span> <span class="n">gOpenURL</span> <span class="n">cBlue</span><span class="p">,</span> <span class="n">Link</span>
</span><span class="line"><span class="o">...</span>
</span><span class="line">
</span><span class="line"><span class="nl">OpenURL:</span>
</span><span class="line">  <span class="nb">Run</span> <span class="n">https</span><span class="o">://</span><span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいにすれば、<code>Link</code>というテキストをクリックするとWebページが開かれます。</p>

<p>関数ももし引数なしの関数であれば同じ様に
あてられます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="o">...</span>
</span><span class="line"><span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Text</span><span class="p">,</span> <span class="n">gOpenURL</span> <span class="n">cBlue</span><span class="p">,</span> <span class="n">Link</span>
</span><span class="line"><span class="o">...</span>
</span><span class="line">
</span><span class="line"><span class="n">OpenURL</span><span class="p">(){</span>
</span><span class="line">  <span class="nb">Run</span> <span class="n">https</span><span class="o">://</span><span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>引数ありの関数を使いたい場合、
<a href="https://www.autohotkey.com/docs/objects/Functor.htm#BoundFunc">BoundFunc Object</a>
を使って<code>GuiControl</code>で後から加える形にします。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="o">...</span>
</span><span class="line"><span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Text</span><span class="p">,</span> <span class="n">cBlue</span> <span class="n">vLink</span><span class="p">,</span> <span class="n">Link</span>
</span><span class="line"><span class="n">func</span> <span class="o">:=</span> <span class="n">Func</span><span class="p">(</span><span class="s">&quot;OpenURL&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s">&quot;http://example.com&quot;</span><span class="p">)</span>
</span><span class="line"><span class="nb">GuiControl</span><span class="p">,</span> <span class="o">+</span><span class="n">G</span><span class="p">,</span> <span class="n">Link</span><span class="p">,</span> <span class="o">%</span> <span class="n">func</span>
</span><span class="line"><span class="o">...</span>
</span><span class="line">
</span><span class="line"><span class="n">OpenURL</span><span class="p">(</span><span class="n">url</span><span class="p">){</span>
</span><span class="line">  <span class="nb">Run</span> <span class="nv">%url%</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>引数がある関数の場合には<code>bind(x, y, z...)</code>の様に
<code>bind</code>の中に引数を入れて作ります。</p>

<p>GuiControlではv variableを使って要素を指定していますが、
v labelを付けない場合、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="o">...</span>
</span><span class="line"><span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Text</span><span class="p">,</span> <span class="o">+</span><span class="n">HwndLinkHwnd</span> <span class="n">cBlue</span><span class="p">,</span> <span class="n">Link</span>
</span><span class="line"><span class="n">func</span> <span class="o">:=</span> <span class="n">Func</span><span class="p">(</span><span class="s">&quot;OpenURL&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s">&quot;http://example.com&quot;</span><span class="p">)</span>
</span><span class="line"><span class="nb">GuiControl</span><span class="p">,</span> <span class="o">+</span><span class="n">G</span><span class="p">,</span> <span class="o">%</span> <span class="n">Wwnd</span><span class="p">,</span> <span class="o">%</span> <span class="n">func</span>
</span><span class="line"><span class="o">...</span>
</span><span class="line">
</span><span class="line"><span class="n">OpenURL</span><span class="p">(</span><span class="n">url</span><span class="p">){</span>
</span><span class="line">  <span class="nb">Run</span> <span class="nv">%url%</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>の様に<strong>ウィンドウハンドル</strong>を使った指定も出来ます。</p>

<p><code>+Hwnd&lt;name&gt;</code>とすると、その要素の<strong>ウィンドウハンドル</strong>を
<code>&lt;name&gt;</code>に入れることができ(値はウィンドウハンドルにあたる数字)、
この数字をGuiControlにv variableの代わりに渡ことで要素を指定できます。</p>

<p>もしくはクラス内でクラスメソッドを使いたい場合、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">class</span> <span class="n">MyClass</span><span class="p">{</span>
</span><span class="line">
</span><span class="line">  <span class="n">SetGui</span><span class="p">(){</span>
</span><span class="line">    <span class="o">...</span>
</span><span class="line">    <span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Text</span><span class="p">,</span> <span class="n">cBlue</span> <span class="n">vLink</span><span class="p">,</span> <span class="n">Link</span>
</span><span class="line">    <span class="n">func</span> <span class="o">:=</span> <span class="n">ObjBindMethod</span><span class="p">(</span><span class="n">this</span><span class="p">,</span> <span class="s">&quot;OpenURL&quot;</span><span class="p">,</span> <span class="s">&quot;https://example.com&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="nb">GuiControl</span><span class="p">,</span> <span class="o">+</span><span class="n">G</span><span class="p">,</span> <span class="n">Link</span><span class="p">,</span> <span class="o">%</span> <span class="n">func</span>
</span><span class="line">    <span class="o">...</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">OpenURL</span><span class="p">(</span><span class="n">url</span><span class="p">){</span>
</span><span class="line">    <span class="nb">Run</span> <span class="nv">%url%</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>の様にObjBindMethodを使った方法もあります。
使う関数の引数は<code>ObjBindMethod</code>の第3引数以降に指定します。</p>

<p>もし、クラスメソッドでも引数がなく、かつ中でインスタンス変数などを使っていないのであれば、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nb">Gui</span><span class="p">,</span> <span class="n">Add</span><span class="p">,</span> <span class="n">Text</span><span class="p">,</span> <span class="o">%</span> <span class="s">&quot;g&quot;</span> <span class="n">MyClass</span><span class="o">.</span><span class="n">__Class</span>  <span class="s">&quot;.OpenURL cBlue&quot;</span><span class="p">,</span> <span class="n">Link</span>
</span></code></pre></td></tr></table></div></figure>

<p>とすることも可能です。<code>MyClass.OpenURL</code>をg-labelとして指定する、ということ。</p>

<p>v variableの場合と違ってこちらは中に<code>.</code>とかが入っていても構わないのでクラスメソッドを直接指定できます。</p>

<h3 id="a_guicontrolを持つためにはg-labelが必要">A_GuiControlを持つためにはg-labelが必要</h3>

<p><code>A_GuiControl</code>という値は現在フォーカスがあたっている値が入っています。</p>

<p>これとToolTipを使って、Guiで表示しているボタンやテキストなどの説明をポップアップ表示する設定を作れます。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/vim_ahk/blob/master/lib/vim_tooltip.ahk">vim_ahk/vim_tooltip.ahk at master · rcmdnk/vim_ahk</a></p>
</blockquote>

<p><code>OnMessage(0x200, &lt;func&gt;)</code>で、<code>0x200</code>がマウスが動いたとき、を捉えられ、
そのときの動作を<code>func</code>で指定できます。
したがって、この時に<code>A_GuiControl</code>を調べて、ToolTipを出したいものならセットする、
というのが上の<strong>vim_tooltip.ahk</strong>の中でやっていること。</p>

<p>g-label、v variableを共に付けていると、<code>A_GuiControl</code>はv variableの名前になります。</p>

<p>g-labelはv variableとは関係ない名前でも良いわけですが、
g-labelがついてない場合、<code>A_GuiControl</code>は空になります。</p>

<p>この辺は今の環境でやってみてなのでもしかしたら何か勘違いしているかもしれませんが、
手元の環境ではそうなっています。</p>

<p>したがって、例えばただのテキストとかで特に動作が必要なく、g-labelをつける必要がない場合でも、
ToolTipを出したい場合、何もしないDummyのラベルか関数を作ってg-labelをつける必要があります。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/vim_ahk/blob/master/lib/vim_setting.ahk">vim_ahk/vim_setting.ahk at master · rcmdnk/vim_ahk</a></p>
</blockquote>

<p>この中では、<code>DisableUnusedText</code>とか、ただのテキストなんですが、この上にマウスオーバーしたときでも
ツールチップを出したかったのでダミー関数を作ってg-labelにあてています。</p>

<h3 id="guiclose-guiescapeにクラスメソッドを">GuiClose, GuiEscapeにクラスメソッドを</h3>

<p>Guiを作ると、自動的に<code>GuiClose</code>(ウィンドウをばつ印を押すなどして閉じるときの操作)、<code>GuiEscape</code>(<i class="key">Esc</i>を押した時の操作)という
g-labelが自動的に加わります。</p>

<blockquote>
  <p><a href="https://www.autohotkey.com/docs/commands/Gui.htm#GuiClose">Gui - Syntax &amp; Usage AutoHotkey</a></p>
</blockquote>

<p>グローバルな<code>GuiClose</code>や<code>GuiEscape</code>といったラベルや関数があるとそれがウィンドウのばつ印を押したときとかに実行されます。</p>

<p>これは全てのGuiで共通ですが、各Guiのものに関しては<code>&lt;Guiのラベル&gt;</code> + <code>Close</code>
という名前でラベルや関数を定義することでその動作を指定できます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nb">gui</span> <span class="n">new</span><span class="p">,</span> <span class="o">+</span><span class="n">LabelMyGui</span>
</span><span class="line"><span class="o">...</span>
</span><span class="line">
</span><span class="line"><span class="n">MyGuiClose</span><span class="p">(){</span>
</span><span class="line">  <span class="nb">MsgBox</span> <span class="s">&quot;Close MyGui&quot;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>クラス内でGuiを作って、クラス内の関数を使いたい場合、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">class</span> <span class="n">MyClass</span><span class="p">{</span>
</span><span class="line">
</span><span class="line">  <span class="n">SetGui</span><span class="p">(){</span>
</span><span class="line">    <span class="nb">gui</span> <span class="n">new</span><span class="p">,</span> <span class="o">%</span> <span class="s">&quot;+Label&quot;</span> <span class="o">.</span> <span class="n">this</span><span class="o">.</span><span class="n">__Class</span> <span class="s">&quot;.&quot;</span>
</span><span class="line">    <span class="o">...</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="nf">Close</span><span class="p">(){</span>
</span><span class="line">    <span class="nb">MsgBox</span> <span class="s">&quot;Close MyGui&quot;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>とすれば、<code>MyClass.Close()</code>を指定することになりクラス内の関数を使えます。
ですが、この場合はクラスメソッドとして呼ぶので、インスタンス変数などは参照できません。</p>

<blockquote>
  <p><a href="https://www.autohotkey.com/boards/viewtopic.php?t=64337">Event(guiescape) call function problem in class - AutoHotkey Community</a></p>
</blockquote>

<p>インスタンスの操作をきちんとしたい場合、上のようなラベルを使った指定ではうまくいきません。</p>

<p>これをなんとかするには、<code>OnMessage</code>を使った方法があります。</p>

<blockquote>
  <p><a href="https://github.com/rcmdnk/vim_ahk/blob/master/lib/vim_gui.ahk">vim_ahk/vim_gui.ahk at master · rcmdnk/vim_ahk</a></p>
</blockquote>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nf">OnMessage</span><span class="p">(</span><span class="mh">0x112</span><span class="p">,</span> <span class="n">ObjBindMethod</span><span class="p">(</span><span class="n">this</span><span class="p">,</span> <span class="s">&quot;OnClose&quot;</span><span class="p">))</span>
</span><span class="line"><span class="nf">OnMessage</span><span class="p">(</span><span class="mh">0x100</span><span class="p">,</span> <span class="n">ObjBindMethod</span><span class="p">(</span><span class="n">this</span><span class="p">,</span> <span class="s">&quot;OnEscape&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>0x112</code>はGuiのウィンドウに何らかの操作が行われた時、
<code>0x100</code>は何らかのキーが押されたときを捉えます。</p>

<p><code>OnClose</code>の方ではその後、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">OnClose</span><span class="p">(</span><span class="n">wp</span><span class="p">,</span> <span class="n">lp</span><span class="p">,</span> <span class="n">msg</span><span class="p">,</span> <span class="n">hwnd</span><span class="p">){</span>
</span><span class="line">  <span class="n">if</span><span class="p">(</span><span class="n">wp</span> <span class="o">==</span> <span class="mh">0xF060</span> <span class="o">&amp;&amp;</span> <span class="n">hwnd</span> <span class="o">==</span> <span class="n">this</span><span class="o">.</span><span class="n">Hwnd</span><span class="p">){</span>
</span><span class="line">    <span class="n">this</span><span class="o">.</span><span class="n">Hide</span><span class="p">()</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>としてますが、第一引数に何の操作が行われたか、という情報が入り、
<code>0xF060</code>はウィンドウを閉じる操作が行われた際の番号です。</p>

<p>第4引数にその操作が行われたウィンドウハンドルが入っていて、
これをあらかじめ取得しておいたGuiのウィンドウハンドルと比べて同じならウィンドウを隠す、ということをしています。</p>

<p>この<code>OnMessage</code>は呼ぶたびに新しくそのトリガーに関する動作を加えます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nf">OnMessage</span><span class="p">(</span><span class="mh">0x112</span><span class="p">,</span> <span class="n">ObjBindMethod</span><span class="p">(</span><span class="n">this</span><span class="p">,</span> <span class="s">&quot;OnClose&quot;</span><span class="p">))</span>
</span><span class="line"><span class="nf">OnMessage</span><span class="p">(</span><span class="mh">0x112</span><span class="p">,</span> <span class="n">ObjBindMethod</span><span class="p">(</span><span class="n">this</span><span class="p">,</span> <span class="s">&quot;OnClose&quot;</span><span class="p">))</span>
</span><span class="line"><span class="nf">OnMessage</span><span class="p">(</span><span class="mh">0x112</span><span class="p">,</span> <span class="n">ObjBindMethod</span><span class="p">(</span><span class="n">this</span><span class="p">,</span> <span class="s">&quot;OnClose&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>

<p>とかすると、<code>OnClose</code>が3回呼ばれる事に。
上の例のVimGuiというクラスは、それを継承したGuiを作るクラスをいくつか作るんですが、
それらが作られるたびに<code>OnMessage</code>が追加され、
どのウィンドウが閉じられるときにも全ての<code>OnClose</code>が走る、ということになります。</p>

<p>なので、例えばGuiをNewしてDestroyして、みたいなことを頻繁にやるのであれば
このやり方はちょっと良くないです(その分無駄に<code>OnMessge</code>の動作が加わっていくので。</p>

<p>vim_ahkでは、設定ウィンドウで以前は初期値を設定し直すのが面倒だったので、
毎回Gui NewしてDestroyして、みたいなことをしていましたが、
上記の理由で<code>Hide</code>に置き換えました。表示する設定値は毎回別途アップデートするように。
(そうでなくてもHideにしたほうが多分良かったとは思います。)</p>

<p>もう一つ、Escapeに関しては</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="n">OnEscape</span><span class="p">(</span><span class="n">wp</span><span class="p">,</span> <span class="n">lp</span><span class="p">,</span> <span class="n">msg</span><span class="p">,</span> <span class="n">hwnd</span><span class="p">){</span>
</span><span class="line">  <span class="n">if</span><span class="p">(</span><span class="n">wp</span> <span class="o">==</span> <span class="mi">27</span><span class="p">){</span>
</span><span class="line">    <span class="n">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">this</span><span class="o">.</span><span class="n">HwndAll</span> <span class="p">{</span>
</span><span class="line">      <span class="n">if</span><span class="p">(</span><span class="n">hwnd</span> <span class="o">==</span> <span class="n">h</span><span class="p">){</span>
</span><span class="line">        <span class="n">this</span><span class="o">.</span><span class="n">Hide</span><span class="p">()</span>
</span><span class="line">        <span class="nb">Return</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>な感じ。</p>

<p>今度は<code>wp</code>に押したキーの10進法でのASCIIコードが入っていて、27がESCです。</p>

<p>その後、Closeの場合には必ずウィンドウ自体のウィンドウハンドルが入りますが、
Escapeを押したタイミングではその時にフォーカスが当たっている要素のウィンドウハンドルが入ります。</p>

<p>ボタンとか何も無ければ全体のウィンドウのウィンドウハンドルがありますが、
ボタンやDropdownなどの要素がある場合にはそれらのうちフォーカスが当たったものになります。</p>

<p>なので、Guiを作る際に</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nb">Gui</span><span class="p">,</span> <span class="o">%</span> <span class="n">this</span><span class="o">.</span><span class="n">Hwnd</span> <span class="s">&quot;:Add&quot;</span><span class="p">,</span> <span class="n">Button</span><span class="p">,</span> <span class="o">+</span><span class="n">HwndOK</span> <span class="n">X200</span> <span class="n">W100</span> <span class="n">Default</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">OK</span>
</span><span class="line"><span class="n">this</span><span class="o">.</span><span class="n">HwndAll</span><span class="o">.</span><span class="n">Push</span><span class="p">(</span><span class="n">OK</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいにフォーカスが当たる可能性のある要素の全てについてウィンドウハンドルを取って
リストに詰めておいて上のように全てと比較するようなことをしています。</p>

<h3 id="settimerにマイナスの値">SetTimerにマイナスの値</h3>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nb">SetTimer</span><span class="p">,</span> <span class="n">Label</span><span class="p">,</span> <span class="n">period</span>
</span></code></pre></td></tr></table></div></figure>

<p>で、<code>period</code>の間隔で<code>Label</code>を実行するように出来ますが、<code>period</code>を<code>Off</code>にすればこのタイマーが止まります。</p>

<p>正の整数だとその間隔(ミリ秒)で実行します。</p>

<p>もしマイナスの値を与えると一回だけ、指定ミリ秒後に実行してタイマーを止めます。</p>

]]></content>
  </entry>
  
</feed>
