<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: RaspberryPi | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/raspberrypi/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2022-03-07T00:51:01+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi Zeroの室内測定器を基盤で実装]]></title>
    <link href="https://rcmdnk.com/blog/2022/01/06/computer-iot-raspberrypi/"/>
    <updated>2022-01-06T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2022/01/06/computer-iot-raspberrypi</id>
    <content type="html"><![CDATA[<p>Raspberry Pi Zeroを使って室温湿度や二酸化炭素濃度などを測ってますが、
これまでブレッドボードとか使って適当に繋いでいたのを
基盤にまとめてみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#raspberry-pi-zeroを使った室内測定器" id="markdown-toc-raspberry-pi-zeroを使った室内測定器">Raspberry Pi Zeroを使った室内測定器</a></li>
  <li><a href="#基盤作り" id="markdown-toc-基盤作り">基盤作り</a></li>
  <li><a href="#配線時の失敗" id="markdown-toc-配線時の失敗">配線時の失敗</a></li>
  <li><a href="#完成品" id="markdown-toc-完成品">完成品</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="raspberry-pi-zeroを使った室内測定器">Raspberry Pi Zeroを使った室内測定器</h2>

<p>Raspberry Pi Zeroに
BME280とMH-Z19Cという素子を繋いで温度、湿度、気圧、二酸化炭素濃度を測定しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/08/26/computer-iot-raspberrypi/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20190826_superchart_120_90.jpg" width="120" height="90" alt="20190826_superchart_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/26/computer-iot-raspberrypi/">Raspberry Piで温度湿度気圧を測ってスマホで見る</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B094XDFL34?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B094XDFL34&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71CEwRXKEoL._SS90_CR0,0,120,90_.jpg" alt="Liseng MH-Z19C IR赤外線CO2センサーモジュール二酸化炭素ガスセンサーNDIR、CO2モニター400-5Ppm UART PWM出力用" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/09/18/computer-iot-raspberrypi/">MH-Z19CとRaspberry Pi Zeroで二酸化炭素濃度を測定する</a></div></li></ul>

<p>測定値はBlynkというアプリで見たり、
Google Spreadsheetsに記録してデータポータルで見たりしています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01M98R905?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01M98R905&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51KFly5tZ3L._SS90_CR0,0,120,90_.jpg" alt="HiLetgo BME280 温度 センサー 湿度 センサー 気圧 センサー Arduino センサー 大気圧センサ 温湿度センサー ブレイクアウト Arduinoに対応 [並行輸入品]" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2020/10/13/computer-raspberrypi-iot-google/">Raspberry Piで測定した温度湿度気圧をGoogle Spreadsheetsに記録する</a></div></li></ul>
<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2021/01/15/computer-raspberrypi-iot-google/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20210115_both_120_90.jpg" width="120" height="90" alt="20210115_both_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/01/15/computer-raspberrypi-iot-google/">Nature RemoとBME 280 (RaspberryPi)での気温測定の比較</a></div></li></ul>

<p>取り敢えず、といことでこんな感じで接続してありました。</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspibefore.jpg" alt="20220106_raspibefore.jpg" class="pic" /></p>

<p>一応基盤とかも最初から買ってあってやろうとは思ってはいたものの長い間放置されてましたが、
ちょっと手を入れてみました。</p>

<h2 id="基盤作り">基盤作り</h2>

<ul>
  <li><a href="https://akizukidenshi.com/catalog/g/gP-14031/">Ｒａｓｐｂｅｒｒｙ　Ｐｉ　ＺＥＲＯ用ユニバーサル基板</a></li>
  <li><a href="https://akizukidenshi.com/catalog/g/gC-02485/">連結ピンソケット　２×２０（４０Ｐ</a></li>
</ul>

<p>これらを使って作ります。</p>

<p>まずはピンソケットをボードにはんだ付け。</p>

<p>以下の様につなげました。</p>

<ul>
  <li>BME280:
    <ul>
      <li>VDD: PIN  1 (3.3V)</li>
      <li>GND: PIN  6 (GND)</li>
      <li>CSB: PIN 17 (3.3V)</li>
      <li>SDI: PIN  3 (SDA)</li>
      <li>SDI: PIN  9 (GND)</li>
      <li>SDI: PIN  5 (SCL)</li>
    </ul>
  </li>
</ul>

<p><img src="https://rcmdnk.com/images/post/20190826_bme280front.jpg" alt="20190826_bme280front.jpg" class="pic" /></p>

<ul>
  <li>MH-Z19C:
    <ul>
      <li>Vin: PIN  4 (5V)</li>
      <li>GND: PIN 25 (GND)</li>
      <li>Tx:  PIN 10 (RXD)</li>
      <li>Rx:  PIN  8 (TXD)</li>
    </ul>
  </li>
</ul>

<p><img src="https://rcmdnk.com/images/post/20210918_mhz19c2.jpg" alt="20210918_mhz19c2.jpg" class="pic" /></p>

<blockquote>
  <p><a href="https://www.raspberrypi.com/documentation/computers/os.html">Raspberry Pi Documentation - Raspberry Pi OS</a></p>
</blockquote>

<p>基盤の上に素子を</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspiboard1.jpg" alt="20220106_raspiboard1.jpg" class="pic" /></p>

<p>こんな感じで配置して、裏側でPINとつなげるために配線します。</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspiboard2.jpg" alt="20220106_raspiboard2.jpg" class="pic" /></p>

<p>各素子の足の横の穴とPINの穴とを繋いで適当な抵抗の足を短く切ってはんだでつなげる感じでやりました。</p>

<p>横から見るとこんな感じ。</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspiboard3.jpg" alt="20220106_raspiboard3.jpg" class="pic" /></p>

<p>ちょっと間違えたりして配線がクロスしたりしてます。。。</p>

<p>色合いとかも含めてきれいに出来るなら上で配線すべきとは思いました。</p>

<h2 id="配線時の失敗">配線時の失敗</h2>

<p>一度全部配線終わってから起動してみるとBME280、MH-Z19C両方ともうまく動きませんでした。</p>

<p>MH-Z19Cの方は表の白い部分に赤いランプが付いていて電気は通ってるけど信号を送ると何も返してくれない状態。</p>

<p>テスター使って接続を調べてみると、BME280の方は一箇所、素子の足とそれを繋ぐ配線の横の穴の接続がうまく出来てませんでした。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07GJ891VR?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07GJ891VR&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/81kaDZEgnyL._SS200_.jpg" alt="オーム電機(Ohm Electric) 普及型デジタルテスター TST-KJ830" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B07GJ891VR?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07GJ891VR&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">オーム電機(Ohm Electric) 普及型デジタルテスター TST-KJ830</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B07GJ891VR?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07GJ891VR&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E3%83%86%E3%82%B9%E3%82%BF%E3%83%BC%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E3%83%86%E3%82%B9%E3%82%BF%E3%83%BC%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>MH-Z19Cの方はRxとTxの位置を勘違いして逆にしていました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B08HD8XTZP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08HD8XTZP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/6156eNDPz2L._SS90_CR0,0,120,90_.jpg" alt="MH-Z19B ピン付き(二酸化炭素(CO2)センサーモジュール、0-5000ppm、赤外線方式(NDIR))" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/02/18/computer-iot-raspberrypi/">MH-Z19BとRaspberry Pi Zeroで二酸化炭素濃度を測定する</a></div></li></ul>

<p>上の記事はZ19Bですが基本的にZ19Cとピン配列などは一緒です。
この中で接続の説明が逆になっていてその通りにやって間違えました(自分が悪い)。</p>

<p>何故か下の方にある絵は素子側のPINの位置をRxdとTxdを逆に書いていて結果的にPINの位置と接続線に関しては正しい状態にはなってました。
(今はそれらは全部正しく治してあります。)</p>

<p>記事書いたのが全部作った後なので、先に正しく認識して繋げていたものの後から記事書く時になんか勘違いしてたようです。</p>

<p>BMD280側の接続とMH-Z19Cの配線ミスを治した所、両方ともちゃんと計測出来るようになりました。</p>

<h2 id="完成品">完成品</h2>

<p>Raspberry Pi Zeroをケースに入れた上でピンをつなげるとこんな感じに。</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspifin1.jpg" alt="20220106_raspifin1.jpg" class="pic" /></p>

<p>下に配線いれたせいで基盤がちょっと浮かんでしまっています。</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspifin2.jpg" alt="20220106_raspifin2.jpg" class="pic" /></p>

<p>横から見るとちょっと斜めになってるのが分かる。</p>

<p><img src="https://rcmdnk.com/images/post/20220106_raspifin3.jpg" alt="20220106_raspifin3.jpg" class="pic" /></p>

<p>それほど気になるものでもないので取り敢えずはこれで良いかと。</p>

<p>材料費としては秋月電子で揃えて</p>

<ul>
  <li><a href="https://akizukidenshi.com/catalog/g/gM-12961/">Ｒａｓｐｂｅｒｒｙ　Ｐｉ　Ｚｅｒｏ　ＷＨ　（ラズベリーパイゼロ　ダブルエイチ）　本体</a>: 2,160円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gP-12962/">Ｒａｓｐｂｅｒｒｙ　Ｐｉ　Ｚｅｒｏ　ケース</a>: 650円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gP-14031/">Ｒａｓｐｂｅｒｒｙ　Ｐｉ　ＺＥＲＯ用ユニバーサル基板</a>: 100円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gC-02485/">連結ピンソケット　２×２０（４０Ｐ</a>: 110円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gM-12001/">スイッチングＡＣアダプター（ＵＳＢ　ＡＣアダプター）　ＭｉｃｒｏＢオス　５Ｖ３Ａ</a>: 700円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gK-09421/">ＢＭＥ２８０使用　温湿度・気圧センサモジュールキット</a>: 1,080円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gM-16142/">ＣＯ２センサーモジュール　ＭＨ－Ｚ１９Ｃ</a>: 2,480円</li>
  <li><a href="https://www.biccamera.com/bc/item/3353578/">microSDXCカード MXCN64GJVZ3 Class10 /64GB</a>: 2,080円</li>
</ul>

<p>で合計8660円。(Zeroとかは今は売り切れてます。早くRaspberry Pi Zero 2が売り出されるのを期待<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。)</p>

<div class="postscript">
  <p><strong>追記: 2022/02/05 </strong></p>

  <p>ACアダプターとmicroSDカードを忘れてたので追加。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>後は適当に工作キットがなければ適当に。</p>

<ul>
  <li><a href="https://akizukidenshi.com/catalog/g/gT-02536/">ニクロムはんだこて　ＫＳ－３０Ｒ（３０Ｗ）</a>: 800円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gT-02538/">こて先クリーナー　ＳＴ－３０</a>: 280円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gT-02594/">はんだ　０．８ｍｍ</a>: 210円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gT-02539/">はんだ吸取線　ＣＰ－３０１５</a>: 200円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gP-06756/">耐熱電子ワイヤー　２ｍ×７色　外径１．２２ｍｍ（ＵＬ３２６５　ＡＷＧ２４）</a>: 480円</li>
  <li><a href="https://akizukidenshi.com/catalog/g/gM-01287/">デジタルマルチメータ（テスタ）　Ｍ－８３０Ｂ　マニュアルレンジ</a>: 1,000円</li>
</ul>

<p>なんだかんだ揃えようとすると1万円近く行ってしまいます。</p>

<p>売っているものでスマホとかで確認出来るものだとこんなのが1万円位で売ってます。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B09BC3V1ZQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09BC3V1ZQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61SvQgxjUiS._SS200_.jpg" alt="二酸化炭素濃度計 PTH-8" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B09BC3V1ZQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09BC3V1ZQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">二酸化炭素濃度計 PTH-8</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B09BC3V1ZQ?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09BC3V1ZQ&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E4%BA%8C%E9%85%B8%E5%8C%96%E7%82%AD%E7%B4%A0%E6%BF%83%E5%BA%A6%E8%A8%88+PTH-8%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E4%BA%8C%E9%85%B8%E5%8C%96%E7%82%AD%E7%B4%A0%E6%BF%83%E5%BA%A6%E8%A8%88+PTH-8%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>ただ自由に色々出来ますし、ZeroでもCPUパワー的にはまだ余裕はある感じです。
(Pin的にこれ以上何か素子を着けるのは難しいとは思いますが。)</p>

<p>Pi4とかだと無駄に電力を食うし熱くなったりするので、これだけであればZero(Zero 2)を使うのがおすすめです。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加湿器と24時間換気の戦い(湿度と二酸化炭素濃度)]]></title>
    <link href="https://rcmdnk.com/blog/2022/01/03/iot-raspberrypi/"/>
    <updated>2022-01-03T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2022/01/03/iot-raspberrypi</id>
    <content type="html"><![CDATA[<p>加湿器を付けていて、なかなか湿度が上がりにくいと思っていたんですが、
マンションについてる24時間換気が結構強力に空気を入れ替えてくれてたようで
その調整をしてみた話。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#家の中の環境" id="markdown-toc-家の中の環境">家の中の環境</a></li>
  <li><a href="#これまでの通常" id="markdown-toc-これまでの通常">これまでの通常</a></li>
  <li><a href="#換気口を閉じてみる" id="markdown-toc-換気口を閉じてみる">換気口を閉じてみる</a></li>
  <li><a href="#換気口を小さく開けてみる" id="markdown-toc-換気口を小さく開けてみる">換気口を小さく開けてみる</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="家の中の環境">家の中の環境</h2>

<p>9畳ほどの部屋で13畳用の気化式の加湿空気清浄機を使ってます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07JG3RZXR?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07JG3RZXR&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61Mmz%2BqChqL._SS90_CR0,0,120,90_.jpg" alt="シャープ 加湿 空気清浄機 プラズマクラスター 25000 ハイグレード 13畳 / 空気清浄 23畳 2018年モデル グレー KI-JS50-H" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/01/25/life-iot-shopping/">加湿器調査: シャープの加湿空気清浄機KI-JS50購入(IoT)</a></div></li></ul>

<p>大体は一人で居る部屋。</p>

<p>部屋にはこんな感じの換気口が付いています。</p>

<p><img src="https://rcmdnk.com/images/post/20220103_vent0.jpg" alt="20220103_vent0.jpg" class="pic" /></p>

<p>上のが閉じてる状態で、以下の様な3段階で開けることができます。</p>

<p><img src="https://rcmdnk.com/images/post/20220103_vent1.jpg" alt="20220103_vent1.jpg" class="pic" />
<img src="https://rcmdnk.com/images/post/20220103_vent2.jpg" alt="20220103_vent2.jpg" class="pic" />
<img src="https://rcmdnk.com/images/post/20220103_vent3.jpg" alt="20220103_vent3.jpg" class="pic" /></p>

<p>24時間換気を動かしているので基本的には開けておかないといけないもの。
1時間に半分ほどの空気が入れ替わるようになってないといけないという法律がるようです。</p>

<blockquote>
  <p><a href="https://www.homes.co.jp/cont/buy_mansion/buy_mansion_00250/">【ホームズ】今さら聞けないマンションの“24時間換気システム”をおさら い 住まいのお役立ち情報</a></p>
</blockquote>

<p>部屋のドアを見てみると下に1cmほどの隙間があるのでそこから浴室やトイレの方で動いている換気扇まで空気が流れる様になっています。</p>

<h2 id="これまでの通常">これまでの通常</h2>

<p>二酸化炭素を気にするようになってから、まずは換気が大事だということでいつも換気口を全開で過ごしてました。</p>

<p><img src="https://rcmdnk.com/images/post/20220103_vent3.jpg" alt="20220103_vent3.jpg" class="pic" /></p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B094XDFL34?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B094XDFL34&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71CEwRXKEoL._SS90_CR0,0,120,90_.jpg" alt="Liseng MH-Z19C IR赤外線CO2センサーモジュール二酸化炭素ガスセンサーNDIR、CO2モニター400-5Ppm UART PWM出力用" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/09/18/computer-iot-raspberrypi/">MH-Z19CとRaspberry Pi Zeroで二酸化炭素濃度を測定する</a></div></li></ul>

<p>この状態で過ごしていると二酸化炭素濃度は500ppm程度でとどまっていて、ちょっと外出すればすぐに400ppmまで下がります。</p>

<p>ただ、冬場で外の湿度が20%とかになった時、加湿器を付けると全開で回した状態で40%程度まで上がる状態。</p>

<p>ただ、シャープの加湿空気清浄機は全開で回すと結構煩くて騒音レベルです。</p>

<p>一時的に強くなる程度なら良いのですが、加湿が追いつかないので常に全開な状態で
普通に過ごすのも辛いので静音状態にして使ってました。</p>

<p>静音で回せばエアコンの風の音よりも小さい位になります。</p>

<p>ただそれだと湿度は悪い時は30%位までしか上がりません。
ただ無いよりマシかな、ということでたまに気が向いたら強く加湿する程度にしていました。</p>

<h2 id="換気口を閉じてみる">換気口を閉じてみる</h2>

<p>加湿器の水はちゃんと減るので加湿が悪いわけでは無いと思うので
換気口を閉じたりして試してみることに。</p>

<p><img src="https://rcmdnk.com/images/post/20220103_vent0.jpg" alt="20220103_vent0.jpg" class="pic" /></p>

<p>完全に閉じた状態にしてみると、KI-JS50の<strong>おまかせ</strong>にしておくと
結構すぐに50%位(温度22度位)まで湿度が上がったところで静か(<strong>中</strong>、程度で
ちょっと強くエアコンが付いているくらいの)になりました。</p>

<p>この辺の設定は変えられないのでよくわかりませんが、説明書見ると下の(2)の状態にはなっている状態。</p>

<p><img src="https://rcmdnk.com/images/post/20220103_temphum.jpg" alt="20220103_temphum.jpg" class="pic" /></p>

<blockquote>
  <ul>
    <li>(1): ウイルスが生存しにくい環境</li>
    <li>(2): ウイルスが生存可能な環境</li>
    <li>(3): ウイルスが生存に適した環境</li>
  </ul>
</blockquote>

<blockquote>
  <p>https://jp.sharp/support/air_purifier/doc/kijs70_50_mn.pdf?productId=KI-JS50</p>
</blockquote>

<p>一方で二酸化炭素を見てみると同じく一気に上がっていって1000ppmを超えました。</p>

<p>なのでやはり閉め切るのは非常に体に悪いので良くないです。</p>

<h2 id="換気口を小さく開けてみる">換気口を小さく開けてみる</h2>

<p>次に一番小さく開けて見ました。</p>

<p><img src="https://rcmdnk.com/images/post/20220103_vent1.jpg" alt="20220103_vent1.jpg" class="pic" /></p>

<p>これでやってみると<strong>おまかせ</strong>で回すと湿度を50%まで上げることができました。</p>

<p>ただ、キープするのに精一杯のようでずっと全開で回っている状態。</p>

<p>次に<strong>自動</strong>モードにしてみると40%位まで上がったところで静かになりました。</p>

<p>この状態だとたまに湿度が下がってうるさくなりますが大体は<strong>中</strong>程度で運転できていました。</p>

<p>二酸化炭素濃度を見ると500ppm位でキープされていて二酸化炭素に関しては十分換気が効いている状態でした。</p>

<p>なので換気口としては最小限開けておく位で良い感じです。</p>

<p>加湿の方は40%位で良いかな、という感じですが、たまにうるさいと感じてしまうこともあり、
<strong>静音</strong>で運転するときもあります。</p>

<p><strong>静音</strong>だと湿度35~40%位の間でちょっと足りない感じ。</p>

<p>一応上の表を見る限りギリギリ最低限な湿度は保っていられる状態。
ただ、部屋が汚れたときも自動的に強くならなりません。</p>

<p>ちょっと匂いの出るものを食べるときなどはむしろ食べ終わるまで<strong>静音</strong>になってて
終わった後に強くなってほしいので切り替える事もありますが、
この辺結構微妙なところです。</p>

<h2 id="まとめ">まとめ</h2>

<p>冬場に湿度を上げたい、というのと二酸化炭素濃度を下げたい、という相反する状態を実現したいので
なかなか難しいということが分かりますが、
この辺はきちんと可視化出来てないと調整のしようが無いかと思います。</p>

<p>二酸化炭素濃度と湿度を同時に測れる様な機会もそこそこの値段で手に入るので
良く居る部屋なんかには置いておいて見ながら換気とかを調整しいところです。</p>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B09K3YSC3L?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09K3YSC3L&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61rUTzFRdjL._SS200_.jpg" alt="Kimwood 高精度 CO2 測定器 二酸化炭素濃度計測器 NDIR方式 co2濃度センサー 温度/湿度測定機能付き 3in1多機能CO2測定器 USB充電式 警報アラーム 大容量電池内蔵 400-5000PPM測定範囲" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B09K3YSC3L?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09K3YSC3L&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Kimwood 高精度 CO2 測定器 二酸化炭素濃度計測器 NDIR方式 co2濃度センサー 温度/湿度測定機能付き 3in1多機能CO2測定器 USB充電式 警報アラーム 大容量電池内蔵 400-5000PPM測定範囲</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B09K3YSC3L?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B09K3YSC3L&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E4%BA%8C%E9%85%B8%E5%8C%96%E7%82%AD%E7%B4%A0%E6%BF%83%E5%BA%A6%E8%A8%88%E6%B8%AC%E5%99%A8+NDIR%E6%96%B9%E5%BC%8F%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%E4%BA%8C%E9%85%B8%E5%8C%96%E7%82%AD%E7%B4%A0%E6%BF%83%E5%BA%A6%E8%A8%88%E6%B8%AC%E5%99%A8+NDIR%E6%96%B9%E5%BC%8F%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<p>人が多くなると二酸化炭素濃度の上昇度が大きくなる一方で加湿にはそれほど影響しないので
より難しい状態にはなるかと思います。
そうなるとより強力な加湿器を手に入れるしか無いか。。。</p>

<p>後、湿度以外にも温度との戦いもあります。
上の24時間換気を使う程度だとエアコンの効きが悪くなるとか言う感じはありません。(電気代とかきちんと測ってみたいところですが簡単に測れない。)</p>

<p>24時間換気がついてないと窓を開けたり積極的に換気する必要があるのでその際に一気に寒くなってしまう事もあるかと思います。</p>

<p>また、アクティブに動いていると二酸化炭素をたくさん出すのでその時は別途換気が必要になったり。</p>

<blockquote>
  <p><a href="https://honeshabri.hatenablog.com/entry/CO2-mini">二酸化炭素を減らすと部屋が寒い (冬なので) - 本しゃぶり</a></p>
</blockquote>

<p>寒さとの戦いもあり、やはり色々見ながら調整していく必要があります。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MH-Z19CとRaspberry Pi Zeroで二酸化炭素濃度を測定する]]></title>
    <link href="https://rcmdnk.com/blog/2021/09/18/computer-iot-raspberrypi/"/>
    <updated>2021-09-18T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/09/18/computer-iot-raspberrypi</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B094XDFL34?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B094XDFL34&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71CEwRXKEoL._SS200_.jpg" alt="Liseng MH-Z19C IR赤外線CO2センサーモジュール二酸化炭素ガスセンサーNDIR、CO2モニター400-5Ppm UART PWM出力用" /></a>
</div>

<p>以前、MH-Z19BをRaspberry Pi Zeroにつなげて二酸化炭素を測定できる様にしましたが、
ちょっと問題があったので別途MH-Z19Cを買って入れ替えました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#以前の設定方法について" id="markdown-toc-以前の設定方法について">以前の設定方法について</a></li>
  <li><a href="#起こっていた問題" id="markdown-toc-起こっていた問題">起こっていた問題</a></li>
  <li><a href="#mh-z19c" id="markdown-toc-mh-z19c">MH-Z19C</a></li>
  <li><a href="#mh-z19bとmh-z19c" id="markdown-toc-mh-z19bとmh-z19c">MH-Z19BとMH-Z19C</a></li>
  <li><a href="#使用感" id="markdown-toc-使用感">使用感</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="以前の設定方法について">以前の設定方法について</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B08HD8XTZP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08HD8XTZP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/6156eNDPz2L._SS90_CR0,0,120,90_.jpg" alt="MH-Z19B ピン付き(二酸化炭素(CO2)センサーモジュール、0-5000ppm、赤外線方式(NDIR))" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/02/18/computer-iot-raspberrypi/">MH-Z19BとRaspberry Pi Zeroで二酸化炭素濃度を測定する</a></div></li></ul>

<p>こちらで。MH-Z19BとRaspberry Pi Zeroで二酸化炭素濃度を測定できる様にしました。</p>

<p>Pythonのスクリプトで読み取ってGoogle Sheetsに送ったり、
Blynkに送ってスマホから確認出来るようにしたりしています。</p>

<h2 id="起こっていた問題">起こっていた問題</h2>

<p>MH-Z19Bで測定を開始して割とすぐに測定が止まってしまうことがありました。
コマンドを送っても接続がうまく出来てないような状況。</p>

<p>Raspberry Pi自体を再起動したりしてもうまく接続できませんでした。</p>

<p>この問題は、MH-Z19BにつながっているVinのピンにつながっているコードを抜き差しすると解決しました。</p>

<p>その後、1週間に1回位起こる現象になっていて、正直常時使うには辛いレベルです。
Raspberry Piの再起動とか自動で復帰できればよいのですが、物理的に抜き差しすることしか
解決する方法は見つけれてない状態で。(その部分を外部からスイッチングできる様な装置使えば自動で復帰できるかもしれませんが。。。)</p>

<p>と、そんな中、上の記事に対して</p>

<blockquote>
  <p>画像のものは偽物ですね
私も偽のものを掴まされました…</p>
</blockquote>

<p>というコメントが。。。
ちょっとどこを見て判断するのかはわかりませんが、裏が緑ではなく黒いところとか？</p>

<p>これの真偽は正直わからないのですが、ただ、買ったサイトはAliExpressで、
偽物を掴まされたという話もちょくちょく聞く様なところだったですし、
届いたものも結構作りが雑な感じはしてました。</p>

<p><img src="https://rcmdnk.com/images/post/20210218_mhz19b1.jpg" alt="20210218_mhz19b1.jpg" class="pic" />
<img src="https://rcmdnk.com/images/post/20210218_mhz19b2.jpg" alt="20210218_mhz19b2.jpg" class="pic" /></p>

<p>それでもそれっぽい測定出来てたので、もしかしたら単なる個体差かもしれませんが、
いずれにしろ使いづらいので新しいものを買おう、と。</p>

<h2 id="mh-z19c">MH-Z19C</h2>

<p>とはいえ、またよくわからないものを掴まされても困るので、ちゃんとしたところから買いたいな、
と思って探していたところ、
MH-Z19Cの方を秋月電子通商が取り扱いを開始しているのを見つけました。</p>

<blockquote>
  <p><a href="https://akizukidenshi.com/catalog/g/gM-16142/">ＣＯ２センサーモジュール ＭＨ－Ｚ１９Ｃ: センサ一般 秋月電子通商-電子部品・ネット通販</a></p>
</blockquote>

<p>しかも現時点(2021/08/29)で税込み2 ,480円とAmazonとかより安い。
AliExpressを探すともう少し安いのもありますが、安心感が全然違います。
Amazonもよくわからないところしか販売してないですし。</p>

<p>残念ながらMH-Z19Bの取り扱いは現状内容ですが、下に書くように
特にMH-Z19Cでも困ることはなさそうなのでこれを買いました。</p>

<p><img src="https://rcmdnk.com/images/post/20210918_mhz19c1.jpg" alt="20210830_mhz19c1.jpg" class="pic" />
<img src="https://rcmdnk.com/images/post/20210918_mhz19c2.jpg" alt="20210830_mhz19c2.jpg" class="pic" /></p>

<p>こんな感じのきれいなものが手に入りました。。。</p>

<p>こちらのCの方は
表側の白いテープが張ってある部分も赤く光ります。
また、裏にも電源ランプみたいなものが付いていて、電源が入っていると
裏の電源の横とVinの横に付いているランプがチカチカと光ります。</p>

<p><img src="https://rcmdnk.com/images/post/20210918_mhz19c4.jpg" alt="20210830_mhz19c4.jpg" class="pic" /></p>

<p>ただこれは止められるなら止めたいな、とも思ったり。(嫌ならテープ貼っておくとかで処置するか、と。)</p>

<h2 id="mh-z19bとmh-z19c">MH-Z19BとMH-Z19C</h2>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B08HD8XTZP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08HD8XTZP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/6156eNDPz2L._SS200_.jpg" alt="MH-Z19B ピン付き(二酸化炭素(CO2)センサーモジュール、0-5000ppm、赤外線方式(NDIR))" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B08HD8XTZP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08HD8XTZP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">MH-Z19B ピン付き(二酸化炭素(CO2)センサーモジュール、0-5000ppm、赤外線方式(NDIR))</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B08HD8XTZP?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08HD8XTZP&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FMH-Z19B+%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FMH-Z19B+%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<blockquote>
  <p><a href="https://www.winsen-sensor.com/sensors/co2-sensor/mh-z19b.html">MH-Z19B ndir CO2 sensor for indoor air quality monitoring–Winsen</a></p>
</blockquote>

<blockquote>
  <p><a href="https://www.winsen-sensor.com/d/files/MH-Z19B.pdf">MH-Z19B データシート</a></p>
</blockquote>

<div class="amazon-box">
  <div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B08RMJQKW1?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08RMJQKW1&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/71CEwRXKEoL._SS200_.jpg" alt="Nrpfell MH-Z19C IR赤外線CO2センサーモジュール二酸化炭素ガスセンサーNDIR、CO2モニター400-5Ppm UART PWM出力用" /></a>
</div>

  <div class="amazon-title">
    <a href="//www.amazon.co.jp/gp/product/B08RMJQKW1?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08RMJQKW1&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Nrpfell MH-Z19C IR赤外線CO2センサーモジュール二酸化炭素ガスセンサーNDIR、CO2モニター400-5Ppm UART PWM出力用</a>
  </div>
  <div class="amazon-txt">
    <span class="amazon-link"><a href="//www.amazon.co.jp/gp/product/B08RMJQKW1?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B08RMJQKW1&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank">Amazonで見る</a></span>
    <span class="rakuten-link"><a href="//hb.afl.rakuten.co.jp/hgc/111f634c.5fb25e94.111f634d.1a56ae16/?pc=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F+MH-Z19C%2F&amp;m=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F+MH-Z19C%2F&amp;scid=af_url_txt&amp;link_type=text&amp;ut=eyJwYWdlIjoidXJsIiwidHlwZSI6InRlc3QiLCJjb2wiOjB9" rel="nofollow" target="_blank">楽天市場で見る</a></span>
  </div>
</div>

<blockquote>
  <p><a href="https://www.winsen-sensor.com/sensors/co2-sensor/mh-z19c.html">MH-Z19C NDIR CO2 Sensor for HVAC and IAQ–Winsen</a></p>
</blockquote>

<blockquote>
  <p><a href="https://www.winsen-sensor.com/d/files/infrared-gas-sensor/mh-z19c-pins-type-co2-manual-ver1_0.pdf">MH-Z19C データシート</a></p>
</blockquote>

<p>見た目も似てますが、中身もかなり同じ様な感じになっています。</p>

<p>生えてるピンも同じなので、Raspberry Pi Zeroとの接続も同じです。
(BME280が余計に付いてますが気にせず。)</p>

<p><img src="https://rcmdnk.com/images/post/20210218_fritzing.jpg" alt="20210218_fritzing.jpg" class="pic" /></p>

<p>二酸化炭素を測定するために送る信号も2つとも同じです。
また、Self calibrationと呼ばれる自動キャリブレーション機能のon/offを行う信号も同じになっています。</p>

<p>違う信号として、MH-Z19Bには信号を送ることでキャリブレーションを即座に実行することが出来ますが、
MH-Z19Cのデータシートにはその信号は明記されていません。</p>

<p>ただ、この直接のキャリブレーションはHDピンとGNDピンをつなげれば行えます。(これは2つとも出来る。)</p>

<p>また、MH-Z19Cの方が後に発売されたものですが、測定範囲が
MH-Z19Bが0~5000ppm、MH-Z19Cが400~5000ppmとMH-Z19Bの方が広くなっています。</p>

<p>なので、MH-Z19CはMH-Z19Bの簡易版?的な感じもしますが、
単に余計な機能を落として安定させた、というものかもしれません。</p>

<p>いずれにしろ、既に開発されているMH-Z19B用の測定ツールなどは基本的にそのまま使うことが出来ます。</p>

<h2 id="使用感">使用感</h2>

<p>現在同時に2つ動かせる環境じゃないのでBからCに交換して動かしています。</p>

<p>1ヶ月ほど動かしていますが、今の所一度も測定が止まる様なことはありませんでした。</p>

<p>Bの方だとひどいときは週に2回位起こってましたし、買った直後からも起こっていたので
全然違います。</p>

<p>Bの方がたまたま不良品だったのか、偽物を掴まされたのかは分かりませんが、
やはり毎週測定が止まるようなことは異常だったようです。</p>

<p>同時に測定できないので精度や比較をするのは難しいですが、
人がいる環境で締め切っていると1000ppmを超えてきたり、
窓を開けると400ppmまで下がったり大体同じ様な動作になっていると思います。</p>

<p>外気で400ppmとして
何度か外でマニュアルキャリブレーションをしてるのですが、
Cは実際に400ppm以下の表示は出ないようになっていました。</p>

<p>外気は人が住んでるよ言うなところだと400ppmよりは50~100ppmくらい高い様な感じですが、
まあ正確にキャリブレーションするのも大変なので誤差+/-100ppm位は許容するということで。</p>

<blockquote>
  <p><a href="https://ds.data.jma.go.jp/ghg/kanshi/obs/co2_monthave_ryo.html">気象庁 二酸化炭素濃度の観測結果</a></p>
</blockquote>

<p>とりあえずちょくちょくつなげ直す様なことはなくなってよかったです。</p>

<p>MH-Z19BはAmazonでもAliExpressでも出どころが確実なところがありませんが、
MH-Z19Cであれば秋月電子通商で売ってるので今であればMH-Z19C
の方が安心かとは思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tsd2gspread: 時系列データをGoogle Sheetsに書き込むPythonツール]]></title>
    <link href="https://rcmdnk.com/blog/2021/04/13/computer-iot-raspberrypi-google/"/>
    <updated>2021-04-13T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/04/13/computer-iot-raspberrypi-google</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00KNRL068?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00KNRL068&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51EQHQnIMUL._SS200_.jpg" alt="現場ですぐ使える時系列データ分析～データサイエンティストのための基礎知識～" /></a>
</div>

<p>Raspberry Piから色々Google Sheetsに書き込むことが多くなってきたので、
ちょっと機能をまとめたツール的なものをつくってみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#tsd2gspread" id="markdown-toc-tsd2gspread">tsd2gspread</a></li>
  <li><a href="#使い方" id="markdown-toc-使い方">使い方</a>    <ul>
      <li><a href="#ツールとして使う" id="markdown-toc-ツールとして使う">ツールとして使う</a></li>
      <li><a href="#親クラスとして使う" id="markdown-toc-親クラスとして使う">親クラスとして使う</a></li>
    </ul>
  </li>
  <li><a href="#主なパラメーターなど" id="markdown-toc-主なパラメーターなど">主なパラメーターなど</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="tsd2gspread">tsd2gspread</h2>

<div class="github-widget" data-repo="rcmdnk/tsd2gspread"></div>

<p>Pythonのツールで、pipで</p>

<pre><code>$ pip install tsd2gspread
</code></pre>

<p>で入れられます。</p>

<p>Google Sheetsに関しては、Pythonでは<a href="https://github.com/burnash/gspread">gspread</a>
という便利なツールがあって、これを使うと簡単にGoogle SheetsのAPIを使えます。</p>

<p>tsd2gspreadはこのgspreadを使って時系列データを書き込むのに特化したツールです。</p>

<p>gspredをそのまま使っても良かったのですが、別のデータの書き込みに重複部分が増えてきたので
まとめました。</p>

<h2 id="使い方">使い方</h2>

<h3 id="ツールとして使う">ツールとして使う</h3>

<p>まず、Google Sheets APIにアクセス出来るようサービスアカウントを作成してアカウント情報の入った
jsonファイルを取得します。</p>

<blockquote>
  <p><a href="https://gspread.readthedocs.io/en/latest/oauth2.html#for-bots-using-service-account">Authentication — gspread 3.7.0 documentation</a>.</p>
</blockquote>

<p>これを<strong>~/service_account.json</strong>などに置いておいて、
以下の様なスクリプトを実行します。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span></span><span class="kn">import</span> <span class="nn">tsd2gspread</span>
</span><span class="line">
</span><span class="line"><span class="n">tg</span> <span class="o">=</span> <span class="n">tsd2gspread</span><span class="o">.</span><span class="n">get</span><span class="p">(</span>
</span><span class="line">    <span class="n">service_account</span><span class="o">=</span><span class="s1">&#39;~/service_account.json&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">sheet_name</span><span class="o">=</span><span class="s1">&#39;MySheet&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">create</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
</span><span class="line">    <span class="n">worksheet_name</span><span class="o">=</span><span class="s1">&#39;MyWork&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">columns</span><span class="o">=</span><span class="s1">&#39;foo,bar,</span>
</span><span class="line">    <span class="n">share</span><span class="o">=</span><span class="s1">&#39;rcmdnk@gmail.com&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Make function to get data</span>
</span><span class="line"><span class="k">def</span> <span class="nf">get_data</span><span class="p">():</span>
</span><span class="line">    <span class="n">foo</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">    <span class="n">bar</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class="line">    <span class="k">return</span> <span class="p">(</span><span class="n">foo</span><span class="p">,</span> <span class="n">bar</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Set data getter</span>
</span><span class="line"><span class="n">tg</span><span class="o">.</span><span class="n">get_data</span> <span class="o">=</span> <span class="n">get_data</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Write Time Series Data to Google Sheets</span>
</span><span class="line"><span class="n">tg</span><span class="o">.</span><span class="n">write</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

<p>これで、
<strong>MySheet</strong>という名前で以下の様な内容を持った
ワークシート名が<strong>MyWork</strong>のSheetsが出来ます。</p>

<table>
  <thead>
    <tr>
      <th>datetime</th>
      <th>foo</th>
      <th>bar</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2021-01-02 03:04:05</td>
      <td>1</td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<p>あとは<code>tg.write()</code>を実行するたびに、その実行時間と値が書き込まれていきます。</p>

<p>実際に使う際には、この<code>get_data</code>関数を適時必要なものにして渡して、
データを取得したいタイミングで<code>tg.write()</code>を実行すればOK。</p>

<p>この例ではSheetsがない場合には作成して書き込みを行っていますが、
その場合はサービスアカウントがオーナーとなってしまい、
そのアカウントを作ったユーザー自体がアクセス権限を持ってない状態で作られるので、
<code>share</code>で自分のアカウントを指定して自分がアクセスできるようにしてください。</p>

<pre><code>sheet_name='MySheet',
</code></pre>

<p>の代わりに既存のSheetsのURLを<code>sheet_url</code>で指定したり
Key(URLの中にあるランダムな文字列)を<code>sheet_key</code>で指定することも出来ます。</p>

<p>この場合はSheets側で<strong>共有</strong>から、上で取得したサービスアカウントファイルの中にある
<code>client_email</code>の値に対して編集権限で共有をしておく必要があります。</p>

<p>指定の名前のSheetsがすでにあり、共有設定されていれば上のように名前で指定しても
既存のファイルに書き込まれます。</p>

<h3 id="親クラスとして使う">親クラスとして使う</h3>

<p>Tsd2Gspreadというクラスがあるので、それを継承する形で使うことも出来ます。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span></span><span class="kn">from</span> <span class="nn">tsd2gspread</span> <span class="kn">import</span> <span class="n">Tsd2Gspread</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MyClass</span><span class="p">(</span><span class="n">Tsd2Gspread</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_data</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="n">foo</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">        <span class="n">bar</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class="line">        <span class="k">return</span> <span class="p">(</span><span class="n">foo</span><span class="p">,</span> <span class="n">bar</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">tg</span> <span class="o">=</span> <span class="n">MyClass</span><span class="p">(</span>
</span><span class="line">    <span class="n">service_account</span><span class="o">=</span><span class="s1">&#39;~/service_account.json&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">sheet_name</span><span class="o">=</span><span class="s1">&#39;MySheet&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">create</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
</span><span class="line">    <span class="n">worksheet_name</span><span class="o">=</span><span class="s1">&#39;MyWork&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">columns</span><span class="o">=</span><span class="s1">&#39;foo,bar,</span>
</span><span class="line">    <span class="n">share</span><span class="o">=</span><span class="s1">&#39;rcmdnk@gmail.com&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Write Time Series Data to Google Sheets</span>
</span><span class="line"><span class="n">tg</span><span class="o">.</span><span class="n">write</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

<p>基本的に定義すべきな関数は<code>get_data</code>で、
ここで書き込むべき変数を配列なりタプルなりで返す様にします。</p>

<p>これでそのクラスのインスタンスを作って<code>write</code>してあげれば書き込めます。</p>

<h2 id="主なパラメーターなど">主なパラメーターなど</h2>

<p><code>tsd2gspread.get</code>なり<code>Tsd2gspread</code>に渡せるパラメーターについて。</p>

<ul>
  <li><code>sheet_name</code>, <code>sheet_url</code>, <code>sheet_key</code>: Sheetsを名前かURLかSheetsのKeyで指定できます。新たに作る場合には<code>sheet_name</code>のみが使えます。</li>
  <li><code>columns</code>: 最初にSheetsを新たに作成する場合には<code>columns</code>に<code>,</code>で分けたカラム名を渡すことで
カラム名を1行目に書き込むことが出来ます。</li>
  <li><code>timedelta</code>: デフォルトではUTCの時間を書き込みます。これを日本時間に変更したい場合には<code>timedelta=9</code>などとしてUTCとの差を入れる必要があります。</li>
</ul>

<p>他にも色々とパラメーターはありますが、これらを<code>config_file</code>というパラメーターにファイルを渡すことでまとめて渡す事もできます。
<code>config_file</code>の中身は</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sheet_name=MySheet
</span><span class="line">columns=foo,bar
</span><span class="line">...</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>みたいに<code>OPTION=VALUE</code>の様に書いておきます。</p>

<p>その他詳細は<a href="https://github.com/rcmdnk/tsd2gspread">README</a>で。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Piからシャープの加湿空気清浄機を操作する]]></title>
    <link href="https://rcmdnk.com/blog/2021/03/04/computer-iot-raspberrypi/"/>
    <updated>2021-03-04T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2021/03/04/computer-iot-raspberrypi</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07JG3RZXR?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07JG3RZXR&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61Mmz%2BqChqL._SS200_.jpg" alt="シャープ 加湿 空気清浄機 プラズマクラスター 25000 ハイグレード 13畳 / 空気清浄 23畳 2018年モデル グレー KI-JS50-H" /></a>
</div>

<p>シャープの加湿空気清浄機をアプリ以外から操作できるようになったので
Raspberry Piから操作できるようにして、
IFTTTとかを使っていろいろな条件でも管理できるようにしてみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#cocoro" id="markdown-toc-cocoro">cocoro</a></li>
  <li><a href="#cocoro--blynk" id="markdown-toc-cocoro--blynk">cocoro + Blynk</a></li>
  <li><a href="#blynkのgeo-dns問題" id="markdown-toc-blynkのgeo-dns問題">BlynkのGEO DNS問題</a></li>
  <li><a href="#iftttと連携して外出時に止める帰宅時に点ける" id="markdown-toc-iftttと連携して外出時に止める帰宅時に点ける">IFTTTと連携して外出時に止める、帰宅時に点ける</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="cocoro">cocoro</h2>

<div class="github-widget" data-repo="rcmdnk/cocoro"></div>

<p>最近買ったシャープの加湿空気清浄機を操作するためのツール。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2021/03/03/computer-iot-raspberrypi/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20210303_switchon_120_90.jpg" width="120" height="90" alt="20210303_switchon_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/03/03/computer-iot-raspberrypi/">シャープの加湿空気清浄機をアプリ外から操作する</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07JG3RZXR?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07JG3RZXR&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61Mmz%2BqChqL._SS90_CR0,0,120,90_.jpg" alt="シャープ 加湿 空気清浄機 プラズマクラスター 25000 ハイグレード 13畳 / 空気清浄 23畳 2018年モデル グレー KI-JS50-H" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2021/01/25/life-iot-shopping/">加湿器調査: シャープの加湿空気清浄機KI-JS50購入(IoT)</a></div></li></ul>

<p>これとBlynkというアプリとIFTTTを使ってRaspberry Piとスマホから色々できるようにします。</p>

<h2 id="cocoro--blynk">cocoro + Blynk</h2>

<p>まずは
<a href="https://github.com/rcmdnk/cocoro">cocoro</a>
をRaspberry Piにインストール。</p>

<pre><code>$ sudo pip3 install cocoro
</code></pre>

<p><strong>/home/pi/.config/cocoro/config.yml</strong>に</p>

<figure class="code"><figcaption><span>/home/pi/.config/cocoro/config.yml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span></span><span class="nn">---</span>
</span><span class="line"><span class="nt">appSecret</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">&lt;appSecret&gt;</span>
</span><span class="line"><span class="nt">terminalAppIdKey</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">&lt;terminalAppIdKey&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>の値をmitmproxyとかで調べて書いておきます。</p>

<p>これで、</p>

<pre><code>$ cocoro info
</code></pre>

<p>などしてちゃんと通信できることを確認。</p>

<p>これでRaspberry Piから加湿空気清浄機を操作できるようになりました。</p>

<p>ここまで来たらBlynkから操作できるようにします。</p>

<p>Blynkに関して詳しくは以下で。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B07GYRVHJ9?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B07GYRVHJ9&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61lN0oNqz6L._SS90_CR0,0,120,90_.jpg" alt="Raspberry Pi Zero WH スターターセット (ANKER超小型電源、SanDisk MicroSD 高速型 32GB、USBスイッチケーブル付き)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/18/computer-iot-raspberrypi/">Blynkを使ってRaspberryi Piをスマホから操作する</a></div></li></ul>

<p><a href="https://github.com/blynkkk/blynk-library">BlynkのオリジナルのC++のExampleコード</a>
を参考に以下の様なコードを書きました。</p>

<ul>
  <li><a href="https://github.com/rcmdnk/blynk-library/blob/9eb02622f275808c7b62b93afc2e489a1addf805/linux/main.cpp#L38">blynk-library/main.cpp</a></li>
</ul>

<p>別途<a href="https://rcmdnk.com/blog/2019/08/26/computer-iot-raspberrypi/">BME280による観測</a>なども入ってますが、今回使っているのはV1~V3の部分。</p>

<figure class="code"><figcaption><span>main.cpp </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;string.h&gt;</span><span class="cp"></span>
</span><span class="line">
</span><span class="line"><span class="cp">#define COCORO_CONFIG &quot;--config_file /home/pi/.config/my_raspi_home/cocoro.yml&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">BLYNK_WRITE</span><span class="p">(</span><span class="n">V1</span><span class="p">)</span><span class="w"></span>
</span><span class="line"><span class="p">{</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Got a value for V%d: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">V1</span><span class="p">,</span><span class="w"> </span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asStr</span><span class="p">());</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">string</span><span class="w"> </span><span class="n">cmd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;cocoro switch &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">1</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;on &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;off &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">COCORO_CONFIG</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span><span class="w"></span>
</span><span class="line"><span class="p">}</span><span class="w"></span>
</span><span class="line">
</span><span class="line"><span class="n">BLYNK_WRITE</span><span class="p">(</span><span class="n">V2</span><span class="p">)</span><span class="w"></span>
</span><span class="line"><span class="p">{</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Got a value for V%d: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">V2</span><span class="p">,</span><span class="w"> </span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asStr</span><span class="p">());</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">string</span><span class="w"> </span><span class="n">cmd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;cocoro humi &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">1</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;on &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;off &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">COCORO_CONFIG</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span><span class="w"></span>
</span><span class="line"><span class="p">}</span><span class="w"></span>
</span><span class="line">
</span><span class="line"><span class="n">BLYNK_WRITE</span><span class="p">(</span><span class="n">V3</span><span class="p">)</span><span class="w"></span>
</span><span class="line"><span class="p">{</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Got a value for V%d: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">V3</span><span class="p">,</span><span class="w"> </span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asStr</span><span class="p">());</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">string</span><span class="w"> </span><span class="n">cmd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;cocoro mode &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">1</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;recommendation &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">2</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;effective &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">3</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;auto &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">4</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;pollen &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">asInt</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">5</span><span class="p">){</span><span class="w"></span>
</span><span class="line"><span class="w">    </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s">&quot;quiet &quot;</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="p">}</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">cmd</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">COCORO_CONFIG</span><span class="p">;</span><span class="w"></span>
</span><span class="line"><span class="w">  </span><span class="n">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span><span class="w"></span>
</span><span class="line"><span class="p">}</span><span class="w"></span>
</span></code></pre></td></tr></table></div></figure>

<p>あたりが重要なところ。</p>

<p>これをコンパイルしてRaspberry Piで動かしておいて、
アプリ側で以下の様なボタンを作ります。</p>

<p>V1、V2は以下の様な0, 1を出すButton。</p>

<p><img src="https://rcmdnk.com/images/post/20210304_v1.jpg" alt="20210304_v1.jpg" class="pic" /></p>

<p>これにそれぞれ電源スイッチと加湿のOn/Offを割り当て。</p>

<p>V3はSegmented Switchという最大5種類まで設置できるスイッチボタン。</p>

<p><img src="https://rcmdnk.com/images/post/20210304_v3.jpg" alt="20210304_v3.jpg" class="pic" /></p>

<p>これが最大5種類なのでよく使いそうなモード5つを選択して設置。</p>

<p>これで以下の様なBlynkのUIになります。</p>

<p><img src="https://rcmdnk.com/images/post/20210304_blynk.jpg" alt="20210304_blynk.jpg" class="pic" /></p>

<p>これを使ってCOCORO Airを通さずにBlynkから加湿空気清浄機を操作できるようになりました。</p>

<p>これだけだとCOCORO Airのアプリを直接使えば良いとなるわけですが、
このBlynkを使って別経由で操作できるようにします。</p>

<p>BlynkはAPIを通して操作できるようになっているのでそれを使います。</p>

<ul>
  <li><a href="https://blynkapi.docs.apiary.io/#">Blynk HTTP RESTful API · Apiary</a></li>
</ul>

<p>使う際には、まずBlynkの<strong>Project Settings</strong>にある
<code>AUTH TOKEN</code>という値をメモしておきます。</p>

<p>このTOKENを使って</p>

<pre><code>http://blynk-cloud.com/&lt;AUTH TOKEN&gt;/update/V1?value=1
</code></pre>

<p>とかにGETすればV1の値を1に変更することが出来ます。
このあたりのAPIの仕様は上のAPIページを参考に。</p>

<p>試しに、適当なターミナルから</p>

<pre><code>$ curl http://blynk-cloud.com/&lt;AUTH TOKEN&gt;/update/V1?value=1
</code></pre>

<p>とかしてちゃんと変更できるか確認。</p>

<p>うまくいけばこれを使ってあらゆるところからBlynkを操作でき、
すなわち加湿空気清浄機を操作できる様になります。</p>

<h2 id="blynkのgeo-dns問題">BlynkのGEO DNS問題</h2>

<p>上の様な感じでBlynkのAPIを使って色々やりたいところなんですが、
このままIFTTTとかで使うとうまくいきません。</p>

<pre><code>Action failure message: Your server returned a 400. Unable to make web request to http://blynk-cloud.com/&lt;AUTH TOKEN&gt;/update/V1
</code></pre>

<p>みたいなエラーが返ってきます。</p>

<p>これは
BlynkがGEO DNSという、接続元IPアドレスの地域によって違うレコードを返すDNSを使っているためです。</p>

<p>日本で動かしているRaspberry Piに日本から接続するとうまくいきますが、
IFTTTとかだとWebhookを送るサーバーが日本にあるわけではないので
別のblynkサーバーに接続しに行ってしまってエラーになってしまいます。</p>

<p>これを解決するためには使っているサーバーのIPアドレスを調べてそれを直接使うこと。</p>

<pre><code>$ nslookup blynk-cloud.com
Server:         XXX.XX.XX.X
Address:        XXX.XX.XX.X#XX

Non-authoritative answer:
Name:   blynk-cloud.com
Address: 188.166.206.43
</code></pre>

<p>という感じで<code>188.166.206.43</code>だとわかるのでこれを使います。</p>

<p>上のURLだと</p>

<pre><code>$ curl http://188.166.206.43/&lt;AUTH TOKEN&gt;/update/V1?value=1
</code></pre>

<p>とすれば同様の結果が得られますし、これであればIFTTTとかで使っても有効です。</p>

<h2 id="iftttと連携して外出時に止める帰宅時に点ける">IFTTTと連携して外出時に止める、帰宅時に点ける</h2>

<p>使うのはIFTTTの<strong>Location</strong>と<strong>Webhooks</strong>。</p>

<p>外出時に消す操作は</p>

<ul>
  <li><strong>If</strong>のところで<strong>Location</strong>を選択
    <ul>
      <li><strong>You exit an area</strong>を選択</li>
      <li>自宅付近を地図で選んで<strong>Create trigger</strong></li>
    </ul>
  </li>
  <li><strong>Then That</strong>のところで<strong>Webhooks</strong>を選択
    <ul>
      <li><strong>Make a web request</strong></li>
      <li><strong>URL</strong>に上の<code>GET</code>方式のURLを入力。スイッチを切るので最後の部分は<code>V1?value=0</code>に。</li>
      <li><strong>Method</strong>は<code>GET</code></li>
      <li><strong>Content Type</strong>と<strong>Body</strong>はそのまま</li>
      <li>で<strong>Create action</strong></li>
    </ul>
  </li>
</ul>

<p>帰宅時に点ける操作は
<strong>Location</strong>でexitではなく<strong>You enter an area</strong>で作り、
<strong>Webhooks</strong>の方ではURLで最後の部分を<code>V1?value=1</code>にして
別途作ります。</p>

<p>これで家にいるときだけ点けることが出来ます。</p>

<p>シャープのおまかせにしておくと、逆に家に居ないときに空気清浄能力を上げてきれいにする、
という操作をしてくれたりしますが、
食事時などでニオイが強くなっても割とすぐに消えるし、
家の中は割とキレイそうなので無理に居ないときに回す必要は無いかな、ということでこういう設定に。</p>

<p>家にいるときに普通の設定だとうるさすぎるので静音にしてますが、
空気清浄能力はそれでも十分です。</p>

<p>加湿に関しては少しそれだと足りないかな、という点はあって、
その辺もこの辺使えば
湿度とか見て自分の良いようにしようと思えばできるので今後やるかも。</p>
]]></content>
  </entry>
  
</feed>
