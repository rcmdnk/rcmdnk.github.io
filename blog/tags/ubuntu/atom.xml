<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Ubuntu | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/ubuntu/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T00:24:25+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows Terminalを試す]]></title>
    <link href="https://rcmdnk.com/blog/2020/05/31/computer-ubuntu-bash/"/>
    <updated>2020-05-31T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2020/05/31/computer-ubuntu-bash</id>
    <content type="html"><![CDATA[<p>Windowsの純正のターミナルアプリが正式リリースされたので試してみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-terminal" id="markdown-toc-windows-terminal">Windows Terminal</a></li>
  <li><a href="#設定項目" id="markdown-toc-設定項目">設定項目</a></li>
  <li><a href="#追加した設定" id="markdown-toc-追加した設定">追加した設定</a>    <ul>
      <li><a href="#defaultprofileをwslに" id="markdown-toc-defaultprofileをwslに">defaultprofileをWSLに</a></li>
      <li><a href="#その他のglobal設定" id="markdown-toc-その他のglobal設定">その他のGlobal設定</a>        <ul>
          <li><a href="#initialcols-initialrows" id="markdown-toc-initialcols-initialrows">initialCols, initialRows</a></li>
          <li><a href="#alwaysshowtabs-showtabasintitlebar" id="markdown-toc-alwaysshowtabs-showtabasintitlebar">alwaysShowTabs, showTabasInTitlebar</a></li>
          <li><a href="#copyonselect" id="markdown-toc-copyonselect">copyOnSelect</a></li>
          <li><a href="#copyformatting" id="markdown-toc-copyformatting">copyFormatting</a></li>
          <li><a href="#confirmclosealltabs" id="markdown-toc-confirmclosealltabs">confirmCloseAllTabs</a></li>
        </ul>
      </li>
      <li><a href="#wslubuntuの設定変更" id="markdown-toc-wslubuntuの設定変更">WSL(Ubuntu)の設定変更</a>        <ul>
          <li><a href="#startingdirectory" id="markdown-toc-startingdirectory">startingDirectory</a></li>
          <li><a href="#scrollbarstate" id="markdown-toc-scrollbarstate">scrollbarState</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#プロファイルの追加" id="markdown-toc-プロファイルの追加">プロファイルの追加</a></li>
  <li><a href="#ショートカットを作って特定のプロファイルを直接起動" id="markdown-toc-ショートカットを作って特定のプロファイルを直接起動">ショートカットを作って特定のプロファイルを直接起動</a></li>
  <li><a href="#気になる事" id="markdown-toc-気になる事">気になる事</a>    <ul>
      <li><a href="#タブを別ウィンドウに分けられない" id="markdown-toc-タブを別ウィンドウに分けられない">タブを別ウィンドウに分けられない</a></li>
      <li><a href="#explorerから現在のフォルダをターミナルで開く" id="markdown-toc-explorerから現在のフォルダをターミナルで開く">Explorerから現在のフォルダをターミナルで開く?</a></li>
      <li><a href="#cursorshapeが設定できない" id="markdown-toc-cursorshapeが設定できない">cursorShapeが設定できない</a></li>
      <li><a href="#日本語入力中が汚くなる" id="markdown-toc-日本語入力中が汚くなる">日本語入力中が汚くなる</a></li>
    </ul>
  </li>
  <li><a href="#windows-terminal以外のターミナル" id="markdown-toc-windows-terminal以外のターミナル">Windows Terminal以外のターミナル</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-terminal">Windows Terminal</h2>

<p>Windows TerminalはMicrosoft Storeから入手出来ます。</p>

<blockquote>
  <p><a href="https://www.microsoft.com/ja-jp/p/windows-terminal/9n0dx20hk701?rtc=1&amp;activetab=pivot:overviewtab">Windows Terminal を入手 - Microsoft Store ja-JP</a></p>
</blockquote>

<p>これまでもコマンドプロンプトやPowerShell専用のもの、
WSLのターミナルなどはありましたが、
Windows Terminalを使うとそれらを一つのターミナルから使える様になります。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160605_bashonubuntuonwindows_120_90.jpg" width="120" height="90" alt="20160605_bashonubuntuonwindows_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/">Windowsに採用されたBash (Ubuntu)を試してみる</a></div></li></ul>

<p>また、タブ機能や画面を分割して使う機能などがあり
細かな設定も出来るようになっていてかなり充実したターミナルアプリになっていると感じました。</p>

<p>ドキュメントも結構頑張って作っている感じ。</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/terminal/">Windows ターミナルの概要  Microsoft Docs</a></p>
</blockquote>

<p>OSSなのでソースコードはGitHubにあり開発に参加することも出来ます。</p>

<div class="github-widget" data-repo="microsoft/terminal"></div>

<p>今回使っているのは
バージョン1.0.1401.0です。</p>

<h2 id="設定項目">設定項目</h2>

<p>Windows Terminalの設定は設定項目が書かれたJSONファイルを直接編集する形で
設定変更を行います。</p>

<p>ターミナル上のタブの右側にあるボタンを押すか、ターミナル上で<i class="key">Ctrl</i>-<i class="key">,</i>
を押すと設定用JSONファイルを開けます。</p>

<p>ただ、最初は<strong>.json</strong>をどのアプリで編集するか紐付けられてません。
推奨するアプリも設定されてないみたいで、
<strong>Microsoft Storeでアプリを探す</strong>が出てきますが、<strong>その他のアプリ</strong>から
メモ帳なりVimを選んで、常にそのアプリで開く様にチェックを入れて開きます。</p>

<p>開くとJSONファイルですが、
以下の様な感じになっています。</p>

<figure class="code"><figcaption><span>settings.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span></span><span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;$schema&quot;</span><span class="p">:</span> <span class="s2">&quot;https://aka.ms/terminal-profiles-schema&quot;</span><span class="p">,</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&quot;defaultProfile&quot;</span><span class="p">:</span> <span class="s2">&quot;{XXXXXXXX-XXXXXXXXX-XXXX-XXXXXXXXXXXX}&quot;</span><span class="p">,</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&quot;profiles&quot;</span><span class="p">:</span>
</span><span class="line">    <span class="p">[</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="err">//</span> <span class="err">Make</span> <span class="err">changes</span> <span class="err">here</span> <span class="err">to</span> <span class="err">the</span> <span class="err">powershell.exe</span> <span class="err">profile</span>
</span><span class="line">            <span class="nt">&quot;guid&quot;</span><span class="p">:</span> <span class="s2">&quot;{XXXXXXXX-XXXXXXXXX-XXXX-XXXXXXXXXXXX}&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Windows PowerShell&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;commandline&quot;</span><span class="p">:</span> <span class="s2">&quot;powershell.exe&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;hidden&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="err">//</span> <span class="err">Make</span> <span class="err">changes</span> <span class="err">here</span> <span class="err">to</span> <span class="err">the</span> <span class="err">cmd.exe</span> <span class="err">profile</span>
</span><span class="line">            <span class="nt">&quot;guid&quot;</span><span class="p">:</span> <span class="s2">&quot;{XXXXXXXX-XXXXXXXXX-XXXX-XXXXXXXXXXXX}&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;cmd&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;commandline&quot;</span><span class="p">:</span> <span class="s2">&quot;cmd.exe&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;hidden&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="nt">&quot;guid&quot;</span><span class="p">:</span> <span class="s2">&quot;{XXXXXXXX-XXXXXXXXX-XXXX-XXXXXXXXXXXX}&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;hidden&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Ubuntu&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;source&quot;</span><span class="p">:</span> <span class="s2">&quot;Windows.Terminal.Wsl&quot;</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="nt">&quot;guid&quot;</span><span class="p">:</span> <span class="s2">&quot;{XXXXXXXX-XXXXXXXXX-XXXX-XXXXXXXXXXXX}&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;hidden&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Azure Cloud Shell&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;source&quot;</span><span class="p">:</span> <span class="s2">&quot;Windows.Terminal.Azure&quot;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">],</span>
</span><span class="line">
</span><span class="line">    <span class="err">//</span> <span class="err">Add</span> <span class="err">custom</span> <span class="err">color</span> <span class="err">schemes</span> <span class="err">to</span> <span class="err">this</span> <span class="err">array</span>
</span><span class="line">    <span class="nt">&quot;schemes&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class="line">
</span><span class="line">    <span class="err">//</span> <span class="err">Add</span> <span class="err">any</span> <span class="err">keybinding</span> <span class="err">overrides</span> <span class="err">to</span> <span class="err">this</span> <span class="err">array.</span>
</span><span class="line">    <span class="err">//</span> <span class="err">To</span> <span class="err">unbind</span> <span class="err">a</span> <span class="err">default</span> <span class="err">keybinding,</span> <span class="err">set</span> <span class="err">the</span> <span class="err">command</span> <span class="err">to</span> <span class="nt">&quot;unbound&quot;</span>
</span><span class="line">    <span class="s2">&quot;keybindings&quot;</span><span class="p">:</span> <span class="p">[]</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>defaultProfile</code>に起動時に開くプロファイルのGUID、
<code>profiles</code>にPowerShellやWSLの情報が入っています。</p>

<p>WSLはインストールすると自動的に追加されるようです。</p>

<p>ここに追加の設定を書いたり、プロファイルを加えたり変更したりすればOK。</p>

<p>有効な設定値などは以下を参照。</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/terminal/customize-settings/global-settings">Windows ターミナルのグローバル設定  Microsoft Docs</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/microsoft/terminal/blob/master/doc/cascadia/SettingsSchema.md">terminal/SettingsSchema.md at master · microsoft/terminal</a></p>
</blockquote>

<p>色も変更可能:</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/terminal/customize-settings/color-schemes">Windows ターミナルの配色  Microsoft Docs</a></p>
</blockquote>

<p>直接設定ファイルをいじれる様になってるのでかなり自由度が高く変更が可能です。</p>

<p>ただ、GUIな設定画面がないのでどの様な設定が出来るか、フォントとかは何が選べるのか、
とかは上を見ながら、とかしないといけないのでちょっと面倒ではあります。</p>

<p>普段からLinuxとか使ってるとこういった設定は慣れてる人もいるかも知れませんが、
ちょっとハードルが高いと感じる人もいるかも知れません。</p>

<p>ファイルは</p>

<pre><code>**C:\Users\&lt;user&gt;\AppData\Local\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState\settings.json**
</code></pre>

<p>といったところにあり、<code>WindowsTerminal_8wekyb3d8bbwe</code>という部分にランダムな?ものがついたフォルダを作っています。</p>

<p>この辺よく理解してませんが、WSLとかが加わってダイナミックにプロファイルを作成する際に新たに作る必要があるためにこの様なフォルダを作っているのでしょうか?</p>

<p>このファイルを別途直接管理しようと思うとこの様なランダムな文字列が入ってくるのでちょっと面倒そうです。(wtコマンドとかで調べることが出来るのかもしれませんが。)</p>

<p>JSONファイルへの設定変更ですが、ファイルを保存した瞬間に
ターミナル上へも反映されます。</p>

<p>文法が間違ってたりするとエラー表示が出て、変更を読み込まないまま続行するといった注意が出たりします。</p>

<p>ただ、タブに関する部分とか、再度ターミナルを立ち上げ直さないと有効にならないものも一部あります。</p>

<h2 id="追加した設定">追加した設定</h2>

<h3 id="defaultprofileをwslに">defaultprofileをWSLに</h3>

<p><code>defaultPrifle</code>のGUIDを<code>"name": "Ubuntu"</code>のプロファイルのGUIDにして
起動時にWSLを立ち上げる様にしました。</p>

<h3 id="その他のglobal設定">その他のGlobal設定</h3>

<p>ターミナル全体で有効になる設定として、
<code>defaultProfile</code>の下に以下を加えました。</p>

<pre><code>"initialCols": 90,
"initialRows": 20,
"alwaysShowTabs": false,
"showTabsInTitlebar": false,
"copyOnSelect": true,
"copyFormatting": false,
"confirmCloseAllTabs": false,
</code></pre>

<h4 id="initialcols-initialrows">initialCols, initialRows</h4>

<p>ターミナルの横、縦の長さ(文字数)。デフォルトはそれぞれ120、30。
これは好み。</p>

<p><code>launtMode</code>に<code>maximized</code>を設定すると起動時に最大化された状態で始める事もできます。</p>

<h4 id="alwaysshowtabs-showtabasintitlebar">alwaysShowTabs, showTabasInTitlebar</h4>

<p>タブが一つの場合でもタブを表示するかどうか、と
タブをタイトルバーの中に表示するか、タイトルバーと分けるか、という設定。</p>

<p>デフォルトはそれぞれ<code>true</code>と<code>true</code>。</p>

<p>デフォルト状態だとこんな感じ。</p>

<p><img src="https://rcmdnk.com/images/post/20200531_notitle.png" alt="20200531_notitle.png" class="pic" /></p>

<p><code>showTabsInTitlebar</code>をFalseにすると</p>

<p><img src="https://rcmdnk.com/images/post/20200531_titletab.png" alt="20200531_titletab.png" class="pic" /></p>

<p>こんな感じでタイトルバーが別に現れます。</p>

<p>タイトルバーは右クリックすると最大化、などのメニューが出てきますが、
タイトルに書かれるものはタブのものと一緒だし、
タイトルバーをダブルクリックして最大化、みたいなことは
タブをタイトルバーに入れてもタブ以外の部分をダブルクリックすれば出来ます。</p>

<p>なので、もしタブを常に表示させている場合、タイトルバーを表示させてるメリットはあまりないので
<code>showTabsInTitlebar</code>は<code>false</code>の方が良いかと。</p>

<p>一方で、<code>alwaysShowTabs</code>を<code>false</code>にして<code>showTabsInTitlebar</code>も<code>false</code>にすると、
タブが一つだけの場合、タブがなくなりタイトルバーだけになります。</p>

<p><img src="https://rcmdnk.com/images/post/20200531_notab.png" alt="20200531_notab.png" class="pic" /></p>

<p>この場合、わずかにタイトルバー無しでタブだけの表示の場合よりも上側の
部分が短くなります。</p>

<p>ただし、タブが2つ以上になるとタイトルバーに加えてタブのバーが別に現れます。</p>

<p>現状、タブを使うつもりはないので、<code>false</code>、<code>false</code>にしてあります。</p>

<p>この状態にすると設定を開くボタンが消えてしまうので、<i class="key">Ctrl</i>-<i class="key">,</i>
で開ける、ということを忘れずに。</p>

<p>ただ、タイトルバーが白いので、なんとなく黒に統一したいと思ったら<code>true</code>、<code>true</code>
のデフォルト表示のが良いかも、とは迷い中。</p>

<h4 id="copyonselect">copyOnSelect</h4>

<p>Linuxとかのターミナルの様に、ターミナル上でマウスで文字列を選択した段階で
コピーをするかどうか。</p>

<p><code>false</code>の場合には選択してから右クリックするか
<i class="key">Ctrl</i>-<i class="key">Shift</i>-<i class="key">C</i>でコピーします。</p>

<p>通常の右クリックからコピーというメニューを選ぶ、というものでもないため、
<code>false</code>の場合でも選択してから右クリックでコピー、でも十分かもしれません。
(PowerShellとかと同じ仕様)</p>

<p>CLCLなどクリップボード履歴を使っていると、ターミナル上でちょっと文字を選択しただけで
どんどん履歴に入っていってしまうのは邪魔くさいので要検討。
(ただ、Macとかでは選択してそのままコピー、という感覚で使うので同じにしたい。)</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/08/21/computer-windows/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20190821_clipboardlist_120_90.jpg" width="120" height="90" alt="20190821_clipboardlist_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/08/21/computer-windows/">Windowsの履歴利用や他のPCと共有 ができる新しいクリップボードを試してみた</a></div></li></ul>

<p>とりあえずデフォルトが<code>false</code>なので有効にするために<code>true</code>にしておきます。</p>

<h4 id="copyformatting">copyFormatting</h4>

<p>コピー時に色やフォーマットも記憶するか、プレーンテキストとして記憶するか、の設定。</p>

<p>デフォルトは<code>true</code>になってます。</p>

<p>たとえばEvernoteとかにコピーしようとするとコードとか、
色つけのママ出来て嬉しい、とかあるかもしれませんが、
ただ、そういった場合でも大概はプレーンテキストのままのが便利なことが多いです。</p>

<p>というか、フォーマットをコピーして嬉しいことってのが殆どないのに、
MacでもWindowsでもそのへんコピーするのがデフォルトになってるのが面倒。</p>

<p><i class="key">Ctrl</i>-<i class="key">Shift</i>-<i class="key">V</i>とかで貼り付け時にフォーマットを削除して
貼り付け、ということが出来るので、大概これを押す羽目に。</p>

<p>ということで、<code>false</code>にしています。</p>

<p>加えて、日本語を使ってる人は絶対に<code>false</code>にしたほうが良いです。</p>

<p><code>true</code>のままだと日本語をコピーすると化けます。
<i class="key">Ctrl</i>-<i class="key">Shift</i>-<i class="key">V</i>でフォーマットを削除しても
化けたものは化けたまま。</p>

<p>なのでフォーマットどうこう関係なしにも<code>false</code>にするしかない状況です。</p>

<h4 id="confirmclosealltabs">confirmCloseAllTabs</h4>

<p>タブを複数開いているとき、閉じるボタンでターミナルを閉じようとした時に
閉じてよいかどうか尋ねるかどうか。</p>

<p>ブラウザとかでもあるやつですが、ターミナルだと閉じるときは<i class="key">Ctrl</i>-<i class="key">D</i>
とかでそれを閉じるし、
全部消したい時に閉じるボタンを押す、という感じなので余計なお世話。</p>

<p>デフォルト<code>true</code>なので<code>false</code>にします。</p>

<h3 id="wslubuntuの設定変更">WSL(Ubuntu)の設定変更</h3>

<p><code>profiles</code>の中の<code>Ubuntu</code>の項目に</p>

<pre><code>{
    "guid": "{XXXXXXXX-XXXXXXXXX-XXXX-XXXXXXXXXXXX}",
    "hidden": false,
    "name": "Ubuntu",
    "source": "Windows.Terminal.Wsl",
    "startingDirectory": "//wsl$/Ubuntu/home/&lt;ubuntu_user&gt;",
    "scrollbarState": "hidden"
},
</code></pre>

<p>な感じに<code>startingDirectory</code>と<code>scrollbarState</code>を加えました。</p>

<h4 id="startingdirectory">startingDirectory</h4>
<p>Windows Terminalでは<code>startingDirectory</code>という項目が<code>profiles</code>の設定項目として他にあり、
これがデフォルトで<code>%USERPROFILE%</code>になっていて、これはWindowsのユーザーディレクトリです。
(<strong>\C:\Users&lt;user&gt;</strong>、WSL的には**/mnt/c/Users/<user>**)</user></p>

<p>これをUbuntuのHOMEになるようにするには上記の様な<code>//wsl$/&lt;name&gt;/home/&lt;user&gt;</code>
という値を与えます。</p>

<p>もしくは</p>

<pre><code>    "commandline": "wsl.exe ~ -d Ubuntu",
</code></pre>

<p>という設定を<code>startingDirectory</code>の代わりに設定しても同じことが出来ます。
この項目は実際にWSLを起動するコマンド自体を変更するもので、
最初に<code>~</code>を渡してUbuntuのHOMEディレクトリからスタートする、という形にしています。</p>

<p>以前は<code>startingDirectory</code>に<code>wsl$</code>の様なWSLのパスを設定する方法がなかったので
こちらが使われてましたが、
現在は<code>wsl$</code>を使って<code>startingDirectory</code>での設定が可能になっています。</p>

<blockquote>
  <p><a href="https://docs.microsoft.com/ja-jp/windows/terminal/troubleshooting">Windows ターミナルのトラブルシューティング  Microsoft Docs</a></p>
</blockquote>

<p>ただ、<code>commandline</code>の方がユーザー名を含まないで済むので使い回しはしやすいという点はあります。</p>

<p>ここではとりあえずDocumentに沿って<code>startingDirectory</code>を設定しています。</p>

<h4 id="scrollbarstate">scrollbarState</h4>

<p>スクロールバーを見せるか見せないか。デフォルトでは見せる様になっていますが、
ターミナル上ではGNU screenを使って作業したりするのでスクロールとかは必要ないので
隠す設定。</p>

<p>ただ、Windows Terminalのスクロールバーは通常のスクロールバーと違ってものすごく細いので、
あってもウィンドウ幅とかにはあまり影響がないので無理に隠す必要はないかもしれません。</p>

<h2 id="プロファイルの追加">プロファイルの追加</h2>

<p>Windows Terminalの面白い機能として、プロファイルに<code>ssh</code>なものを加えられます。</p>

<p>どういうものかというと</p>

<pre><code>{
    "guid": "{0151badc-f0d2-41ab-b017-56d14afd71dc}",
    "hidden": false,
    "name": "ssh_example.com",
    "commandline": "ssh -i ~/.ssh/id_rsa user@example.com"
}
</code></pre>

<p>というものを加えると、<code>example.com</code>に<code>ssh</code>した状態で開始出来る様になります。</p>

<p>こういった自作のプロファイルを作る場合、メニューから選択するだけなら<code>guid</code>は要りませんが、
デフォルトに設定したい場合には必要です。</p>

<p>GUIDは桁数とかさえあってれば何でも良いのですが、
<a href="https://www.guidgen.com/">Generate GUIDs online</a>
とかで適当なものを作ってくれるので作って設定しておきます。</p>

<p><code>commandline</code>で<code>ssh</code>コマンドを指定しますが、この<code>ssh</code>は
<strong>C:\Users&lt;user&gt;.ssh</strong>がsshの設定ディレクトリになります。
<strong>config</strong>は<strong>C:\Users&lt;user&gt;.ssh\config</strong>。</p>

<p>また、このコマンドの中で<code>~</code>を使ったディレクトリ指定は(HOMEは)<em>*C:\Users&lt;user&gt;*</em>になります。</p>

<p>なので
<strong>C:\Users&lt;user&gt;.ssh\id_rsa</strong>みたいな鍵を使いたければ上記の様な指定をすればOK。</p>

<p>Cywginとかを加えることも出来ます。</p>

<blockquote>
  <p><a href="https://github.com/microsoft/terminal/blob/master/doc/user-docs/ThirdPartyToolProfiles.md">terminal/ThirdPartyToolProfiles.md at master · microsoft/terminal</a></p>
</blockquote>

<p>これで新しいプロファイルが加わります。</p>

<p><img src="https://rcmdnk.com/images/post/20200531_profiles.png" alt="20200531_profiles.png" class="pic" /></p>

<h2 id="ショートカットを作って特定のプロファイルを直接起動">ショートカットを作って特定のプロファイルを直接起動</h2>

<p><code>defaultProfile</code>は一つしか指定できないので、それ以外のプロファイルは
一度Widnows Terminalを立ち上げてから選択して立ち上げる必要があります。</p>

<p>ただ、上記の様なsshの設定でいくつかのサーバーに直接入りたいとき、
そのターミナルを直接立ち上げたい、という場合もあると思います。</p>

<p>そういった場合にはショートカットを作ってリンク先をいじってそこから直接起動する、
という方法が出来ます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/08/30/computer-windows/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130720_magicformation_120_90.jpg" width="120" height="90" alt="20130720_magicformation_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/08/30/computer-windows/">Windowsでのショートカットの起動オプション for MagicFormation</a></div></li></ul>

<p>Windows Terminalの実行ファイルは</p>

<pre><code>C:\Users\&lt;user&gt;\AppData\Local\Microsoft\WindowsApps\wt.exe
</code></pre>

<p>にあります。(この手のMicrosoft Storeからインストールしたものはスタートメニューアイコンを右クリックしても<strong>その他</strong>に<strong>ファイルの場所を開く</strong>がないので最初どこにあるかわからなかった。。。)</p>

<p>このショートカットを作って
プロファイルを開き、<strong>リンク先</strong>の<strong>…wt.exe</strong>となっている部分に、
<code>-p &lt;profile name&gt;</code>を追加します。</p>

<p>これでOKを押して、このショートカットをダブルクリックとかして立ち上げると
指定したプロファイルが立ち上がるはずです。</p>

<p>このショートカットをデスクトップに置いたり、スタートにピン留めとかしておけば
簡単に好きなプロファイルを直接開ける様になります。</p>

<h2 id="気になる事">気になる事</h2>

<h3 id="タブを別ウィンドウに分けられない">タブを別ウィンドウに分けられない</h3>

<p>ブラウザとかでタブ機能があるものだと、タブをドラッグして外に持っていくと新しいウィンドウが出来ます。</p>

<p>また、別のウィンドウの方に持っていくとタブを移動することが出来ます。</p>

<p>ただ、Windows Terminalでは現状タブはウィンドウのなかだけでしか移動できず、
新しいウィンドウを作ることも出来ません。</p>

<p>ショートカットとかでも新しいタブを作るものはありますが、新しいウィンドウを作る、というものはありません。</p>

<p>別ウィンドウを作りたい場合、無理やり、</p>

<pre><code>$ cmd.exe /c wt.exe &amp;
</code></pre>

<p>とかして新しいWindows Terminalを立ち上げる、という事は出来ます。</p>

<p>これだと新しいウィンドウは古いウィンドウのターミナルの子プロセスになるので
古いウィンドウを消すと新しいほうも落ちてしまいそうな感じがしますが、
やってみたところ古い方を消しても新しい方は続けて使えました。</p>

<p>なのでこれで一応<strong>新しいウィンドウ</strong>的な事はできますが、タブの移動とかはやっぱり出来ません。</p>

<p>まあ、この辺は自分ではあまり使わない部分なのでそれ程問題ないのですが。</p>

<h3 id="explorerから現在のフォルダをターミナルで開く">Explorerから現在のフォルダをターミナルで開く?</h3>

<blockquote>
  <p><a href="https://github.com/microsoft/terminal/issues/1060">Add “open Windows terminal here” into right-click context menu · Issue #1060 · microsoft/terminal</a></p>
</blockquote>

<p>右クリックメニューとかでExplorer上から開いてるフォルダをターミナルで開く、
ということも頑張れば出来るらしい。</p>

<p>ただ、現状やるのはちょっと面倒。</p>

<p>一方で、</p>

<blockquote><p>Not currently supported "out of the box" (See issue #1060). However, you can open Windows Terminal in current directory by typing wt -d . in the Explorer address bar.</p><footer><strong>terminal/index.md at master · microsoft/terminal</strong> <cite><a href="https://github.com/microsoft/terminal/blob/master/doc/user-docs/index.md">github.com/microsoft/terminal/&hellip;</a></cite></footer></blockquote>

<p>というのがあるんですが、Explorerのアドレスバーに<code>wt -d .</code>と打ってみてもうまく行きませんでした。</p>

<p>バージョンが違うのか何か間違っているのか。。。</p>

<h3 id="cursorshapeが設定できない">cursorShapeが設定できない</h3>

<p>グローバル設定で<code>cursorShape</code>という項目があり、デフォルトが<code>bar</code>で細い先が
文字の間に表示される状態です。</p>

<p>VimのInsert Mode的な状態。</p>

<p>Macとかのターミナルとかだと挿入位置にブロック表示になるので
(VimのNormal Mode的な状態)
これと同じ様にしたければ<code>filledBox</code>にする、か<code>emptyBox</code>が近いもの。</p>

<p>ただ、Macとかではこれらが点滅し、さらに下の文字が点滅に応じて反転して
常に見える様な状態になります。</p>

<p>現状Windows Terminalのカーソルは点滅もしないので文字列の途中に行くと、下の文字がカーソルに隠れて見てなくなってしまう様な状態。</p>

<p>なので<code>emptyBox</code>と言ったものを作っているようです。</p>

<blockquote>
  <p><a href="https://github.com/microsoft/terminal/issues/1203">Feature Request: Show character under cursor when cursorShape is set to filledBox · Issue #1203 · microsoft/terminal</a></p>
</blockquote>

<p>多分これは将来的に他のターミナルの様に点滅で下が見える様なものが出来ると思います。</p>

<p>ということなのですが、今使ってみた所ではそもそも<code>cursorShape</code>に何を設定しても
状態が変わりません。</p>

<p>それどころか、Vimを開いてもNormal Modeでもブロック表示になりません。</p>

<p>変更できない、といったバグ報告見たいのは見かけないので、やっぱり何か手元の設定がおかしい…? (<strong>settings.json</strong>は元に戻して<code>cursorShape</code>だけ加えてもやっぱり出来ないのですが。)</p>

<h3 id="日本語入力中が汚くなる">日本語入力中が汚くなる</h3>

<p>すでに文字列がある部分に日本語を挿入しようとすると
すでにある文字列と重なって汚い表示んになってしまいます。</p>

<p><img src="https://rcmdnk.com/images/post/20200531_jpwt.jpg" alt="20200531_jpwt.jpg" class="pic" /></p>

<p>決定すればちゃんと挿入されて大丈夫なんですが、入力中が
非常に見づらいです。</p>

<p>他のターミナルではどうなのか、というと、</p>

<p><img src="https://rcmdnk.com/images/post/20200531_jpwsltty.jpg" alt="20200531_jpwsltty.jpg" class="pic" /></p>

<p>こんな感じで背景、文字の色を反転させて下の文字が見えないような状態にして
入力が行われます。</p>

<p>これが結構日本語を使う上では辛い。</p>

<h2 id="windows-terminal以外のターミナル">Windows Terminal以外のターミナル</h2>

<p>Windows用のターミナルは結構いろいろなものがあります。</p>

<blockquote>
  <p><a href="https://www.hanselman.com/blog/WhatsTheDifferenceBetweenAConsoleATerminalAndAShell.aspx">What’s the difference between a console, a terminal, and a shell? - Scott Hanselman</a></p>
</blockquote>

<blockquote>
  <p><a href="https://blog.kamijin-fanta.info/2019/12/windows-wsl-terminal/">Windows10 WSLのターミナル事情 - kamijin-fanta</a></p>
</blockquote>

<blockquote>
  <p><a href="https://www.reddit.com/r/neovim/comments/8k99gn/best_terminal_for_neovim_and_wsl_on_windows_10/">Best terminal for neovim and WSL on Windows 10 : neovim</a></p>
</blockquote>

<p>WSLをインストールするとデフォルトで使える様になるものや
Cygwin時代から使われているmintty、それをWSL用にしたものなど。</p>

<blockquote>
  <p><a href="https://www.atmarkit.co.jp/ait/articles/1812/13/news031.html">WSLのコンソールを便利で高機能な「wsltty」に置き換える：Tech TIPS - ＠IT</a></p>
</blockquote>

<p>また、Electronで作ったマルチプラットフォームなHyperも使えます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/07/24/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/20160724_hyperterm.gif" width="120" height="90" alt="20160724_hyperterm" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/07/24/computer-mac/">ターミナル作業が爽快になるターミナルエミュレーター: HyperTerm</a></div></li></ul>

<p>HyperとかならMacとかと共通で使えます。</p>

<p>今回関係ないですが、Mac用のものもいろいろなものがあります。</p>
<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/02/14/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/Terminal_120_90.jpg" width="120" height="90" alt="Terminal_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/02/14/computer-mac/">Macで使えるターミナルエミュレーターアプリ達</a></div></li></ul>

<p>この中でWSLのデフォルトのターミナルを最初使ってましたが、
これだとVimのモード変換時に変なずれが起こる様になってました。</p>

<p>今年のはじめくらいに色々試してた時にそういったメモが残ってるんですが、
今やってみるとそんな問題はなくなっている様でした。</p>

<p>ただ、一つ問題として、フォントがデフォルトでMSゴシックなんですが、
これをコード用のCascadia Monoとかにしてみると、
日本語もこのフォントで表示しようとするのか化けてしまいます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2019/09/23/computer-windows-mac-putty-iterm2/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20190923_puttycascadiacode_120_90.jpg" width="120" height="90" alt="20190923_puttycascadiacode_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2019/09/23/computer-windows-mac-putty-iterm2/">Microsoftの新しいフォントCascadia Codeを試す</a></div></li></ul>

<p>上記のVimの問題がHyperとかでも起こっていたので、
使っていたのはwslttyでした。</p>

<p>wslttyでは最初からVimのずれな問題も起きず、フォントを英字用フォントにしても
日本語はちゃんと日本語フォントで表示してくれます。</p>

<p>一つ気になるのがウィンドウをリサイズした時に、それに引っ張られてフォントのサイズが変わってしまうこと。</p>

<p>毎回<i class="key">Ctrl</i>-<i class="key">0</i>を押して元のフォントサイズに戻したりしています。</p>

<p>ただ他に比べると問題が一番少ないので利用中。</p>

<p>Windows Terminalに関してはこのVimな問題も無く、
リサイズしてもフォントの大きさは変わらず、良いな、とは思ったのですが。</p>

<h2 id="まとめ">まとめ</h2>

<p>Windows Terminalがバージョン1.0で正式リリースされたということですが、
画面分割などかなり頑張ってるな、という印象。</p>

<p>ただ、個人的にその辺はMacなどのターミナルでもそうなんですが一切使っておらず必要のない部分。
タブも同様不要な機能。</p>

<p>単に安定して、まともに日本語が扱えるターミナル、というのが求めるものなのですが、
上にも書いたとおりちょっとまだ日本語とかは難しい点がありそうです。</p>

<p>カーソル表示もちょっと気になる所。</p>

<p>その辺の気になる点があり、結局今の所wslttyを使い続けようかな、と思っています。</p>

<p>ただ、Windows Terminalはsshを直接するプロファイルが作れたり、色々と面白い点もありますし、
OSSで開発も活発っぽいので、
フィードバックしたりして使いやすいものになって行ってくれれば、とは思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash on Ubuntu on WindowsでGNU screenが使える様になった]]></title>
    <link href="https://rcmdnk.com/blog/2016/09/01/computer-windows-ubuntu-bash/"/>
    <updated>2016-09-01T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/09/01/computer-windows-ubuntu-bash</id>
    <content type="html"><![CDATA[<p>先日のAnniversary UpdateによってWindows 10の標準装備になった
Bash on Ubuntu on Windowsですが、現状GNU screenが使えません。</p>

<p>tmuxはAnniversary Update時には使える様になっていたようですが、
screenの方もなんとか使える様になるみたいです。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#gnu-screen-on-bash-on-ubuntu-on-windows" id="markdown-toc-gnu-screen-on-bash-on-ubuntu-on-windows">GNU screen on Bash on Ubuntu on Windows</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="gnu-screen-on-bash-on-ubuntu-on-windows">GNU screen on Bash on Ubuntu on Windows</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160605_bashonubuntuonwindows_120_90.jpg" width="120" height="90" alt="20160605_bashonubuntuonwindows_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/">Windowsに採用されたBash (Ubuntu)を試してみる</a></div></li></ul>

<p>Bash on Ubuntu on Windowsはまだ完全なUbuntuとは行かない感じで
使えなかったりするものがいくつかあったりします。</p>

<p>その一つがGNU screenです。</p>

<p>screenがデフォルトで入ってたかどうか忘れましたが(多分最初から入ってた気が)、
入ってなければ</p>

<pre><code>$ sudo apt-get install screen
</code></pre>

<p>で入れられます。</p>

<p>ただ、立ち上げようとすると</p>

<pre><code>$ screen
Cannot make directory '/var/run/screen': Permission denied
</code></pre>

<p>こんな感じでディレクトリが作れないと言われるので、</p>

<pre><code>$ sudo mkdir /var/run/screen
</code></pre>

<p>で作ってあげてから<code>screen</code>すると</p>

<pre><code>[screen is terminating]
</code></pre>

<p>と出て終了してしまいます。</p>

<p>また、’/var/run/screen’はBashのターミナルを終了するたびに消えています。</p>

<p>さらにはちょっと前まで上に書いたようなPermission deniedが出てたんですが、
今やってみたところ、ディレクトリが無くてもいきなり
<code>[screen is terminating]</code>の方が出るようになってました。</p>

<p>GitHubにある
<a href="https://github.com/Microsoft/BashOnWindows">BashOnWindows</a>
のレポジトリにもIssuesに上がっていたんですが、
先ほど使えるようになった、という解答が上がってきました。</p>

<blockquote>
  <p><a href="https://github.com/Microsoft/BashOnWindows/issues/774#issuecomment-243893844">[screen is terminating] · Issue #774 · Microsoft/BashOnWindows</a></p>
</blockquote>

<p>まだ正式リリースには入っていないようですが、
ベータビルドの方では使えている様です。</p>

<p>残っている問題点としてファンクションキーが使えない、と言ったことがあるようですし、
<code>sudo</code>を付ける必要があるなど微妙な所はあって(これは多分上の<strong>/var/run/screen</strong>ディレクトリが消えると言うことへの対処?)、
おそらくより多くのユーザーが試すと色々不具合が出てきそうではありますが
取り敢えずは動いた、ということで。</p>

<p>GNU screenが使えないということで全く使っていませんでしたが、
使えるようになれば少しは何かやる気が起きるかも。</p>

<p>ちなみにtmuxの方はもっと早い段階で動く様になっていました。</p>

<blockquote>
  <p><a href="https://github.com/Microsoft/BashOnWindows/issues/40">tmux does not work as usual · Issue #40 · Microsoft/BashOnWindows</a></p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 10でBash on Ubuntu on Windowsも含まれるAnniversary Updateの提供開始]]></title>
    <link href="https://rcmdnk.com/blog/2016/08/04/computer-windows-ubuntu-bash/"/>
    <updated>2016-08-04T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/08/04/computer-windows-ubuntu-bash</id>
    <content type="html"><![CDATA[<p>8月2日にWindows 10で
Anniversary Updateと呼ばれる大型のアップデートの提供が開始されました。</p>

<p>この中にはWindowsでネイティブにBashを走らせる
Bash on Ubuntu on Windowsという機能も含まれています。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-10-anniversary-update" id="markdown-toc-windows-10-anniversary-update">Windows 10 Anniversary Update</a></li>
  <li><a href="#bash-on-ubuntu-on-windows" id="markdown-toc-bash-on-ubuntu-on-windows">Bash on Ubuntu on Windows</a></li>
  <li><a href="#ダークテーマ" id="markdown-toc-ダークテーマ">ダークテーマ</a></li>
  <li><a href="#スタートメニュー周り" id="markdown-toc-スタートメニュー周り">スタートメニュー周り</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-10-anniversary-update">Windows 10 Anniversary Update</h2>

<p>8月2日に提供開始された様ですが、
まだ<strong>設定</strong>の<strong>更新とセキュリティ</strong>からアップデートをチェックしても
入らない場合は
<a href="https://www.microsoft.com/ja-jp/software-download/windows10">Windows 10</a>
のページに有る<strong>今すぐアップデート</strong>ボタンを押してツールをダウンロードし実行します。</p>

<p>最新のビルド(現在だとバージョン 1607 (OS ビルド 14393))でない場合、
アップデートをダウンロードしてインストールする事ができます。</p>

<blockquote>
  <p><a href="http://news.mynavi.jp/special/2016/windows10anniversary/">大更新に完全対応!! Win10大百科 (1) 2回目の大型アップデート「Anniversary Update」 マイナビニュース</a></p>
</blockquote>

<blockquote>
  <p><a href="http://mspoweruser.com/windows-10-anniversary-update-review/">Windows 10 Anniversary Update Review - MSPoweruser</a></p>
</blockquote>

<p>一新するようなアップデートらしく、アップデートの際再起動すると
一部初期設定を行う様な画面に入ります。</p>

<p>Cortanaがロック画面で使えるようになったり、
やMicrosoft Edgeで拡張機能が使えるようになったり
その辺にも大きな変更があるようです。</p>

<p>ただ、その辺はあまり使っていないので詳しくは上のリンク等を参照してもらうとして、
以下には気になったものをいくつか。</p>

<h2 id="bash-on-ubuntu-on-windows">Bash on Ubuntu on Windows</h2>

<p>一部の人には非常に大きなアップデートかもしれない
BashをWindowsが自らWindows内に実装したもの。</p>

<p>これまでは
Windows Insider Programに参加して
Insider PreviewというWindowsのベータ版をインストールすることで
手に入れる事ができましたが、
今回のアップデートで通常版のWindowsにもBashが含まれている状態になります。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160605_bashonubuntuonwindows_120_90.jpg" width="120" height="90" alt="20160605_bashonubuntuonwindows_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/">Windowsに採用されたBash (Ubuntu)を試してみる</a></div></li></ul>

<p>ただし、最初から有効になってるわけではないので、上の
ポストにある
<strong>開発者向け機能を使う</strong>、
<strong>Bashの有効化</strong>を行う必要があります。</p>

<p>まあ、試しに遊んで見る分には良いかもしれません。</p>

<p>が、上のポストにも書いたとおり、このBashの中からは
一応Windows領域のファルは見えるものの
Windowsアプリで開いたりすることはコマンドラインからは出来ず、
また、色々とWindows関連のことを管理することも出来ず、
基本的にはWindowsの中にLinux環境を作ってあげてる、と言った感じです。</p>

<p>Virtual MachineでLinuxを入れた場合との違いは
余計なもの無しでLinux環境を作れるのでより軽い、と言った所。</p>

<p>ただ今はノートPCでもそれなりにスペックが高いものが多いので
敢えてWindows使ってLinuxの作業をしたい、というような人が
軽いという理由で使うか、というとちょっと疑問。。。
環境も決まったものになってしまいますし。</p>

<p>Windows環境と色々やりたければCygwinの方が出来る事は断然多いです。</p>

<p>まあ、今更WindowsをUnixベースにするなんてことは無いでしょうが、
せっかく”native”に動くということなので
閉じたLinuxではなくてWindows領域ももうちょっといじれるようなものになればな、と思ってます。</p>

<h2 id="ダークテーマ">ダークテーマ</h2>

<p><strong>設定</strong>で<strong>個人用設定</strong><i class="fa fa-arrow-right"></i><strong>色</strong>に進むと
下の方に<strong>アプリのモードを選ぶ</strong>という項目があり、
ここで<strong>白</strong>か<strong>黒</strong>が選べます。</p>

<p><strong>白</strong>がデフォルトですが、<strong>黒</strong>を選ぶとこんな感じでダークなテーマに。</p>

<p><img src="https://rcmdnk.com/images/post/20160804_windows10dark.jpg" alt="20160804_windows10dark.jpg" class="pic" /></p>

<p>ただし、現時点でこのモードに対応しているものはほとんどないみたいで、
この設定や電卓位で、
エクスプロラーやEdgeなんかはそのままです。
他のMicrosoftで無いアプリも当然そのまま。</p>

<p>まあそのうち少しずつ対応したものが出てくるのかもしれません。</p>

<h2 id="スタートメニュー周り">スタートメニュー周り</h2>

<p>これまでスタートメニューは開くと上の方には<strong>良く使うアプリ</strong>、
下の方に<strong>設定</strong>や<strong>電源</strong>、また
<strong>全てのアプリ</strong>という項目がありました。</p>

<p><strong>全てのアプリ</strong>がなくなり、一番上に<strong>スタート</strong>と言う項目が出来、
それを開くと<strong>良く使うアプリ</strong>や他の全てのアプリが表示される様になっています。
また、<strong>スタート</strong>を開くと下のほうの項目はアイコンだけになり
横に残る感じになります。</p>

<p><img src="https://rcmdnk.com/images/post/20160804_startmenu.jpg" alt="20160804_startmenu.jpg" class="pic" /></p>

<p><strong>スタート</strong>を開いているかどうかは保存されるので
一度開いておけば常に開いた状態になります。</p>

<p>アイコンだけになるものは分かりやすいエクスプローラー、設定、電源とかなので
常に開いた状態で使う感じが多いかと思います。</p>

<h2 id="まとめ">まとめ</h2>

<p>その他にも色々と細かい点や中身の部分での変更もあるみたいですが
Windows 10の再出発といった感じかも知れません。</p>

<p>Windows 10の無料アップグレードが終わったところで敢えてという感じなのでしょうか?</p>

<p>スタートメニューの変更は結構使いやすくなったと思います。</p>

<p>その他のCornataやEdgeの変更は自分では普段使わないのであれですが、
内容を見てみると普段使ってる人なら結構便利になるんじゃないかな、と言った感じはします。</p>

<p>Bashはこれで誰でもすぐに使える様になったので
方向性も含めて上手いこと思う方へ進んで行ったらな、とは思ってます。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windowsに採用されたBash (Ubuntu)を試してみる]]></title>
    <link href="https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash/"/>
    <updated>2016-06-05T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/06/05/computer-windows-ubuntu-bash</id>
    <content type="html"><![CDATA[<p>ちょっと前に<a href="https://twitter.com/windowsdev/status/715211234702966785/photo/1">WindowsがBashをサポートする</a>
と言う発表をして、今年の夏頃からサポートしたバージョンがWindows 10のアップデートで配布される
予定です。</p>

<p>現時点でも
<a href="https://insider.windows.com/">Windows Insider Program</a>
に参加することで現在進んでいるプロジェクトを先取りして使うことが出来、
その中にこのBashのサポートも既に含まれているので
ちょっと使ってみました。</p>

<p>途中、インストールで躓いたところとかもあったのでその辺もメモしておきます。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windows-10-anniversary-update" id="markdown-toc-windows-10-anniversary-update">Windows 10 Anniversary Update</a></li>
  <li><a href="#run-native-bash-on-ubuntu-on-windows" id="markdown-toc-run-native-bash-on-ubuntu-on-windows">Run native Bash on Ubuntu on Windows</a>    <ul>
      <li><a href="#windows-insider-programへの参加" id="markdown-toc-windows-insider-programへの参加">Windows Insider Programへの参加</a></li>
      <li><a href="#insider-previewの入手インストール" id="markdown-toc-insider-previewの入手インストール">Insider Previewの入手、インストール</a></li>
      <li><a href="#windowsのバージョンの確認" id="markdown-toc-windowsのバージョンの確認">Windowsのバージョンの確認</a></li>
      <li><a href="#デスクトップに表示が出る" id="markdown-toc-デスクトップに表示が出る">デスクトップに表示が出る？</a></li>
      <li><a href="#開発者向け機能を使う" id="markdown-toc-開発者向け機能を使う">開発者向け機能を使う</a></li>
      <li><a href="#bashの有効化" id="markdown-toc-bashの有効化">Bashの有効化</a></li>
    </ul>
  </li>
  <li><a href="#現在インストールされているubuntubash" id="markdown-toc-現在インストールされているubuntubash">現在インストールされているUbuntu/Bash</a></li>
  <li><a href="#ディレクトリ構造" id="markdown-toc-ディレクトリ構造">ディレクトリ構造</a></li>
  <li><a href="#日本語について" id="markdown-toc-日本語について">日本語について</a></li>
  <li><a href="#root権限" id="markdown-toc-root権限">root権限</a></li>
  <li><a href="#大文字小文字" id="markdown-toc-大文字小文字">大文字小文字</a></li>
  <li><a href="#シンボリックリンク" id="markdown-toc-シンボリックリンク">シンボリックリンク</a></li>
  <li><a href="#xサーバー" id="markdown-toc-xサーバー">Xサーバー</a></li>
  <li><a href="#gnu-screentmux" id="markdown-toc-gnu-screentmux">GNU screen/tmux</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
  <li><a href="#windowsでのサードパーティーlinux環境" id="markdown-toc-windowsでのサードパーティーlinux環境">WindowsでのサードパーティーLinux環境</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="windows-10-anniversary-update">Windows 10 Anniversary Update</h2>

<div class="postscript">
  <p><strong>追記: 2016/08/04 </strong></p>

  <p>8月2日にAnniversary Updateと呼ばれる大型アップデートが提供開始され
その中にBash on Ubuntu on Windowsも含まれています。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/08/04/computer-windows-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160804_windows10dark_120_90.jpg" width="120" height="90" alt="20160804_windows10dark_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/08/04/computer-windows-ubuntu-bash/">Windows 10でBash on Ubuntu on Windowsも含まれるAnniversary Updateの提供開始</a></div></li></ul>

  <p>従って以下のWindows Insider Programなどへの参加はもう不要で、
<strong>開発者向け機能を使う</strong>以降の設定で使えるようになります。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="run-native-bash-on-ubuntu-on-windows">Run native Bash on Ubuntu on Windows</h2>

<blockquote>
  <p><a href="https://msdn.microsoft.com/en-us/commandline/wsl/about">Bash on Ubuntu on Windows  MSDN</a></p>
</blockquote>

<p>以下の14316というビルドでBashをネイティブにWindows上で走らせる事が出来るようになっています。</p>

<blockquote>
  <p><a href="https://blogs.windows.com/windowsexperience/2016/04/06/announcing-windows-10-insider-preview-build-14316/">Announcing Windows 10 Insider Preview Build 14316  Windows Experience Blog</a></p>
</blockquote>

<p>このビルドを手に入れるためにはまず、
<a href="https://insider.windows.com/">Windows Insider Program</a>
に参加する必要があります。</p>

<p>また、今回行っているのは64 bit版のWindows 10 Home Editionです。</p>

<h3 id="windows-insider-programへの参加">Windows Insider Programへの参加</h3>

<p><strong>設定</strong>の<strong>更新とセキュリティ</strong><i class="fa fa-arrow-right"></i><strong>Windows Update</strong>
から<strong>詳細オプション</strong>へ行き、<strong>Insider Previewビルドの入手</strong>というところで
<strong>開始する</strong>を押すと、<strong>Windows Insider Programにご参加ください</strong>と言ったダイアログが出るので、
そこで<strong>登録</strong>を押しても上のページに行けます。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_insiderpreviewstart.jpg" alt="20160605_insiderpreviewstart.jpg" class="pic" /></p>

<p><img src="https://rcmdnk.com/images/post/20160605_insiderpreviewjoin.jpg" alt="20160605_insiderpreviewjoin.jpg" class="pic" /></p>

<p>また、アカウントを持ってるけどWindowsに登録してなかったり別のアカウントを使ってる様な場合、
ここでアカウントを切り替えたりすることも出来ます。</p>

<p>大概の場合、Windows 10を使っている場合はMicrosoftアカウントを登録してあると思うので
そのアカウントでWebページでもログインし、Insider Programに参加します。</p>

<p>Webで参加登録後、先ほどの<strong>Insider Previewビルドの入手</strong>のところで
再び<strong>開始する</strong>を押すと実際に入手する作業に入れます。</p>

<p>ここでちょっと注意が必要なのは、<strong>Insider Previewビルドの入手</strong>を開始する前に、
<strong>プライバシー</strong><i class="fa fa-arrow-right"></i><strong>フィードバックの間隔</strong>
の設定をいじっている場合、<strong>フィードバックを求められる頻度</strong>及び
<strong>デバイスのデータをMicrosoftに送信する</strong>をそれぞれデフォルトの
<strong>自動(推奨)</strong>、<strong>完全(推奨)</strong>に戻しておく必要があります。</p>

<p>これを戻しておかないと、上の<strong>開始</strong>ボタンを押しても、
既にInsider Programに参加したアカウントを選んでいても延々と
<strong>Windows Insider Programにご参加ください</strong>のダイアログが出てきてしまいます。</p>

<p>Insider Programは正式配布前のビルドを試用してフィードバックをもらおう、というものなので
当然フィードバックありきの配布なわけで、ここをオフにしてたら使えない、というわけです。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_feedback.jpg" alt="20160605_feedback.jpg" class="pic" /></p>

<p>上の絵はInsider Program開始後ですが、開始後はこれらのオプションが変更できない様になっています。</p>

<p>ここで結構悩んで途中で辞めそうになった…</p>

<blockquote>
  <p><a href="http://answers.microsoft.com/ja-jp/insider/forum/insider_wintp-insider_install/windows-10-pro-insider-preview/9ac60c81-82e4-4a1c-929d-352d337e36aa">Windows 10 Pro Insider Preview 再インストール - マイクロソフト コミュニティ</a></p>
</blockquote>

<h3 id="insider-previewの入手インストール">Insider Previewの入手、インストール</h3>

<p>とういうことで、無事開始することが出来たら次はビルドの入手の設定をしておきます。</p>

<p>先ほどの<strong>Windows Update</strong>の<strong>詳細オプション</strong>の所に
今度は<strong>Insiderのレベルを選んでください。設定を変更した後ではビルドの受け取りにしばらく時間がかかります。</strong>という項目があり、下にバーがあるので
一番右のMaxの<strong>ファスト(Fast)</strong>にしておきます。</p>

<p>これは新しいビルドをどれだけ頻繁に入手するか、というオプションですが、
差し当たり早く欲しいので<strong>ファスト(Fast)</strong>に。
(ただ、最初の入手に関してどれだけ意味があるのかはちょっと良くわかってません。)</p>

<p>この設定をすると暫くすると入手するんですが、
これは<strong>Windows Update</strong>の<strong>更新プログラムのチェック</strong>を押しても
すぐに入手することは出来ません。</p>

<p>ネットにつながってる時に自動的にチェックして入手出来る様になるらしく、ここまで来たらしばらく待つ他ありません。</p>

<p>早ければ1時間以内、ヘタすると1日位かかるみたいですが、今回は
設定して1時間位したら入手できる様になりました。</p>

<p>ここでも更新をチェックしても更新されないためにきちんと設定できてないんじゃないか?
と疑ったりして、色々チェックしなおしたりしてましたが、
ここはもう待つしかありませんので暫くは忘れて放っておく位な気持ちで。</p>

<p>しばらくして<strong>Windows Update</strong>を見て、<strong>更新プログラムを利用できます。</strong>
の表示の下に<strong>Windows 10 Insider Preview XXXXX。</strong>の様な表示があれば
Insider Previewを入手出来るようになってるので
その下に出ている<strong>今すぐインストール</strong>ボタンを押して
インストールを開始します。</p>

<p>そうなってないかぎりは辛抱強く待つだけです。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_insiderpreviewinstall.jpg" alt="20160605_insiderpreviewinstall.jpg" class="pic" /></p>

<p>初めてInsider Previewを入れるときは差分が多くあるので結構時間がかかります。
(開始して寝ましたが多分最低1時間程度はかかっていた様です。)</p>

<p>インストールが終わったら再起動が必要ですが、再起動して更新するにも
結構時間がかかります。(数十分程度。)
途中で何回も再起動をしたりもするので、特にこちらの再起動の方は時間がある時に行う必要があります。
(入手するだけならバックグラウンドでも出来るので。)</p>

<p>Insider Previewのインストールが終わって再起動すると、
最初ログイン画面が青色一色になってたりログイン後にも
しばらくマウスも使えない状態で待たされたりしますが、
一通り準備が終わると今まで通りの設定で使える様になります。</p>

<p>ただ、一部機能などがリセットされるらしく、
レジストリをいじって変更していた<i class="key">CapsLock</i>、<i class="key">Alt</i>、<i class="key">Ctrl</i>の
交換<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>
はリセットされていました。
なのでこれは再び設定しておきました。</p>

<p>その他は今のところ特に気づいたところは特にありません。</p>

<p><strong>設定</strong>の項目自体が色々と変更されてるのでその辺で細かい違いがあるかもしれません。</p>

<h3 id="windowsのバージョンの確認">Windowsのバージョンの確認</h3>

<p>Insider Preview版をインストールしましたが、ここでWindowsのバージョンの確認をしておきます。</p>

<p>Windowsの細かいバージョンを確認するには、
<i class="key">Win</i>-<i class="key">R</i>で<strong>ファイルを指定して実行</strong>を起動するか
Cortanaの検索を使い、<code>winver</code>を入力して実行します。</p>

<p>そうするとこんな画面が出てくるので、ここでビルドが<code>14316</code>より大きければ
Bashの機能が使える様になっています。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_winver.jpg" alt="20160605_winver.jpg" class="pic" /></p>

<p>Insider Previewをインストールしていれば14000より大きなこんな数字になっていると思いますが、
現状の通常バージョン(Windows 10 Home Editionで確認)だと
<code>10586.318</code>になっていました。</p>

<p>もしこんな感じの数字であればまだインストールが出来ていないので、
入手が終了しているのであれば
<strong>設定</strong>の<strong>Windows Update</strong>などに行くと再起動して更新、的なボタンが有るはずなので
それを押して再起動、更新する必要があります。</p>

<h3 id="デスクトップに表示が出る">デスクトップに表示が出る？</h3>

<p>Insider Preview版をインストールすると強制的にデスクトップに表示が出るようです。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_desktop.jpg" alt="20160605_desktop.jpg" class="pic" /></p>

<p>こんな感じで右下に<strong>Insider Preview</strong>の表示が出て、壁紙とかを変えても
常に表示される様な状態になっています。</p>

<p>ちょっと気になる人は気になるかも。。。</p>

<h3 id="開発者向け機能を使う">開発者向け機能を使う</h3>

<p>Bashを有効化する前に、機能を使えうために<strong>開発者モード</strong>に設定する必要があります。</p>

<p>これは、<strong>設定</strong><i class="fa fa-arrow-right"></i><strong>更新とセキュリティ</strong>
<i class="fa fa-arrow-right"></i><strong>開発者向け</strong>に行くと
<strong>開発者モード</strong>を選べる項目があるのでそれを選びます。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_developer.jpg" alt="20160605_developer.jpg" class="pic" /></p>

<h3 id="bashの有効化">Bashの有効化</h3>

<p>ここまで来たらBashを有効化出来ます。</p>

<p>スタートボタンを右クリックするなどして出てくる項目からコントロールパネルを開き、
<strong>プログラム</strong><i class="fa fa-arrow-right"></i><strong>Windowsの機能の有効化または無効化</strong>を開きます。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_winfunctions.jpg" alt="20160605_winfunctions.jpg" class="pic" /></p>

<p>Insider Previewが入っていて上の設定がきちんとできていれば、
ここに<strong>Windows Subsystem for Linux (Beta)</strong>という項目があるはずなので
それにチェックを入れて<strong>OK</strong>。</p>

<p>再起動を促されるので再起動します。</p>

<p>再起動したらコマンドプロンプトかPowerShellを起動して<code>bash</code>とコマンドを打ちます。
もしくは<strong>ファイルを指定して実行</strong>などから<code>bash</code>を直接起動してもOK。
(<strong>C:\Windows\System32\bash.exe</strong>を実行する。)</p>

<p>そうするとBashをインストールするかどうか聞かれるので<code>y</code>を入力するとBashのインストールが始まります。</p>

<p><img src="https://rcmdnk.com/images/post/20160605_bashinstall.jpg" alt="20160605_bashinstall.jpg" class="pic" /></p>

<p>インストールが終わるとBash用のユーザー名やパスワードの設定を促されます。
このユーザー名などはWindowsの物と同じでなくても構いません。
(PowerShellだと日本語表示になりますが、なんか表示が二重になってたりしておかしかったです。。。)</p>

<p><img src="https://rcmdnk.com/images/post/20160605_bashsetting.jpg" alt="20160605_bashsetting.jpg" class="pic" /></p>

<p>設定が終わるとBashが始まります。</p>

<p>その後は
スタートアップに<strong>Bash on Ubuntu on Windows</strong>という項目が追加されているはずなので
それを起動するといきなりBashなコマンドプロンプトが使えます。
(この項目自体は<strong>bash.exe</strong>へのショートカットになっていて、
引数として<code>~</code>を取る様な形になっています。)</p>

<p><img src="https://rcmdnk.com/images/post/20160605_bashonubuntuonwindows.jpg" alt="20160605_bashonubuntuonwindows.jpg" class="pic" /></p>

<p>コマンドプロンプトなりPowerShellで<code>bash</code>と打って始めることも出来ます。</p>

<p>これでWindowsでネイティブなBashが使えるようになりました。</p>

<h2 id="現在インストールされているubuntubash">現在インストールされているUbuntu/Bash</h2>

<p>見てみるとこんな感じです。</p>

<pre><code>$ lsb_release  -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.4 LTS
Release:        14.04
Codename:       trusty
$ uname -a
Linux DESKTOP-IIK93T3 3.4.0+ #1 PREEMPT Thu Aug 1 17:06:05 CST 2013 x86_64 x86_64 x86_64 GNU/Linux
$ bash --version
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
</code></pre>

<p>Ubuntuなので<code>apt-get</code>を使ってパッケージをインストール出来る様になっています。</p>

<h2 id="ディレクトリ構造">ディレクトリ構造</h2>

<p>Bashのホームディテクトリは、Windows上では
<strong>C:\Users\&lt;WindowsUserName&gt;\AppData\Local\lxss\home\&lt;UbuntuUserName&gt;</strong>
になります。</p>

<p><strong>lxss</strong>ディレクトリなのですが、エクスプローラーからだと
<strong>隠しファイル</strong>を表示する様になっていても表示されず、
<strong>Local</strong>まで行った後にアドレスバーに直接<code>\lxss</code>を追加すると中を見ることが出来ました。
(何やら初めて見る仕様です。。。)</p>

<div class="postscript">
  <p><strong>追記: 2016/08/04 </strong></p>

  <p>コメントで指摘していただきましたが、
これは初めて見る仕様、ではなく、もうひとつ、
<strong>保護されたオペレーティング・システムファイルを表示しない</strong>というフォルダオプションを切る必要があります。
このオプションは以前のWindowsバージョンからずっとあるものです。</p>

  <p>隠しファイルよりもう一段階高いレベルで保護されてるファイル、フォルダの表示を設定する項目。</p>

  <p>Windows 10ではエクスプローラーでフォルダを開いて上のタブの<strong>表示</strong>を押して表示に関するオプションを出すと、
<strong>隠しファイル</strong>等の表示を簡単に変更できる様になっています。</p>

  <p><img src="https://rcmdnk.com/images/post/20160605_folderoption.jpg" alt="20160605_folderoption.jpg" class="pic" /></p>

  <p>ただ、ここに全てのオプションがあるわけではなく、
さらに<strong>オプション</strong>を起動して<strong>表示</strong>タブに行くと
詳細設定が出来る様になっています。</p>

  <p>この中に<strong>隠しファイル</strong>の表示設定もありますが、
一番下に
<strong>保護されたオペレーティング・システムファイルを表示しない</strong>という項目があり、
デフォルトではチェックされています。</p>

  <p><img src="https://rcmdnk.com/images/post/20160605_folderoptionprotect.jpg" alt="20160605_folderoptionprotect.jpg" class="pic" /></p>

  <p>このチェックを外すと<strong>lxss</strong>のフォルダも見える様になります。</p>

  <p>エクスプローラーの<strong>表示</strong>の項目で簡単に隠しファイルとかの表示が変更できる様になってたので
昔ながらのオプションの変更はもう必要ない、と勘違いしてたのが気づかなかった理由です。</p>

  <p>それでも<strong>表示</strong>のところに<strong>オプション</strong>と右に大きくあるのに
気付けなかったな、、、と。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>さらに
<strong>C:\Users\&lt;WindowsUserName&gt;\AppData\Local\lxss\rootfs</strong>というデイxレクトリがあり
ここに<strong>usr</strong>や<strong>bin</strong>などのLinuxファイルが入っています。
こちらにも<strong>home</strong>はあるんですが、
中は空でWindows側からなにか作ってもUbuntu側の<strong>home</strong>には反映されないので、
どうも<strong>home</strong>だけは<strong>\lxss\home</strong>を使う仕様になってる模様。</p>

<p>これから分かるように、Bash on Ubuntu on Windowsでは各ユーザーごとに
Linux環境を作る様になっているみたいです。</p>

<p>また、Bash側から
Windowsのディレクトリを見るには、
<strong>/mnt/c</strong>などからCドライブなどへアクセスが出来る様になっています。</p>

<h2 id="日本語について">日本語について</h2>

<p>Bash上では今のところ日本語を打つことが出来ません。</p>

<p>PowerShellなんかだと日本語を使えるのですが、
<code>bash</code>を起動すると日本語に切り替えができなくなります。
(BashなPowerShellにフォーカスがあるかぎりIMEを直接<strong>ひらがな</strong>とかにしようとしても出来ない。)</p>

<p>ただし、日本語を表示することは可能らしく、
日本語の内容のファイルを<code>cat</code>してみたり、
日本語のファイル名があるディレクトリで<code>ls</code>してみたところ正しく表示されました。</p>

<p>日本語が打てないのでVimとかで開いても文字やコピーこそ一応出来ますが、
削除も半角毎に行ってるっぽい感じでまともに使えません。</p>

<p>無理やりファイル操作とかをしたい場合、PowerShellから<code>bash -c</code>とコマンドの形で呼んで、</p>

<pre><code>&gt; bash -c "mv このふぁいる あのふぁいる"
</code></pre>

<p>みたいな感じで操作しようと思えば出来ますが、まあ意味無いです。</p>

<h2 id="root権限">root権限</h2>

<p>root権限はユーザに与えられているので<code>apt-get</code>などはユーザーで直接できる、
みたいな話を見ましたが、<code>apt-get</code>してみたところ
Permission deniedで<strong>are you root?</strong>と聞かれてしまいました。</p>

<p>rootのパスワードなど設定してないので<code>su</code>しようが無いのですが、試しに</p>

<pre><code>$ sudo apt-get update
</code></pre>

<p>としてみるとユーザーのパスワードを聞かれ、パスワードを入力すると行けました。</p>

<pre><code>$ id
id=1000(user) gid=1000(user) groups=1000(user),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev)
</code></pre>

<p>みたいになっていて、<code>sudo</code>グループに全権限が与えられてるので全てのコマンドを
このユーザーで<code>sudo</code>出来るみたいです。</p>

<h2 id="大文字小文字">大文字小文字</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4838506961?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4838506961&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51Cv7ChquuL._SS90_CR0,0,120,90_.jpg" alt="ローマ字の書き方―大文字と小文字 単行本 – 1990/4" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/18/computer-windows-mac-linux/">ファイル名やディレクトリ名の大文字小文字</a></div></li></ul>

<p>上のポストに書いてあるとおり、
基本的にWindowsは大文字小文字を区別しません。</p>

<p>一方Linuxシステムでは区別します。</p>

<p>Bash on Ubuntu on Windowsの場合、<strong>/mnt/c</strong>などからWindows領域に行って作業すると
基本的に大文字小文字だけが違う別のファイルを作る事は出来ません。</p>

<pre><code>$ cd /mnt/c/Users/user
$ touch a A
$ du a A
0 a
</code></pre>

<p>としても<code>a</code>というファイルだけが出来ます。
一方、Ubuntu領域に行くと、</p>

<pre><code>$ cd
$ touch a A
$ du a A
0 a
0 A
</code></pre>

<p>と、<strong>a</strong>というファイルと<strong>A</strong>というファイルの2つができています。</p>

<p>実際エクスプローラーから覗いてみてもこの2つが確認できます。</p>

<p>Windowsは通常NTFSにフォーマットされたディスクを使いますが
NTFS自体は大文字小文字を区別できますがWindowsがアプリケーションとして区別しないようにしています。
なのでこの場合、Ubuntu領域に限っては区別するような特別な処置をしているみたいです。</p>

<p>この辺なかなか複雑なことをしてる感があります。</p>

<p>ただ、エクスプローラーから見えるには見えるものの、正しくは扱えないみたいで、</p>

<pre><code>$ echo aaa &gt; a
$ cat a
aaa
$ cat A
$
</code></pre>

<p>な状態でエクスプローラーから<strong>a</strong>をメモ帳で開いて見ると空でした。
<strong>A</strong>を削除してから再び<strong>a</strong>をメモ帳で開いてみると<code>aaa</code>と言う内容が見れました。</p>

<p>どうも<strong>a</strong>、<strong>A</strong>がある状態でエクスプローラーから開こうとしても
常に大文字の方だけをアプリケーションに名前として渡してしまう模様。</p>

<h2 id="シンボリックリンク">シンボリックリンク</h2>

<p>また、Cygwinなんかでシンボリックリンクを使おうとすると結構ややこしいのですが、
Bash on Ubuntu on Windowsのシンボリックリンクはまた面倒な仕様です。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/02/07/computer-windows-cygwin/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160207_gedit_120_90.jpg" width="120" height="90" alt="20160207_gedit_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/02/07/computer-windows-cygwin/">Windows 10でシンボリックリンクを利用する</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/06/25/computer-windows-cygwin/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130625_symboliclink_120_90.jpg" width="120" height="90" alt="20130625_symboliclink_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/25/computer-windows-cygwin/">Cygwin内外でリンクを共有する</a></div></li></ul>

<p>シンボリックリンクを作ってみたところ、Windows領域では
通常ファイルに見えますが、メモ帳とかで開こうとすると
<strong>ファイルにアクセス出来ません</strong>と出て開けません。</p>

<p>一方、Ubuntu領域で作ると開くことは出来ますが、中身には
リンク元のファイル名が入っています。</p>

<pre><code>$ touch a
$ ln -s a b
</code></pre>

<p>とすれば、<strong>b</strong>をメモ帳で開くと<code>a</code>となっている状態。</p>

<p>ただし、開けますが内容を変更しようとすると
<strong>プロセスはファイルにアクセスできません、別のプロセスが使用中です。</strong> と言われて
Windows側から変更を保存したりは出来ません。</p>

<p>というわけでWindows側とリンクを共有したり、そういった事は今のところ出来なそうです。</p>

<p>さらに、Ubuntu領域に対してWindows側からファイルを作ったりディレクトリを作った場合、
それらのものはBash側では見ることが出来ません。
(なので、上でHomeに作っても変換なし、と言った所はちょっと理解が違うかもしれません。)</p>

<p>どうもUbuntu領域は基本的にWindowsとは完全独立な体制にしたい感じになっています。</p>

<h2 id="xサーバー">Xサーバー</h2>

<p>Bash on Ubuntu on WindowsではXサーバーは直接サポートしないとなってますが、
自前でXサーバーを動かせばGUIなアプリも動かすことが出来ます。</p>

<p><a href="https://rcmdnk.com/windows/windowssoftware/#xming-9733973397339733">Xming</a>なり
CygwinのXサーバーなりなんでも良いんですが、
多分、今現在WindowsでXサーバーを立ち上げるのはMobaXtermを使うのが
一番簡単なのでそれでテスト。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2015/01/24/computer-windows-remote/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20150124_mobaxterm_120_90.jpg" width="120" height="90" alt="20150124_mobaxterm_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/01/24/computer-windows-remote/">MobaXterm: Windowsでのcygwinに代わるターミナル環境</a></div></li></ul>

<p>MobaXtermが入ってればアプリを立ち上げるだけでXサーバーも起動します。
MobaXtermのローカルターミナルで<strong>DISPLAY</strong>変数を見てみると</p>

<pre><code>$ echo $DISPLAY
127.0.0.1:0.0
</code></pre>

<p>となっているので、Bash on Ubuntu on Windowsのターミナルで、</p>

<pre><code>$ export DISPLAY=127.0.0.1:0.0
</code></pre>

<p>とします。(デフォルトでは値は設定されていません。また、ローカルホストなので
実際には<code>export DISPLAY=:0.0</code>だけでもOKです。)</p>

<p>これでXなアプリも使える様になったはずなのでテストしてみます。
適当なものが無かったので<code>apt-get</code>で<code>xclock</code>などXアプリをインストールして使ってみます。</p>

<pre><code>$ sudo apt-get install x11-apps
$ xclock
</code></pre>

<p>MobaXtermを起動した状態で<code>xclock</code>を立ち上げれば
時計がきちんと出てくるはずです。</p>

<p>Xサーバーが動いてなければ</p>

<pre><code>$ xclock
Error: Can't open display: 127.0.0.1:0.0
</code></pre>

<p>と言った感じのエラーが出ます。</p>

<p>もし本気でこのBash on Ubuntu on WindowsをXも含めて使いたい場合は
Xmingとかを使うべきだとは思いますが、
取り敢えずXサーバーを動かせばXなアプリも使える様です。</p>

<h2 id="gnu-screentmux">GNU screen/tmux</h2>

<div class="postscript">
  <p><strong>追記: 2016/09/01 </strong></p>

  <p>GNU screenやtmuxと言ったターミナルマルチプレクサなどは
色々と難しい点があるようで、
初期のBash on Ubuntu on Windowsでは両方共使えませんでした。</p>

  <p>ただ、tmuxの方はAnniversary Update時にには使えるようになっていて、
GNU screenに関しても使える様になったみたいです。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2016/09/01/computer-windows-ubuntu-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20160605_bashonubuntuonwindows_120_90.jpg" width="120" height="90" alt="20160605_bashonubuntuonwindows_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/09/01/computer-windows-ubuntu-bash/">Bash on Ubuntu on WindowsでGNU screenが使える様になった</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="まとめ">まとめ</h2>

<p>ちょっと触ってみた感じでは単純なBashシェルとしては普通に使えました。</p>

<p><code>ssh</code>なども入っているので他のサーバーにログインして使ったりも出来ます。</p>

<p>ただ、Linux環境をそのまま入れようとし過ぎているのか、
基本、Windows環境と独立したものが単に入っている感じになっています。</p>

<p>一応<strong>/mnt/</strong>からWindows側のファイルを見ることは出来ますが、
システムが違う物を無理やり繋げてる感じがして
余り実用的ではありません。</p>

<p>Xに関しては一応使えますが別途自分で用意しなくてはいけないので
Windowsネイティブ、という売りの意味が無くなってしまいます。</p>

<p>起動スピードに関してはCygwinやMobaXtermに比べて大分速く、
瞬時に立ち上がる感じがあるのは良い所だとは思います。</p>

<p>後は一応Ubuntuなので<code>apt-get</code>でパッケージをインストールすることが出来、
Cygwin(またはMobaXterm)の<code>apt-cyg</code>で用意されているものに比べれば
パッケージが充実してるかな、という点はあります。</p>

<p>ですが、例えばCygiwnでは<code>cygstart</code>というコマンドがあり、
所謂Macの<code>open</code>コマンド的なファイルをOSのアプリを使って開いたり
OSのアプリを実行するコマンドがありますが、
Bash on Ubuntu on Windowsではそのようなコマンドはありません。</p>

<p>これはそもそも思想が違うので今後出来るか、とわれると
根本的なコンセプトが変わらないかぎりは入ってこないと思います。</p>

<p>そもそもWindowsにBashが入る、ということで<strike>ユーザーが求めるのは</strike>
個人的に<strong>WindowsをBashで管理する</strong>、ということだと思うのですが、
これだと単にWindowsの中でBashを使える、というだけで
むしろCygwinやMobaXtermの単なる下位互換にしかならない感じです。</p>

<div class="postscript">
  <p><strong>追記: 2016/06/06 </strong></p>

  <p><strong>WindowsをBashで管理する</strong>が欲しいのは個人的には
Linux的な作業を行うのであれば手元のマシンで行うことがあまり無いからです。</p>

  <p>基本Linuxサーバーが別にあってそこに入って作業します。
前までのWindowsマシンでは中にVM環境作って作業するにはきつかったし
あまり現実的ではなかったですし。</p>

  <p>今はWindowsだとそういう開発をするのに全部手元のマシンでVMを使う人も多いのでしょうかね?
(Cygwinで開発してるというのは殆ど聞かないし、下に出したcoLinuxなんてのは
最近話にすら出てこないので。。。)</p>

  <p>ただ、逆に今の端末はノートPCでも十分なスペックを持ってる事が多く、
手元で開発を行う様な人ならVMでLinux立ち上げても十分使える様なものを持ってる事が多いと思います。</p>

  <p>だとすればやはりUNIXライクなコマンドが使えて嬉しいのは
ホントにネイティブにWindows内のシステム等にUNIXなコマンドラインから
アクセス出来る、というところだとは思うのですが。</p>

  <p>MacとWindowsで差を感じるのはやはりその部分なので。
まあ、個人的にですが。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>取り敢えず入れてみた、感しか無いんですが、
今後、Windowsを管理するためのBash、として進化してくれることを祈りつつ、ちょっと見守る感じです。
(現状CygwinやMobaXtermの方が圧倒的に使えて、このBashを使う意味は全く無いという結論。。。)</p>

<div class="postscript">
  <p><strong>追記: 2016/06/05 </strong></p>

  <p>個人的な思いはともかく、実際どういったものを作ろうとしてるか、というのは
Bash on Ubuntu on WindowsのFAQを見るとちょっと見えてきます。</p>

  <blockquote>
    <p><a href="https://msdn.microsoft.com/en-us/commandline/wsl/faq">Frequently Asked Questions  MSDN</a></p>
  </blockquote>

  <p>まず、これは<strong>Windows Subsystem for Linux (WSL)</strong>と呼ばれ
Windows内にLinux環境のサブシステムを作るためのもの、とのこと。</p>

  <blockquote><p>Why would I use WSL rather than Linux in a VM?</p><p>WSL requires fewer resources (CPU, memory and storage) than a full virtualized machine. WSL also allows you to run Linux command-line tools and apps alongside your Windows command-line, desktop and store apps, and to access your Windows files from within Linux. This enables you to use Windows apps and Linux command-line tools on the same set of files if you wish.</p><footer><strong>Frequently Asked Questions  MSDN</strong> <cite><a href="https://msdn.microsoft.com/en-us/commandline/wsl/faq">msdn.microsoft.com/en-us/wsl/&hellip;</a></cite></footer></blockquote>

  <p>特にこれを見ると仮想マシンでやってることをWindowsネイティブで出来る様にしたい、と行った感じです。
VM上で行うのに比べOS自体を立ち上げる必要がないため少ないリソースで
Linux環境を作る事が出来る、と。</p>

  <p>また優先度が高いものとして</p>

  <blockquote><p>1. A Bash environment for developers to run standard GNU command line tools such as grep, sed, awk<br />2. Provide access to the local hard drives through /mnt<br />3. Symlink support within the WSL environment<br />4. Linux user support<br />5. Provide the ability to run apt / apt-get for updates and package testing<br />6. Provide basic functionality for some languages:<br />    * NodeJS / npm<br />    * Python<br />    * Perl<br />    * Git<br />7. Command line editors / tools<br />    * vi<br />    * emacs<br />    * ssh</p><footer><strong>Frequently Asked Questions  MSDN</strong> <cite><a href="https://msdn.microsoft.com/en-us/commandline/wsl/faq">msdn.microsoft.com/en-us/wsl/&hellip;</a></cite></footer></blockquote>

  <p>が挙げられていますが、これらは大体出来てる感じです。</p>

  <p><strong>/mnt/</strong>からWindows領域を見ることはできるし
シンボリックリンクもWSL内ではきちんと機能しています。</p>

  <p>NodeやGit、またEmacsに関しては現状初期状態では入っておらず
<code>apt-get</code>で取ってくる必要があります。</p>

  <p>と言った感じで目指されてるのはWindowsでもVMなどを立ちあげなくてもパッと
Unix系コマンドを使ってテストとか出来る様にしたい、という所みたいです。</p>

  <p>これを使ってWindows側を管理したりどうこうする、なんてことは今のところ
あまり無い模様。
その辺はやはりコマンドプロンプトなりPowerShellがあるでしょ、ということかもしれませんが。</p>

  <p>むしろ領域を完全に分けて仮想状態を作ってる辺り、逆に
Windows環境とは敢えて切り分けて置く、という考えもありそうな感じすらします。
シンボリックリンクとかWindowsの物とは全く別の物を使ったりしてるみたいなので
単に環境をまとめるのがまだ難しいだけかもしれませんが。</p>

  <p>Bash on Ubuntu on Windowsに対する追加アイデアみたいなものは
下で投稿され、必要とされるものは取り入れられて行っている様です。</p>

  <blockquote>
    <p><a href="https://wpdev.uservoice.com/forums/266908-command-prompt/filters/top">Command Prompt / Console / Bash on Ubuntu on Windows: Top (390 ideas) – Welcome to the Windows developer feedback site!</a></p>
  </blockquote>

  <p>また、GitHubにもIssue専用のREADMEだけのレポジトリが出来ていて、
問題などを見つけたたらこちらから報告するみたいです。</p>

  <blockquote>
    <p><a href="https://github.com/Microsoft/BashOnWindows/issues">Issues · Microsoft/BashOnWindows</a></p>
  </blockquote>

  <p><strong>追記ここまで</strong></p>
</div>

<h2 id="windowsでのサードパーティーlinux環境">WindowsでのサードパーティーLinux環境</h2>

<div class="postscript">
  <p><strong>追記: 2016/06/05 </strong></p>

  <p>WindowsではサードパーティーなアプリでLinux環境を構築することが昔から行われています。</p>

  <p>一番有名なのはやはり
<a href="https://www.cygwin.com/">Cygwin</a>。</p>

  <p><a href="https://rcmdnk.com/blog/tags/cygwin/">/blog/tags/cygwin/</a></p>

  <p>シェルなどをWindows環境上で動くようにコンパイルしなおして
UNIXライクな環境を作り出しています。</p>

  <p>パッケージも
<a href="https://rcmdnk.com/blog/2013/06/24/computer-windows-git-cygwin/">apt-cyg</a>
という<code>apt-get</code>に似せたスクリプトを使ってインストールしたりすることが出来ます。
(ただし、<code>apt-cyg</code>自体はCygwin公式なものではなくてさらなるサードパーティースクリプトです。)</p>

  <p>Cygwinと似たような物で
<a href="http://mobaxterm.mobatek.net/">MobaXterm</a>
というソフトも有ります。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2015/01/24/computer-windows-remote/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20150124_mobaxterm_120_90.jpg" width="120" height="90" alt="20150124_mobaxterm_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/01/24/computer-windows-remote/">MobaXterm: Windowsでのcygwinに代わるターミナル環境</a></div></li></ul>

  <p>こちらは<a href="https://busybox.net/">BusyBox</a>というUNIXツールを一つのバイナリに詰めた軽量
ツールをベースに作られています。</p>

  <p>Xサーバーとかがデフォルトで起動したり、sshの管理がGUIで簡単に出来たり、
PuTTYから設定をインポートできたり、
また<a href="https://rcmdnk.com/blog/2014/06/30/computer-linux-mac/">Mosh</a>などもサポートしていたり
結構色々充実しています。</p>

  <p>ぱっと始めるのであればCygwinより手軽です。</p>

  <p>後は余り使われてないと思いますが、
<a href="http://www.colinux.org/">Cooperative Linux(coLinux)</a>
という、実際のLinux環境を仮想的にWindows内に作る物があります。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4881664875?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4881664875&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/516NNAVFW6L._SS90_CR0,0,120,90_.jpg" alt="coLinux入門―Windows上でLinuxを使う" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/07/07/computer-windows-colinux-cygwin/">coLinuxのインストール</a></div></li></ul>

  <p>ただ、今はVMwareなりVirtualBoxなりで好きな仮想環境を作れるので
敢えて使う必要は無い感じです。
(昔のリソースが少ない環境でもcoLinuxは割りと負荷なく動いたのでそれはそれで結構便利でした。)</p>

  <p>ただ、Bash on Ubuntu on Windowsの使用感としてはこのcoLinuxが一番近いように感じます。</p>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
</feed>
