<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Go | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/go/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T10:06:03+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Go言語のHello, worldは1972年に既に書かれていた]]></title>
    <link href="https://rcmdnk.com/blog/2016/09/03/computer-github-go/"/>
    <updated>2016-09-03T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/09/03/computer-github-go</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/477418392X?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=477418392X&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61EL3Dc95dL._SS200_.jpg" alt="みんなのGo言語【現場で使える実践テクニック】" /></a>
</div>

<p>プログラミング言語でどの言語でも最初に出てくるHello, worldな例ですが、
Go言語にも例として色々なところで使われています。</p>

<p>そんな中で、一つのファイルが1972年にcommitされてることが判明しました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#go-hello-world" id="markdown-toc-go-hello-world">Go, hello, world</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="go-hello-world">Go, hello, world</h2>

<blockquote>
  <p><a href="https://github.com/golang/go/commit/7d7c6a97f815e9279d08cfaea7d5efb5e90695a8">hello, world · golang/go@7d7c6a9</a></p>
</blockquote>

<p>上のページのコミット日を見てみると、Brian Kernighanと言う人が
1972年7月19日にコミットしていることが分かります。。。</p>

<p>とこれだけのことなんですが。</p>

<p>実際の話、コミット日時は変えようと思えば変えれるのでそれだけの話しだとは思いますが、
なんだったのでしょうか？</p>

<blockquote>
  <p><a href="http://stackoverflow.com/questions/454734/how-can-one-change-the-timestamp-of-an-old-commit-in-git">How can one change the timestamp of an old commit in Git? - Stack Overflow</a></p>
</blockquote>

<p>ちなみにこのファイルは現在のGoのレポジトリからは削除されています。</p>

<p>検索してみたら色々なところにHello worldがしこまれていました。</p>

<blockquote>
  <p><a href="https://github.com/golang/go/search?utf8=%E2%9C%93&amp;q=hello+world">golang/go hello world Search Results</a></p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gotty: ターミナル操作をWebブラウザに表示/ブラウザから操作する]]></title>
    <link href="https://rcmdnk.com/blog/2015/11/13/computer-go-javascript-remote/"/>
    <updated>2015-11-13T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2015/11/13/computer-go-javascript-remote</id>
    <content type="html"><![CDATA[<p>ターミナル操作をブラウザに表示したり、
逆にブラウザからターミナル操作を行う事を可能にする
<a href="https://github.com/yudai/gotty">GoTTY</a>
というアプリケーションがなかなか面白いです。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#gotty" id="markdown-toc-gotty">gotty</a></li>
  <li><a href="#他のもの" id="markdown-toc-他のもの">他のもの</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="gotty">gotty</h2>

<div class="github-widget" data-repo="yudai/gotty"></div>

<p>GoTTYはGoで作られたアプリケーションで、
コマンドライン操作をブラウザに表示したり、
ブラウザ自体をターミナル化してコンピューターを操作を可能にする事が出来ます。</p>

<p>GoTTYサーバーを立ち上げてブラウザからアクセスする形なので、
ネットワークさえ通っていれば他の端末のターミナルを見たり、
逆に他の端末をブラウザから操作することも可能になります。</p>

<p>インストールはMacのHomebrewで</p>

<pre><code>$ brew install yudai/gotty/gotty
</code></pre>

<p>とするか<code>go get</code>で</p>

<pre><code>$ go get github.com/yudai/gotty
</code></pre>

<p>使い方としては<code>gotty</code>コマンドに表示させたいコマンドを引数として与えてあげればOK。</p>

<pre><code>$ gotty top
</code></pre>

<p>とすると<code>top</code>コマンドが走るGoTTYサーバーが立ち上がるので、
ブラウザから
<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a>
(デフォルトではポートは8080に設定されてるのでローカルホストの8080にアクセス)
に接続すれば<code>top</code>コマンドの表示を見ることが出来ます。</p>

<p>この状態だとブラウザの方からは操作できない状態ですが、
<code>-w</code>を与えるとブラウザからも操作できる様になります。</p>

<p>普通のターミナル操作をさせたいのであれば<code>bash</code>や<code>zsh</code>を与えてあげて</p>

<pre><code>$ gotty -w bash
</code></pre>

<p>とすると、ブラウザ内で普通のターミナルが立ち上がる様な状態になり、
そこから実際に操作することが出来ます。</p>

<p>このコマンドを起動させておけば、IPアドレスが分かる端末であれば
どこからでもブラウザ一つでターミナル操作が出来るようになる、というかなり強力なものです。</p>

<p>ので、これを安易に行うとIPアドレスを知られてる人に
直接コマンド操作される様な状態になってしまって
結構危険なのでちょっと気をつけないといけません。</p>

<p>ポート管理をしたり色々プロテクトすべき所もありますが、
GoTTYの中でも<code>-c &lt;user&gt;:&lt;password&gt;</code>としてパスワードをかけたり、
また<code>-r</code>を与えるとURLにランダムな文字列を加えたりすること(<code>http://127.0.0.1:8080/fu2quvbl</code>みたいな感じ)も出来ます。
また、SSL/TLSを使った認証を使うことも出来ます。</p>

<p>さらに面白い使い方としては、
実際に作業している所を皆に見せる様なことも出来ます。</p>

<p>普通にGoTTYを立ち上げるとブラウザで開くたびに
そのコマンドを新たに実行するサブプロセスが起動してしまうので
同じ画面を見ることは出来ません。</p>

<p>そこでGoTTYのREADMEではtmuxを使う方法が書かれています。
そこには<code>top</code>コマンドを表示することが書かれてますが、
普通に操作を見せたいのであれば、まず、</p>

<pre><code>$ tmux new -A -s gotty
</code></pre>

<p>として<code>gotty</code>という普通にシェルを立ち上げる新しいtmuxのセッションを作ります。
(この時に<code>gotty</code>というセッションが既に存在すればそれをアタッチ。)</p>

<p>次に、他のターミナルで</p>

<pre><code>$ gotty tmux new -A -s gotty
</code></pre>

<p>として<code>gotty</code>セッションをアタッチするコマンドを行う
GoTTYサーバーを立ち上げてあげれば
ブラウザから開くと最初の端末で行われている作業を見ることが出来ます。</p>

<p><img src="https://rcmdnk.com/images/post/20151113_gottytmux.gif" alt="20151113_gottytmux.gif" class="pic" /></p>

<p><code>-w</code>を与えなければ見ることだけが出来る状態です。</p>

<p>この場合は先にブラウザで開いてしまった後に</p>

<pre><code>$ tmux new -A -s gotty
</code></pre>

<p>を行って操作を開始しても問題ありません。</p>

<p>同様の事をGNU screenで行おうとすると、
まず、</p>

<pre><code>$ screen -S gotty
</code></pre>

<p>として<code>gotty</code>という名のセッションを作って</p>

<pre><code>$ gotty screen -x gotty &gt;&amp; /dev/null
</code></pre>

<p>でブラウザからアタッチ、と言う感じですが、
この場合は最初の端末で先にセッションを作っておかないと
ブラウザからは見れません
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p>ちょっとややこしいのでこの場合はtmuxを使ったほうが便利です。</p>

<h2 id="他のもの">他のもの</h2>

<p>他にも
<a href="https://github.com/IonicaBizau/web-term">IonicaBizau/web-term</a>
と言ったJavaScript製のものもありました。
こちらも同じような動作をしますが、
上に書いたtmuxを使った画面シェアの仕方、みたいな方法は上手く行きませんでした。
(実行コマンドに引数を与えることが無理っぽい?)</p>

<p>またGoTTYも元々
<a href="https://github.com/krishnasrinivas/wetty">krishnasrinivas/wetty</a>
というJavaScript製の物を参考にして作っているとのことです。</p>

<h2 id="まとめ">まとめ</h2>

<p>ということでGoTTYというアプリケーションをちょっと使ってみましたが
ブラウザからのターミナル操作もかなり快適に普通に使えて驚きました。</p>

<p>セキュリティーの問題さえきちんと気をつけられれば
どこからでもブラウザだけでターミナル操作出来る環境を作れるのは結構すごいです。</p>

<p>現実的には作業する時に手元にターミナル環境が無いことはまず無いので
セキュリティーを頑張ってまでターミナルサーバーとして使うか、と言うと
あまり無いかもしれませんが。</p>

<p>一方でブラウザを通じて作業を表示する方法は色々な場面で使えそうです。
同じサーバーに入って作業できるのであれば
tmuxやscreenのみを使ってターミナル同士で見せ合うことも出来ますが、
この方法であれば、操作する人のIPアドレスさえ分かれば
(同一LAN内とかならローカルアドレスでもOK)
自分の端末のブラウザから見ることが出来るので
非常に簡単に出来ます。</p>

<p>後は昨日紹介したターミナル上でのリッチモニターなんかも
この方法を使えばそのままブラウザを通じて外から見ることも出来ます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2015/11/12/computer-javascript-go/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/20151112_dashbord.gif" width="120" height="90" alt="20151112_dashbord" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/11/12/computer-javascript-go/">ターミナルにリッチなモニターを表示させる</a></div></li></ul>

<p>まあ、その場合は普通にHTMLとかで表示するの作れば良いじゃん、と言う所もありますが。。。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ターミナルにリッチなモニターを表示させる]]></title>
    <link href="https://rcmdnk.com/blog/2015/11/12/computer-javascript-go/"/>
    <updated>2015-11-12T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2015/11/12/computer-javascript-go</id>
    <content type="html"><![CDATA[<p>以前、
<a href="https://rcmdnk.com/blog/2015/05/19/computer-bash/">spark</a>という
シェルスクリプトで棒グラフを表示するコマンドを紹介しましたが、
さらに複雑なグラフや地図などもターミナルに表示してしまおうと言う
プロジェクトの紹介。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#blessed-contrib" id="markdown-toc-blessed-contrib">blessed-contrib</a></li>
  <li><a href="#termui" id="markdown-toc-termui">termui</a></li>
  <li><a href="#wopr" id="markdown-toc-wopr">wopr</a></li>
  <li><a href="#ブラウザに表示させる" id="markdown-toc-ブラウザに表示させる">ブラウザに表示させる</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="blessed-contrib">blessed-contrib</h2>

<div class="github-widget" data-repo="yaronn/blessed-contrib"></div>

<p>nodeがインストールされている必要がありますが、
nodeが入っているなら取り敢えず</p>

<pre><code>$ git clone https://github.com/yaronn/blessed-contrib.git
$ cd blessed-contrib
$ npm install
$ node ./examples/dashboard.js
</code></pre>

<p>を実行してみてください。</p>

<p>ターミナル上に
こんな感じのものが表示されると思います。</p>

<p><img src="https://rcmdnk.com/images/post/20151112_dashbord.gif" alt="20151112_dashbord.gif" class="pic" /></p>

<div class="postscript">
  <p><strong>追記: 2015/11/30 </strong></p>

  <p>上のgifはGNU screenを立ち上げてその上で実行したものですが、
screen上だとフォントの関係か、枠線が<code>x</code>と<code>q</code>で構成されていてちょっと
ださくなっています。</p>

  <p>普通にターミナル(iTerm2, Mac)でそのまま見ると</p>

  <p><img src="https://rcmdnk.com/images/post/20151112_dashbordnormal.jpg" alt="20151112_dashbordnormal.jpg" class="pic" /></p>

  <p>こんな風に枠がきちんと線で見えて見栄えが良くなります。</p>

  <p>以前、きちんとこういった線になってた気がして、
レポジトリの絵も線になってるので、なぜか<code>x</code>や<code>q</code>でおかしいな、
と思いながらそのまま載せてましたが、
どうもscreenが悪かった様です。</p>

  <p><strong>追記ここまで</strong></p>
</div>

<p>すごいな、と思ったのは左下の<code>Servers Location</code>(Map)とかの部分で、
世界地図が細かい点で表示されていますが、これは
<a href="https://ja.wikipedia.org/wiki/%E7%82%B9%E5%AD%97">ブライユ点字法パターン</a>
と呼ばれるUnicodeのU+2800からU+28FFに当たる文字を使っている様です。</p>

<p>ブライユ点字法パターンでは横2列、縦4行の全8つの点を
存在/非存在させることによって文字を表現しますが、
これを上手く組み合わせることで、ansiアートが文字1幅分から8倍に増える、と言う感じになっています。</p>

<p>sparkでもブロック要素と呼ばれる高さの違うブロックの文字列を
組み合わせて棒グラフを作っていましたが、
この点字の文字列を使うことによって格段と表現の幅が広がっています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2015/05/19/computer-bash/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/20150519_cpuspark.gif" width="120" height="90" alt="20150519_cpuspark" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/05/19/computer-bash/">spark: シェルスクリプトで棒グラフ表示</a></div></li></ul>

<p>blessed-contribでは13のWidgetsが用意されていて、
上の様に色々な形で情報を表示させる事が出来ます。</p>

<p><a href="https://github.com/yaronn/blessed-contrib#picture">Picture</a>
という画像を表示させる様なものもあります。</p>

<p>また、
<a href="https://github.com/yaronn/blessed-contrib#tree">Tree</a>
と言ったインタラクティブに操作できるWidgetもあります。</p>

<p>JavaScript製でインプットファイルもJavaScriptで用意します。</p>

<p>examplesの中に、上のdashboard.jsを始め、
色々な例が入っているので結構簡単に使えました。</p>

<p>Macでこれと<a href="https://rcmdnk.com/blog/tags/geektool/">GeekTool</a>を組み合わせれば
デスクトップ上に色々なリッチなモニター表示をさせることも可能になります。</p>

<h2 id="termui">termui</h2>

<div class="github-widget" data-repo="gizak/termui"></div>

<p>blessed-contribはJavaScript製でしたが、termuiはこれをGoに移植したものです。
Goに慣れてる人はこちらがお勧め。</p>

<h2 id="wopr">wopr</h2>

<div class="github-widget" data-repo="yaronn/wopr"></div>

<p>woprはblessed-contribのインプットをXML形式で簡単に書ける様にしたもの。</p>

<p><code>wopr</code>コマンドをインストールしてXMLファイルを渡すか、
もしくは<a href="http://tty.zone">tty.zone</a>というサーバー<code>curl</code>を使ってに渡すことでも使えます。</p>

<pre><code>$ curl -N tty.zone/\[0-2\]\?auto\&amp;cols=$((COLUMNS))
</code></pre>

<p>とすると(何も入力なし)取り敢えずの例が見れます。
この場合は勿論node等インストールしてなくても見れます。</p>

<h2 id="ブラウザに表示させる">ブラウザに表示させる</h2>

<p><a href="https://rcmdnk.com/blog/2015/11/13/computer-go-javascript-remote/">gotty</a>
というコマンドを使えばターミナル出力がブラウザで見れるので、
このモニターをブラウザに表示させることも出来ます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2015/11/13/computer-go-javascript-remote/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/20151113_gottytmux.gif" width="120" height="90" alt="20151113_gottytmux" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/11/13/computer-go-javascript-remote/">gotty: ターミナル操作をWebブラウザに表示/ブラウザから操作する</a></div></li></ul>
]]></content>
  </entry>
  
</feed>
