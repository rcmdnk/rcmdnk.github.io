<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: AppleScript | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/applescript/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2020-08-09T00:24:25+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AppleScriptでfolderが使えなくなった?]]></title>
    <link href="https://rcmdnk.com/blog/2017/10/15/computer-mac/"/>
    <updated>2017-10-15T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2017/10/15/computer-mac</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/2841772020?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=2841772020&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/512J164P3NL._SS200_.jpg" alt="AppleScript In A Nutshell (Ã©dition franÃ§aise)" /></a>
</div>

<p>AppleScriptで何かエラーが出てるな、と思ったら
スクリプト自身のあるディレクトリを取るために使っていた
<code>folder</code>という値が取れなくなっていました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#path-to-mes-folder" id="markdown-toc-path-to-mes-folder">(path to me)’s folder</a></li>
  <li><a href="#path-to-me--" id="markdown-toc-path-to-me--">(path to me) &amp; “::”</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="path-to-mes-folder">(path to me)’s folder</h2>

<p>自作のAppleScriptは
<strong>$HOME/Library/Scripts</strong>に置いています。</p>

<p>他のファイルをライブラリの様に読み込んで使いたい場合、
スクリプトのあるディレクトリを取得してスクリプトを呼ぶようなことをしています。</p>

<p>これに関して以前は</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;Finder&quot;</span>
</span><span class="line">  <span class="k">set</span> <span class="nv">scriptPath</span> <span class="k">to</span> <span class="p">(</span><span class="nb">path to</span> <span class="k">me</span><span class="p">)</span>&#39;s <span class="nv">folder</span> <span class="k">as </span><span class="nc">text</span>
</span><span class="line"><span class="k">end</span> <span class="k">tell</span>
</span><span class="line"><span class="k">set</span> <span class="nv">myLibScpt</span> <span class="k">to</span> <span class="nv">scriptPath</span> <span class="o">&amp;</span> <span class="s2">&quot;myLib.scpt&quot;</span>
</span><span class="line"><span class="k">set</span> <span class="nv">myLib</span> <span class="k">to</span> <span class="nb">load script</span> <span class="nv">file</span> <span class="nv">myLibScpt</span>
</span><span class="line"><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいなことをしていました。</p>

<p><code>path to me</code>が現在実行しているファイル自身のパスを返しますが
このオブジェクトの<code>folder</code>という値がファイルのあるディレクトリを返すので
それを使っています。</p>

<p>が、これが上手く動かなくなって、</p>

<pre><code>スクリプトエラー
&lt;&lt;class cfol&gt;&gt; of alias "/Users/user/Library/Scripts/myfile.scpt"のタイプをtextに変換できません。
</code></pre>

<p>みたいなエラーが出るようになっていました。
ここではtextに変換できない、ということになってますが、
<code>as text</code>の部分を外すと</p>

<pre><code>スクリプトエラー
folder of alias "/Users/user/Library/Scripts/myfile.scpt"を取り出すことは出来ません。
</code></pre>

<p>と出るので<code>folder</code>そのものが無くなってる感じです。
<code>path to me</code>は実行中のスクリプトへのパスのエイリアスを返すものと言うのは変わってないと思うので、
<code>alias</code>が何か変わった様です。</p>

<p>このパスの取り方はよく使われていて色々な所で例として見ることが出来るものなのですが、
どうも何か変化があったみたいです。</p>

<p>App Store.appでの履歴を見ると10月7日に追加アップデートが入ってるのでそこでの変化?
(でも昨日まで問題なく使えてたような気もする。。。)</p>

<p>macOS High Sierraにした時点でも1つ問題が起こってましたが
さらに変更が入った模様です。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/09/27/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20170927_highsierra_120_90.jpg" width="120" height="90" alt="20170927_highsierra_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/09/27/computer-mac/">macOS High Sierra(10.13)にアップグレードした </a></div></li></ul>

<h2 id="path-to-me--">(path to me) &amp; “::”</h2>

<p>どうやっても<code>folder</code>が使えないので別の方法にしてみることに。
最終的に以下の様な変更をしました。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">-tell application &quot;Finder&quot;</span>
</span><span class="line"><span class="gd">- set scriptPath to (path to me)&#39;s folder as text</span>
</span><span class="line"><span class="gd">-end tell</span>
</span><span class="line"><span class="gi">+set scriptPath to ((path to me as text) &amp; &quot;::&quot;)</span>
</span></code></pre></td></tr></table></div></figure>

<p>macOSで以前まで使われていたHFS+というファイルシステムでは<code>:</code>を区切りとしてディレクトリを区切っています
<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p>High Sierraではこれに変わってAPFSというファイルシステムが採用されましたがその点は恐らく変わってないと思います。</p>

<p>パスのエイリアスではこのファイルシステムを反映して<code>:</code>を区切りとしてディレクトリを区切る様な値が入っています。</p>

<p>このパスの中で<code>::</code>は一つ上のディレクトリを表し、
ファイルの後にも付ける事ができます。</p>

<p>なので<code>((path to me as text) &amp; "::")</code>は現在実行中のスクリプトのあるディレクトリを表すことになります。</p>

<p>上の様な置き換えをした所今使ってるスクリプトは動くようになりました。</p>

<div class="github-widget" data-repo="rcmdnk/AppleScript"></div>

<p>こちらの方がすっきりするし、
恐らく以前から使えてた方法だと思うので最初からこれにしておけばよかったと思う所もあります。</p>

<div class="postscript">
  <p><strong>追記: 2017/11/06 </strong></p>

  <p>OSアップデートが来て10.13.1になりましたが、
上の<code>folder</code>を試してみた所また動くようになりました。</p>

  <p>この記事を書いた時にちょっとTwitterで@Piyomaruさんが色々と指摘してくれましたが、
その時に<code>path to me</code>の返す値が私の環境ではちょっとおかしなことになっていました。</p>

  <blockquote class="twitter-tweet" data-conversation="none" data-lang="ja"><p lang="ja" dir="ltr">macOS 10.13上のScript Editorでpath to meを実行したところです。 <a href="https://t.co/8VF7sqPFww">pic.twitter.com/8VF7sqPFww</a></p>&mdash; Piyomaru (@Piyomaru) <a href="https://twitter.com/Piyomaru/status/919897886195728390?ref_src=twsrc%5Etfw">2017年10月16日</a></blockquote>
  <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

  <blockquote class="twitter-tweet" data-conversation="none" data-lang="ja"><p lang="ja" dir="ltr">様子が違いますね。やはり環境が違うのでしょうか?(macOS 10.13 (17A405), スクリプトエディタ2.10、言語AppleScirpt 2.7、プラグイン等は入れてません。)これを変えられる様な設定なんてあるのでしょうか？ <a href="https://t.co/SFB4LlZjh5">pic.twitter.com/SFB4LlZjh5</a></p>&mdash; rcmdnk (@rcmdnk) <a href="https://twitter.com/rcmdnk/status/919901195858149376?ref_src=twsrc%5Etfw">2017年10月16日</a></blockquote>
  <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

  <p><strong><em>通常</em></strong>は<code>Machintosh HD</code>から始まって<code>:</code>で区切りなエイリアスなパスになっています。
一方、おかしかった時の返り値は<code>alias</code>とはついてるものの<code>/Users/..</code>とUnix的なパスになっています。</p>

  <p>上の@Piyomaruさんのテストは10.13.1betaでのテスト、ということで
10.13がおかしいのか私の環境で何かが悪さをしているのか分かりませんでしたが、
10.13.1にしてみたところ、<code>path to me</code>が<code>alias "Machintosh HD:...</code>を返す様になりました。</p>

  <p>なので10.13.1だと前に使っていた方法がそのまま使えます。</p>

  <p>結果的には新しい方法の方がシンプルで良いので新しい方を使いますが、
何がおかしかったのかは謎。
(同じ様な不具合の報告は見られないですが、他の10.13マシンではテスト出来てないので
10.13が悪かったのか、何か環境が悪かったのかは分からず終い。)</p>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VimでNormalモード切り替え時にIMEをOFFにする、をMacでKarabiner無しで実現する]]></title>
    <link href="https://rcmdnk.com/blog/2016/10/28/computer-vim/"/>
    <updated>2016-10-28T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/10/28/computer-vim</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01HAQMTE6?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01HAQMTE6&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41K7WZl1RSL._SS200_.jpg" alt="IME: In My Experience (English Edition) 電子書籍: Steve Reed" /></a>
</div>

<p>Vimで日本語を使っていると、
Normalモード切り替えた後も日本語入力状態になっていて
コマンドが効かなくてイライラする事があります。</p>

<p>そのようなイライラを無くすために<i class="key">Esc</i>等を押して
Normalモードに移行する際に必ずIMEをOFFにするような操作を
色々な方法で実現することが出来ますが、
MacではKarabinerを使ってそれを実現していて、
Karabinerが使えないmacOS Sierraではちょっと困っています。</p>

<p>なんとか出来ないかな、ということで取り敢えず
AppleScript+BetterTouchToolでやってみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#vimでノーマルモード移行時に必ずimeをoffにする設定" id="markdown-toc-vimでノーマルモード移行時に必ずimeをoffにする設定">Vimでノーマルモード移行時に必ずIMEをOFFにする設定</a></li>
  <li><a href="#macでapplescriptbettertouchtoolでやる方法" id="markdown-toc-macでapplescriptbettertouchtoolでやる方法">MacでAppleScript+BetterTouchToolでやる方法</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="vimでノーマルモード移行時に必ずimeをoffにする設定">Vimでノーマルモード移行時に必ずIMEをOFFにする設定</h2>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/06/20/computer-mac-keyremap4macbook-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130607_vim_ime_120_90.jpg" width="120" height="90" alt="20130607_vim_ime_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/20/computer-mac-keyremap4macbook-vim/">Vimを使う上でのIME(日本語入力)の取り扱い</a></div></li></ul>

<p>上のポストにまとめてありますが、
基本、MacではKarabiner、WindowsではAutoHotKeyを使ってコレを実現しています。</p>

<p>GVimとかだとアプリの機能そのものでできたりもします。</p>

<h2 id="macでapplescriptbettertouchtoolでやる方法">MacでAppleScript+BetterTouchToolでやる方法</h2>

<p>ところがmacOS SierraではKarabinerがまだ使えないのでこれが使えません。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01M0FFLYH?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B01M0FFLYH&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51ZUix6JwPL._SS90_CR0,0,120,90_.jpg" alt="macOS Sierra (English Edition) 電子書籍: Chris Kennedy" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/09/23/computer-mac/">macOS Sierraにアップグレードしてみて取り敢えずの状況</a></div></li></ul>

<p>とりあえずこの設定無しで使ってましたが、
今までIME ONでもすぐに<i class="key">Ctrl</i>-<i class="key">[</i>/<i class="key">Esc</i>などでノーマルモードに入るくせが付いてるため
逆に前以上にストレスが溜まる状態になっています。</p>

<p>そこでなんとかしてみようと、やってみたのが
AppleScriptとBetterTouchToolの組み合わせ。</p>

<figure class="code"><figcaption><span>ImeOffEsc.scpt </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="k">property</span> <span class="nv">JP_LIST</span> <span class="p">:</span> <span class="p">{</span><span class="s2">&quot;ひらがな&quot;</span><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="c">-- Get IME status</span>
</span><span class="line"><span class="k">set</span> <span class="nv">imeOn</span> <span class="k">to</span> <span class="no">false</span>
</span><span class="line"><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;System Events&quot;</span>
</span><span class="line">  <span class="k">tell</span> <span class="nv">process</span> <span class="s2">&quot;SystemUIServer&quot;</span>
</span><span class="line">    <span class="k">set</span> <span class="nv">imeStatus</span> <span class="k">to</span> <span class="nv">value</span> <span class="k">of</span> <span class="nb">first</span> <span class="na">menu</span> <span class="nv">bar</span> <span class="nb">item</span> <span class="k">of</span> <span class="na">menu</span> <span class="nv">bar</span> <span class="mi">1</span> <span class="nb">whose</span> <span class="nv">description</span> <span class="ow">is</span> <span class="s2">&quot;text input&quot;</span>
</span><span class="line">  <span class="k">end</span> <span class="k">tell</span>
</span><span class="line"><span class="k">end</span> <span class="k">tell</span>
</span><span class="line">
</span><span class="line"><span class="c">-- Check IME status</span>
</span><span class="line"><span class="k">repeat</span> <span class="nv">with</span> <span class="nv">j</span> <span class="k">in</span> <span class="nv">JP_LIST</span>
</span><span class="line">  <span class="k">if</span> <span class="nv">imeStatus</span> <span class="ow">starts with</span> <span class="nv">j</span> <span class="k">then</span>
</span><span class="line">    <span class="k">set</span> <span class="nv">imeOn</span> <span class="k">to</span> <span class="no">true</span>
</span><span class="line">    <span class="k">exit</span> <span class="k">repeat</span>
</span><span class="line">  <span class="k">end</span> <span class="k">if</span>
</span><span class="line"><span class="k">end</span> <span class="k">repeat</span>
</span><span class="line">
</span><span class="line"><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;System Events&quot;</span>
</span><span class="line">  <span class="k">set</span> <span class="nv">pList</span> <span class="k">to</span> <span class="na">name</span> <span class="k">of</span> <span class="nb">every</span> <span class="nv">process</span> <span class="nb">whose</span> <span class="na">frontmost</span> <span class="ow">is</span> <span class="no">true</span>
</span><span class="line">  <span class="k">set</span> <span class="nv">appName</span> <span class="k">to</span> <span class="nb">item</span> <span class="mi">1</span> <span class="k">of</span> <span class="nv">pList</span>
</span><span class="line">  <span class="k">tell</span> <span class="nv">process</span> <span class="nv">appName</span>
</span><span class="line">    <span class="c">-- 33: [ (Ctrl-[: 33 using {control down})</span>
</span><span class="line">    <span class="c">-- 53: ESC</span>
</span><span class="line">    <span class="c">-- 102: EISU</span>
</span><span class="line">    <span class="k">if</span> <span class="nv">imeOn</span> <span class="k">then</span>
</span><span class="line">      <span class="na">key code</span> <span class="mi">53</span>
</span><span class="line">      <span class="na">key code</span> <span class="mi">102</span>
</span><span class="line">      <span class="na">key code</span> <span class="mi">53</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="nb">log</span> <span class="p">(</span><span class="s2">&quot;send ESC&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="na">key code</span> <span class="mi">53</span>
</span><span class="line">    <span class="k">end</span> <span class="k">if</span>
</span><span class="line">  <span class="k">end</span> <span class="k">tell</span>
</span><span class="line"><span class="k">end</span> <span class="k">tell</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じのAppleScriptを用意。</p>

<p>IMEの状態はメニューバーにあるIMEのアイコンから情報がとってこれます。</p>

<p>とりあえず、日本語入力状態だと、Macの日本語入力だと<strong>ひらがな</strong>、
Google日本語入力だと<strong>ひらがな (Google)</strong>となるので
<strong>ひらがな</strong>から始まる場合にはIME ONだとします。
他のIMEを使っていて違う名前になる場合には適当に
<code>JP_LIST</code>に付け加えてあげれば使えます。</p>

<p>基本、最前面にあるウィンドウを対象にして、もしIMEがONである場合、
<i class="key">Esc</i>、<i class="key">EISU</i>、<i class="key">Esc</i>を送り、
OFFなら<i class="key">Esc</i>だけ送ります。</p>

<p>ON時に<i class="key">Esc</i>を一度最初に送るのは
変換中であってもキャンセルして英数状態にするためです。</p>

<p>これをBetterTouchToolのKeyboard設定で、
<i class="key">Ctrl</i><i class="key">[</i>
に<strong>Controlling Other Applications</strong><i class="fa fa-arrow-right"></i><strong>Open Application / File / AppleScript</strong>
で割り当てます。</p>

<p>これでVimでインサートモードで日本語入力している時に
いきなり
<i class="key">Ctrl</i><i class="key">[</i>を押してもIMEはOFFの状態になり
ノーマルモードに入れます。</p>

<p>ちょっと使ってみて、とりあえず動くことは動くんですが、
いくつか問題が出てきました。</p>

<p>まず、AppleScriptで
<code>key code</code>によって送られるキー入力はBetterTouchToolが受け取って解釈するため、
このスクリプトを<i class="key">Esc</i>自体に割り当ててしまうと
無限ループに入ってしまってフリーズします。気をつけてください。</p>

<p>もし、<i class="key">Esc</i>を押した時にこの動作を実現したいのであれば、
<code>key code 53</code>を全て<code>key code 33 using {control down}</code>
に書き換えてBetterTouchToolで<i class="key">Esc</i>に割り当ててください。
特にこの場合にはApplicationでiTermやTerminalのみの場合にした方が良いと思います。</p>

<p>両方設定してしまうとお互いに行き来する無限ループに入るのでどちらかしか設定できません。</p>

<p>さらなる問題点として、AppleScriptによるキー入力はちょっと時間がかかってしまうので、
<i class="key">Ctrl</i><i class="key">[</i>入力後にすぐに何か打つと
それが入力されてしまうことがあります。
一瞬待たないといけない。</p>

<p>さらに、<i class="key">Ctrl</i><i class="key">[</i>を素早く2回続けて押してしまうと
以後しばらくこのキー入力が効かなくなってしまうことがあります。
前のスクリプト起動中に次のスタートすると問題なのかなんなのか、
イマイチよく原因が分かりません。</p>

<p>また、上のスクリプトで
IMEがOFFの場合をわざわざ分けて<i class="key">Esc</i>だけを送るようにしているのは
GNU Screenでコピーモードに入るのに
<i class="key">Ctrl</i><i class="key">[</i>を使いたいからですが、
AppleScriptを通してキーを送るとPrerixキーを送ったことがキャンセルされてしまうのか
上手く動作しませんでした。</p>

<p>ということで、とりあえず形としては出来るものが出来ましたが、
上にあげた問題があると逆にストレスが溜まることが多くなったので
使うのを辞めました。</p>

<p>使い方によってはこれでも便利な人もいるかも。</p>

<p>が、やはり<a href="https://github.com/tekezo/Karabiner-Elements">Karabiner-Elements</a>
でのKarabiner並の設定が出来る日が来るの
が待ち遠しい所です。</p>

<div class="postscript">
  <p><strong>追記: 2017/03/10 </strong></p>

  <p>ちょっと違う方法でまた試してみました。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B01HAQMTE6" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41K7WZl1RSL._SS90_CR0,0,120,90_.jpg" alt="Amazon.co.jp: IME: In My Experience (English Edition) 電子書籍: Steve Reed: Kindleストア" /></a>
</div>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/03/10/computer-mac-vim/">VimでNormalモード切り替え時にIMEをOFFにする、をMacでKarabiner無しで実現する 2</a></div></li></ul>

  <p>ここで試した方法よりは上手く行っています。</p>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac AppleScriptでファイルにログを書き出す]]></title>
    <link href="https://rcmdnk.com/blog/2016/10/27/computer-mac/"/>
    <updated>2016-10-27T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/10/27/computer-mac</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0093T2DN6?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0093T2DN6&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51DoMW7QEOL._SS200_.jpg" alt="AppleScript: The Definitive Guide: Scripting and Automating Your Mac (Definitive Guides) 電子書籍: Matt Neuburg" /></a>
</div>

<p>AppleScriptを呼び出したりする時に
ログを書き出す方法について。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#applescriptでファイルにログを書き出す" id="markdown-toc-applescriptでファイルにログを書き出す">AppleScriptでファイルにログを書き出す</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="applescriptでファイルにログを書き出す">AppleScriptでファイルにログを書き出す</h2>

<p>AppleScriptは通常スクリプトエディタ.appで書くと思いますが、
スクリプトエディタではその場ですぐコンパイル、実行ができ、</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="nb">log</span> <span class="s2">&quot;test output&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいに、<code>log</code>というコマンドを使ってスクリプトエディタのコンソール部分に
ログを書き出すことが出来ます。</p>

<p>もっとやろうとすると</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="nb">display dialog</span> <span class="s2">&quot;test popup&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>と、<code>display dialog</code>を使うと内容をポップアップウィンドウに表示できます。</p>

<p>このポップアップのものはどこでも使えますが
その場その場で最前面ウィンドウに出てきて止まるので
スクリプトによっては全く使えないこともあります。</p>

<p>のでやはり<code>log</code>で見たいわけですが、
スクリプトを直接実行したりBetterTouchToolとかで
ショートカットキーからスクリプトを呼び出す場合には
スクリプトエディタを使わないのでこの<code>log</code>のアウトプットがみれません。</p>

<p>そこで直接外部ファイルに書き出したいわけですが、
ファイルをオープンして書き出す、的なことがAppleScriptでは出来ない(素直には出来ないと思う、多分)
ので
シェルコマンドを呼んでそれを使って書き出します。</p>

<p>AppleScriptでは</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="nb">do shell script</span> <span class="s2">&quot;echo test output &gt;&gt; ~/log&quot;</span>
</span></code></pre></td></tr></table></div></figure>

<p>の様に<code>do shell script</code>でシェルスクリプトを実行することが出来ます。</p>

<p>その中で<code>echo</code>とかで出力してあがればOK。</p>

<p>これを使って簡単に出力出来る関数とかを用意してみます。</p>

<figure class="code"><figcaption><span>echoTest.scpt </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="k">property</span> <span class="nv">DEBUG</span> <span class="p">:</span> <span class="no">true</span>
</span><span class="line"><span class="k">property</span> <span class="nv">LOG_DIR</span> <span class="p">:</span> <span class="s2">&quot;~/log/&quot;</span>
</span><span class="line"><span class="k">property</span> <span class="nv">LOG_FILE</span> <span class="p">:</span> <span class="s2">&quot;&quot;</span>
</span><span class="line">
</span><span class="line"><span class="c">-- Prepare log file</span>
</span><span class="line"><span class="k">if</span> <span class="nv">DEBUG</span> <span class="k">then</span>
</span><span class="line">  <span class="nb">do shell script</span> <span class="s2">&quot;mkdir -p &quot;</span> <span class="o">&amp;</span> <span class="nv">LOG_DIR</span>
</span><span class="line">  <span class="k">set</span> <span class="nv">LOG_FILE</span> <span class="k">to</span> <span class="nv">LOG_DIR</span> <span class="o">&amp;</span> <span class="p">(</span><span class="na">name</span> <span class="k">of</span> <span class="k">me</span><span class="p">)</span> <span class="o">&amp;</span> <span class="s2">&quot;.log&quot;</span>
</span><span class="line">  <span class="nb">log</span> <span class="s2">&quot;Log file: &quot;</span> <span class="o">&amp;</span> <span class="nv">LOG_FILE</span>
</span><span class="line"><span class="k">end</span> <span class="k">if</span>
</span><span class="line">
</span><span class="line"><span class="c">-- Log output function</span>
</span><span class="line"><span class="k">on</span> <span class="nv">echo</span><span class="p">(</span><span class="nv">txt</span><span class="p">)</span>
</span><span class="line">  <span class="k">if</span> <span class="nv">DEBUG</span> <span class="k">then</span>
</span><span class="line">    <span class="nb">do shell script</span> <span class="s2">&quot;echo &#39;[&quot;</span> <span class="o">&amp;</span> <span class="p">(</span><span class="nb">current date</span><span class="p">)</span> <span class="o">&amp;</span> <span class="s2">&quot;] &quot;</span> <span class="o">&amp;</span> <span class="nv">txt</span> <span class="o">&amp;</span> <span class="s2">&quot;&#39; &gt;&gt; &quot;</span> <span class="o">&amp;</span> <span class="nv">LOG_FILE</span>
</span><span class="line">    <span class="nb">log</span> <span class="s2">&quot;[&quot;</span> <span class="o">&amp;</span> <span class="p">(</span><span class="nb">current date</span><span class="p">)</span> <span class="o">&amp;</span> <span class="s2">&quot;] &quot;</span> <span class="o">&amp;</span> <span class="nv">txt</span>
</span><span class="line">  <span class="k">end</span> <span class="k">if</span>
</span><span class="line"><span class="k">end</span> <span class="nv">echo</span>
</span><span class="line">
</span><span class="line"><span class="c">-- Main content</span>
</span><span class="line">
</span><span class="line"><span class="c">-- Test log</span>
</span><span class="line"><span class="nv">echo</span><span class="p">(</span><span class="s2">&quot;test output&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じ。
<code>echo</code>という関数で内容をファイル
(この場合は<strong>~/log/echoTest.log</strong>)に出力していける様になります。</p>

<p><code>mkdir</code>など、AppleScriptにも<code>make new folder</code>とか出来るんですが、
複数階層作る必要があったりする場合結構面倒なので
シェルスクリプトでやってしまいます。</p>

<p>以下、<code>Main content</code>より下に実際のコードを書いていって、
ログが欲しいところで</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="nv">echo</span><span class="p">(</span><span class="s2">&quot;test output&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>の様に呼んであげれば、<strong>~/log/echoTest.log</strong>に</p>

<pre><code>[2016年10月26日水曜日 XX:XX:XX] test output
</code></pre>

<p>みたいな出力がなされます。</p>

<p>テストが終わって必要なくなれば先頭の</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="k">property</span> <span class="nv">DEBUG</span> <span class="p">:</span> <span class="no">true</span>
</span></code></pre></td></tr></table></div></figure>

<p>を</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="k">property</span> <span class="nv">DEBUG</span> <span class="p">:</span> <span class="no">false</span>
</span></code></pre></td></tr></table></div></figure>

<p>にしてあげればログを書き出さなくなります。</p>

<p>この
<code>Main content</code>より上の部分を適当なスクリプトの先頭にコピペすれば
そのスクリプトでもすぐに<code>echo</code>が使えるようになります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macでキーボードショートカットでメニューバーにフォーカスする方法]]></title>
    <link href="https://rcmdnk.com/blog/2016/03/04/computer-mac-karabiner/"/>
    <updated>2016-03-04T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/03/04/computer-mac-karabiner</id>
    <content type="html"><![CDATA[<p>色々アプリをいじっていてキーボードだけで操作しているようなとき、
メニューバーの項目を使いたい時にトラックパッドなり
マウスに移動するのが面倒な時があります。</p>

<p>メニューバーの項目のショートカットキーを全て覚えていればそれで済むのですが、
覚えてなかったり、そもそも割り当てられてない機能を使いたい時に
キーボードだけでメニューが操作したい、と言う時にどうするか。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#osのショートカット機能" id="markdown-toc-osのショートカット機能">OSのショートカット機能</a></li>
  <li><a href="#bettertouchtoolのshow-menubar-in-context-menu" id="markdown-toc-bettertouchtoolのshow-menubar-in-context-menu">BetterTouchToolの<strong>Show Menubar in Context Menu</strong></a></li>
  <li><a href="#applescriptを使う方法" id="markdown-toc-applescriptを使う方法">AppleScriptを使う方法</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="osのショートカット機能">OSのショートカット機能</h2>

<p>環境設定の<strong>キーボード</strong>の項目にある
<strong>ショートカット</strong>タブに行くと色々と
ショートカットを設定できますが、
ここにある<strong>キーボード</strong>という項目の中に
<strong>メニューバーを操作対象にする</strong>(<strong>Move focus to the menu bar</strong>)という項目があります。</p>

<p><img src="https://rcmdnk.com/images/post/20160303_keyboardshortcut.jpg" alt="20160303_keyboardshortcut.jpg" class="pic" /></p>

<p>まさにこれが欲しい機能でデフォルトで<i class="key">⌃</i>-<i class="key">F2</i>に
割り振られています。</p>

<p>なんですが、どうも上手く行きません。</p>

<blockquote>
  <p><a href="https://support.apple.com/en-us/HT204434">Mac keyboard shortcuts for accessibility features - Apple Support</a></p>
</blockquote>

<blockquote>
  <p><a href="http://apple.stackexchange.com/questions/12723/control-f2-move-focus-to-menu-bar-only-works-occasionally">osx - Control-F2 “Move Focus to Menu Bar” only works occasionally - Ask Different</a></p>
</blockquote>

<blockquote>
  <p><a href="http://apple.stackexchange.com/questions/103956/why-do-ctrlf2-and-ctrlf3-sometimes-stop-working">osx - Why do Ctrl+F2 and Ctrl+F3 sometimes stop working? - Ask Different</a></p>
</blockquote>

<p>この辺を見ているとどうも昔から起こってる問題で上手く行かないことがあるらしいです。</p>

<p>上にある話の中で、<i class="key">⌃</i>-<i class="key">F3</i>(<strong>Dockを操作対象にする</strong>)を
した後に<i class="key">⌃</i>-<i class="key">F2</i>
をすると効く、と言う話があったので試してみたところ、
一回は開けたんですがそのとはまた開けなくなったり。
それも必ず、というわけではなく開ける時と開けない時があったり。</p>

<p>また、違うキーに変更してみても同じ様子。</p>

<p>とうことでこの機能を直接使うのは諦めました。</p>

<h2 id="bettertouchtoolのshow-menubar-in-context-menu">BetterTouchToolの<strong>Show Menubar in Context Menu</strong></h2>

<p>実はこれをずっと使っていましたが、
<a href="https://www.boastr.net/">BetterTouchTool</a>
ではキーボードショートカットに機能を割り当てることも出来、
機能として<strong>Show Menubar in Context Menu</strong>という項目があります。</p>

<p>これを割り当てると、マウスカーソルのある位置に右クリックで開くメニューのようなメニュー(コンテクストメニュー)
としてメニューバーのメニューが表示されます。
そこでキーボードを使って選択することが出来ます。(マウスでも可能。)</p>

<p>その昔は
<a href="http://www.macupdate.com/app/mac/13040/dejamenu">DejaMenu</a>
というこのメニューをコンテクストメニューとして開くためだけの
アプリを使っていましたが、今は<a href="http://homepage.mac.com/khsu/DejaMenu/DejaMenu.html">作者のページ</a>
もなくなっているので使えなくなっています。
機能としてはBetterTouchToolの物も全く同じです。</p>

<h2 id="applescriptを使う方法">AppleScriptを使う方法</h2>

<p>メニューバーに直接フォーカスを持っていく方法として、
AppleScriptを使う方法があります。</p>

<blockquote>
  <p><a href="http://apple.stackexchange.com/questions/12723/control-f2-move-focus-to-menu-bar-only-works-occasionally">osx - Control-F2 “Move Focus to Menu Bar” only works occasionally - Ask Different</a></p>
</blockquote>

<p>ここを参考に</p>

<figure class="code"><figcaption><span>focusMenu.scpt </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span></span><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;System Events&quot;</span> <span class="k">to</span> <span class="k">tell</span> <span class="p">(</span><span class="nv">process</span> <span class="mi">1</span> <span class="nb">where</span> <span class="na">frontmost</span> <span class="ow">is</span> <span class="no">true</span><span class="p">)</span>
</span><span class="line">  <span class="nv">click</span> <span class="na">menu</span> <span class="nv">bar</span> <span class="nb">item</span> <span class="mi">2</span> <span class="k">of</span> <span class="na">menu</span> <span class="nv">bar</span> <span class="mi">1</span>
</span><span class="line"><span class="k">end</span> <span class="k">tell</span>
</span></code></pre></td></tr></table></div></figure>

<p>というアップルスクリプトを作って<strong>~/Library/Scripts</strong>等に保存しておいて、
後は<a href="http://sakuro.tumblr.com/post/15283952343">Automaterで割り当て</a>たり、
<a href="https://www.boastr.net/">BetterTouchTool</a>
なり
<a href="https://pqrs.org/osx/karabiner/">Karabiner</a>
なりでショートカットキーに割り当てます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/5511057088?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=5511057088&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41N-exfZZaL._SS90_CR0,0,120,90_.jpg" alt="Keyboard Shortcut" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/03/03/computer-mac-karabiner/">MacでKarabinerを使ってAppleScriptをキーボードショートカットに割り当てる</a></div></li></ul>

<p>上のスクリプトで<code>item 2</code>を選んでいるのは
1だとメニューバーの一番左にあるリンゴマークボタンを開いてしまうため。</p>

<p>逆にこれを開きたい場合は1にすれば開けます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacでKarabinerを使ってAppleScriptをキーボードショートカットに割り当てる]]></title>
    <link href="https://rcmdnk.com/blog/2016/03/03/computer-mac-karabiner/"/>
    <updated>2016-03-03T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2016/03/03/computer-mac-karabiner</id>
    <content type="html"><![CDATA[<div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/5511057088?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=5511057088&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41N-exfZZaL._SS200_.jpg" alt="Keyboard Shortcut" /></a>
</div>

<p>ちょっとMacのツールを整理しようと思って色々いじってた中の1つとして、
AppleScriptのキーボードショートカットへの割当を
Karabinerを使って行うことにしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#applescript" id="markdown-toc-applescript">AppleScript</a></li>
  <li><a href="#これまでの設定" id="markdown-toc-これまでの設定">これまでの設定</a></li>
  <li><a href="#karabinerでの設定方法" id="markdown-toc-karabinerでの設定方法">Karabinerでの設定方法</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>
  <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3802317723662375" data-ad-slot="5762198341"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="applescript">AppleScript</h2>

<p>主にウィンドウの大きさを変えたりするのにAppleScriptで色々作って、
それをキーボードショートカットで呼び出しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4797310111?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4797310111&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/21V1PH7MX2L._SS90_CR0,0,120,90_.jpg" alt="AppleScriptリファレンス" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/05/21/computer-mac/">AppleScriptを使ったウィンドウサイズを変えるやつ</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B0093T2DN6?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B0093T2DN6&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/51DoMW7QEOL._SS90_CR0,0,120,90_.jpg" alt="AppleScript: The Definitive Guide: Scripting and Automating Your Mac (Definitive Guides)" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/10/19/computer-mac-ruby/">YosemiteからRuby1.8が削除されたのでAppleScriptでのウィンドウのサインズ変更の取り扱いを変更した</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/4797310111?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4797310111&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/21V1PH7MX2L._SS90_CR0,0,120,90_.jpg" alt="AppleScriptリファレンス" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/06/06/computer-mac/">Macでアプリを再起動するAppleScript</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/MacApp/thumbnail/vim_120_90.png" width="120" height="90" alt="vim_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/06/06/computer-mac-keyremap4macbook-vim_2/">MacでVimっぽくカーソルやマウス、ウィンドウを動かす</a></div></li></ul>

<p>ウィンドウを決まった大きさにするだけのアプリは色々ありますが、
細かい大きさの指定(微妙に全画面より小さくする)とか
徐々に縮めたり広げたりするとか、
後外部ディスプレイをつなげた時に適時配置をするとか、ということを
自分の好きな様に設定出来る物は無いので作ってしまえば便利です。
(ホントはSwiftとかで作ってアプリっぽくしたいけども。。。)</p>

<p>AppleScriptはメニューバーから実行できる様にすることも出来ますが、
やはりキーボードでパッと使用出来る方が便利です。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2015/07/26/computer-mac/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20150726_applescript_120_90.jpg" width="120" height="90" alt="20150726_applescript_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2015/07/26/computer-mac/">AppleScriptをメニューバーから実行するための設定</a></div></li></ul>

<h2 id="これまでの設定">これまでの設定</h2>

<p>最初は
<a href="http://www.shadowlab.org/Software/spark.php">Spark</a>
というHot-key managerを使っていましたが、
<a href="https://www.boastr.net/">BetterTouchTool</a>
を本格的に使い始めてこちらにもキーボードショートカットキーの
割当が出来る事からBetterTouchToolに全て移行しました。</p>

<p>それはそれで良いのですが、
今回KarabinerでもAppleScript等を割り当てられることを知り、
Karabinerは設定ファイルがXMLでそのファイルをDropbox &amp; GitHubで管理してたり
するので、
色々設定するにはKarabinerの方が都合が良いので
Karabinerに移行することに。</p>

<h2 id="karabinerでの設定方法">Karabinerでの設定方法</h2>

<p>Documentが充実してるので見れば分かります。</p>

<blockquote>
  <p><a href="https://pqrs.org/osx/karabiner/xml.html.ja#vkopenurldef">private.xml Reference Manual - Karabiner - OS X用のソフトウェア</a></p>
</blockquote>

<p>前見た時よりもまた大分充実してる。。。</p>

<p>簡単に説明すると、</p>

<pre><code>&lt;vkopenurldef&gt;
  &lt;name&gt;KeyCode::VK_OPEN_URL_APPLESCRIPT.close&lt;/name&gt;
  &lt;url type="shell"&gt;
    &lt;![CDATA[ osascript ~/Library/Scripts/close.scpt ]]&gt;
  &lt;/url&gt;
&lt;/vkopenurldef&gt;
</code></pre>

<p>みたいな設定を書いておくと、
<code>VK_OPEN_URL_APPLESCRIPT.close</code>というKeyCodeが作成され、</p>

<pre><code>&lt;item&gt;
  &lt;name&gt;Cmd-4 to Window close&lt;/name&gt;
  &lt;identifier&gt;private.cmd_4_to_win_close&lt;/identifier&gt;
  &lt;autogen&gt;
    __KeyToKey__ KeyCode::KEY_4,
    VK_COMMAND|ModifierFlag::NONE,
    KeyCode::VK_OPEN_URL_APPLESCRIPT.close
  &lt;/autogen&gt;
&lt;/item&gt;
</code></pre>

<p>の様に通常のキー割り当ての様に機能を割り当てられます。</p>

<p><code>vkopenurldef</code>の中で、<code>name</code>では必ず</p>

<pre><code>KeyCode::VK_OPEN_URL_
</code></pre>

<p>から始まる必要があります。(その後は自由。)</p>

<p><code>url</code>の<code>type</code>を<code>shell</code>にすることでシェルコマンドの実行を行うのですが、
ここではコマンドラインからAppleScript等スクリプトを実行する<code>osascript</code><sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>を使う事で
AppleScriptを実行しています。</p>

<p>勿論上のDocumentにあるように</p>

<pre><code>/bin/date | /usr/bin/pbcopy
</code></pre>

<p>といった(今日の日付を出してそれをクリップボードにコピー)通常のコマンドも実行できます。</p>

<p><code>open -a /Applications/Firefox.app</code>などとしておけば
アプリを立ち上げる事も出来ます。</p>

<p><code>shell</code>の設定の際には
<code>url</code>にはCDATAセクション<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>を使って記述します。</p>

<p><code>type</code>を指定しないで通常のURLを<code>url</code>に書いておけば
ブラウザで特定のページを開くことも出来ます。</p>

<p><strong>/…</strong>の様なファイルパスを書いておけばファイルを開くことも可能です。
(どちらも<code>shell</code>で<code>open</code>を使っても出来ますが直接書けて便利。)</p>

]]></content>
  </entry>
  
</feed>
