<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Vim | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/blog/tags/vim/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/"/>
  <updated>2018-08-23T00:51:36+00:00</updated>
  <id>https://rcmdnk.com/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[cVimでコマンドモードの候補などの表示を半透明にする]]></title>
    <link href="https://rcmdnk.com/blog/2018/04/24/computer-chrome-vim/"/>
    <updated>2018-04-24T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/04/24/computer-chrome-vim</id>
    <content type="html"><![CDATA[<p>cVimはChromeの拡張機能でChrome上でVimライクなキーバインドを提供してくれるものです。
FirefoxでのVimperatorみたいなものですがVimperatorはもう使えなくなったのでcVimへ移行。</p>

<p>今回ちょっとCSSをいじってオーバーレイで表示されるコマンドモードの候補の表示を半透明にしてみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#cvimrc" id="markdown-toc-cvimrc">cVimrc</a></li>
  <li><a href="#コマンドモードの結果表示を半透明にする" id="markdown-toc-コマンドモードの結果表示を半透明にする">コマンドモードの結果表示を半透明にする</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="cvimrc">cVimrc</h2>

<p><a href="https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh">cVim - Chrome ウェブストア</a></p>

<div class="github-widget" data-repo="1995eaton/chromium-vim"></div>

<p>cVimはChromeでVimライクなキーバインドを提供してくれる拡張機能です。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00IE67ZSM?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00IE67ZSM&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/3110x9TzbSL._SS90_CR0,0,120,90_.jpg" alt="【並行輸入品】Toshiba Chromebook CB35-A3120 PLM01U-002005 13.3-Inch Cloud Computer" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/10/22/computer-firefox/">cVim: Google ChromeのVimperatorみたいな拡張</a></div></li></ul>

<p>長い間Firefox + Vimperatorという形でブラウザ上のVim操作を行ってきましたが、
昨年FirefoxのアップデートによりVimperatorは使えなくなってしまいました。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/6134432512?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=6134432512&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/41pP9qkUQrL._SS90_CR0,0,120,90_.jpg" alt="Vimperator" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/15/computer-firefox/">Firefox Quantum 57リリース: Vimperatorは無事死亡</a></div></li></ul>

<p>まずはFirefoxで他の拡張機能とかを色々探してたんですが、
結局Vimperatorほど十分使えるものは存在せず。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/10/20/computer-firefox-vimperator/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171020_vimium_120_90.jpg" width="120" height="90" alt="20171020_vimium_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/10/20/computer-firefox-vimperator/">Vimperator亡き後のためにVimium-FFを試してみる</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B011QUSK04?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B011QUSK04&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61Xx2McqhaL._SS90_CR0,0,120,90_.jpg" alt="牝狐の夏　夜逃げ若殿 捕物噺　: 11 (二見時代小説文庫) | 聖 龍人 | 日本の小説・文芸 | Kindleストア | Amazon" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/01/computer-firefox/">Vim Vixen: Vimperatorの代わりになるかもしれないアドオン</a></div></li></ul>

<p>そもそもFirefoxにこだわってたのもVimperatorが使えるというのがほとんどだったので
Chromeも見てみようということで前に使ったことのあるcVimを見てみるとかなり使える様になってたので乗り換えました。</p>

<p>Firefox、Chrome共に大概の拡張機能でhjklとかのキーバインドは出来ますが、cVimが使える理由としては</p>

<ul>
  <li>Hit-a-Hint機能がある。</li>
  <li>vimrc的な感じの書き方で設定ファイルが書ける。</li>
  <li>設定が簡単に共有できる。</li>
  <li>scriptコマンドによってブックマークレットが使える。
    <ul>
      <li>JavaScriptで関数を作ってそれを割り当てることもできる。</li>
    </ul>
  </li>
  <li>qmarks(<code>goa</code>で<code>a</code>に登録したURLに移動、<code>gna</code>で<code>a</code>に登録したURLを新しいタブで開く)機能がある。</li>
</ul>

<p>など。特にJavaScriptで色々機能が加えられるとなんでもできる様になりますが、
この様なことができる拡張機能は今のところ他には無いと思います。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/11/18/computer-chrome/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171118_cvim_120_90.jpg" width="120" height="90" alt="20171118_cvim_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/18/computer-chrome/">Google ChromeでcVimの設定をアップデート</a></div></li></ul>

<h2 id="コマンドモードの結果表示を半透明にする">コマンドモードの結果表示を半透明にする</h2>

<p><i class="key">O</i>を押して新しいページに移動したいとき、
デフォルトだと下の様に真っ黒な背景の上に候補が表示される様になっています。</p>

<p><img src="https://rcmdnk.com/images/post/20180424_cvimrcnoopacity.jpg" alt="cvimrcnoopacity" class="pic" /></p>

<p>ただ、ページ内の単語とかURLとか見ながらさくっと検索とかしたいとき、
後ろが全部みえなくなってしまうとやりずらかったりします。</p>

<p>なのでこんな感じで半透明にしてみました。</p>

<p><img src="https://rcmdnk.com/images/post/20180424_cvimrcopacity.jpg" alt="cvimrcopacity" class="pic" /></p>

<p>候補部分だけ見るとちょっと見づらいかもしれませんが
なんとなく見た目はカッチョ良さげになります。</p>

<p>Vimperatorのときもこんな感じにしてたので同じようにしてみました。</p>

<p>設定方法はcVimの設定ページに行き、CSSの項目で
<code>#cVim-command-bar-search-results</code>の項目に
<code>opacity: 0.8;</code>を加えただけです。</p>

<p><code>#cVim-command-bar</code>(コマンドを入力するライン)の方も
<code>opacity: 0.9;</code>にしてみました。</p>

<p><img src="https://rcmdnk.com/images/post/20180424_cvimrcnoopacity.jpg" alt="cvimrcnoopacity" class="pic" /></p>

<p><code>opacity</code>は0で完全透明、1で完全不透明なので見づらかったりしたら適当に調節を。
バックグラウンドの色や文字色もこの辺をいじれば変えられるので
適当に変えてみるとまた違った雰囲気になると思います。</p>

<p>これをcvimrcの方に入れて共有できる様にしたいと思ってますが、
今のところそれほど書き換える量が多くないのと
簡単にできるかどうかもよくわからないので今のところは直接オプションで加えて
cvimrcはその他の動作設定だけしています。</p>

<blockquote>
  <p><a href="https://gist.github.com/rcmdnk/6f9c3c0f8043391317e1a9cc3e0cafcb">cvimrc: settings for cVim</a></p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wasavi: ブラウザの入力領域をVim化する拡張機能]]></title>
    <link href="https://rcmdnk.com/blog/2018/02/21/computer-vim-firefox-chrome/"/>
    <updated>2018-02-21T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/02/21/computer-vim-firefox-chrome</id>
    <content type="html"><![CDATA[<p>VimmerにとってVim以外の環境で普通にテキストを書かされるのは 非常に辛いことですが、 それを解決する色々な方法が考えられています。</p>

<p>特にブラウザはマウスを使って操作する代表的なアプリだと思いますが、
そこでも入力欄でVim操作したり、ブラウザの操作自体をVim的にキーボードでしたりする
ために色々な拡張機能が作り出されています。</p>

<p>wasaviはそんなブラウザの入力欄をVim化してVimな編集を可能にしてくれるプラグインです。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#wasavi" id="markdown-toc-wasavi">wasavi</a></li>
  <li><a href="#wasaviの使い方" id="markdown-toc-wasaviの使い方">wasaviの使い方</a></li>
  <li><a href="#設定" id="markdown-toc-設定">設定</a></li>
  <li><a href="#他のvim拡張機能との競合性" id="markdown-toc-他のvim拡張機能との競合性">他のVim拡張機能との競合性</a></li>
  <li><a href="#気になる点" id="markdown-toc-気になる点">気になる点</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="wasavi">wasavi</h2>

<div class="github-widget" data-repo="akahuku/wasavi"></div>

<p>wasaviは
ブラウザの入力欄を一時的にVim化しVimな編集を可能にしてくれる
ブラウザの拡張機能です。</p>

<p>前回紹介したvim-anywhereの様に実際にVimを立ち上げるのではなく、
その場でVimをエミュレートしたものを作り出して編集する形なので
立ち上がりは早いです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/02/20/computer-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/20180220_vimanywhere.gif" width="120" height="90" alt="20180220_vimanywhere" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/02/20/computer-vim/">vim-anywhere: Mac/LinuxでどこでもVimを立ち上げてテキスト入力する</a></div></li></ul>

<p>素晴らしいことにChrome、Firefox、Operaに対応しているので
それらであればどれを使っていてもwasaviを使えます。</p>

<blockquote>
  <p><a href="https://chrome.google.com/webstore/detail/wasavi/dgogifpkoilgiofhhhodbodcfgomelhe">wasavi - Chrome ウェブストア</a></p>
</blockquote>

<blockquote>
  <p><a href="https://addons.opera.com/en/extensions/details/wasavi/">wasavi extension - Opera add-ons</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/akahuku/wasavi/raw/master/dist/wasavi.xpi">Latest and unstable version of wasavi for Firefox</a></p>
</blockquote>

<p>Firefoxに関してはFirefox Add-onsに登録されてないようですが、READMEにもある最新版のxpiをダウンロードして
Firefox上にドロップしてあげればインストールすることが出来ます<sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>。</p>

<p>作者は日本人の人らしく、日本語のドキュメントもあるので
分かりやすいと思います。</p>

<blockquote>
  <p><a href="http://appsweets.net/wasavi/">wasavi - appsweets akahuku labs.</a></p>
</blockquote>

<h2 id="wasaviの使い方">wasaviの使い方</h2>

<p>基本的な使い方は、ブラウザのTEXTAREAにフォーカスが当たってる
状態で<i class="key">Ctrl</i>-<i class="key">ENTER</i>を押します。</p>

<p>そうするとTEXTAREAがVimをエミュレートした状態に変化し、
Vimな操作で編集することが出来る様になります。</p>

<p>すでに書かれてる物があればそれもきちんと反映され編集できます。</p>

<p>通常は複数行に渡る様なテキストボックスで有効になる様になっていますが、
オプションで<code>input[type=search]</code>など有効にするなどTEXTAREAを変更することも可能です。</p>

<p>Gmail上などでも動いて
こんな感じで使えます。</p>

<p><img src="https://rcmdnk.com/images/post/20180221_wasavi.gif" alt="wasavi" class="pic" /></p>

<p>コマンドラインモードもあって、
<code>:q!&lt;ENTER&gt;</code>なら元の文字列をそのまま残す、
<code>:wq&lt;ENTER&gt;</code>なら編集後の状態を反映してwasaviを終了する、という状態になります。</p>

<h2 id="設定">設定</h2>

<p>オプションを開くと<code>exrc</code>と言う欄があってここに<strong>.vimrc</strong>みたいに<code>map</code>や<code>set</code>コマンドなどを書いておくことで
設定を反映することが出来ます。</p>

<p>初期設定だとビープ音が結構激しいので<code>set nolaunchbell</code>はしておいが方が良いと思います。</p>

<p>後は上にも書いた対象の要素の設定や
開始する時に使用するトリガーキーの設定(初期値は<i class="key">INSERT</i>と<i class="key">Ctrl</i>-<i class="key">ENTER</i>)、
除外するURLの設定などがあります。</p>

<p>また、Dropboxなどのオンラインストレージの選択項目もあり、
それらのストレージにあるファイルに直接wasaviから書き込んだり編集したり機能もついています。</p>

<h2 id="他のvim拡張機能との競合性">他のVim拡張機能との競合性</h2>

<p>READMEに書いてありますが、ブラウザ全体でVimライクな操作を出来るような拡張機能と
強豪がある場合もあるみたいで
Firefox + Keysnailなんかを使ってる場合には設定ファイルを設置する必要があるみたいです。</p>

<p>現在使ってる環境のChrome + cVimでは特に問題は無いようです。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00IE67ZSM?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00IE67ZSM&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/3110x9TzbSL._SS90_CR0,0,120,90_.jpg" alt="【並行輸入品】Toshiba Chromebook CB35-A3120 PLM01U-002005 13.3-Inch Cloud Computer" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2014/10/22/computer-firefox/">cVim: Google ChromeのVimperatorみたいな拡張</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/11/18/computer-chrome/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171118_cvim_120_90.jpg" width="120" height="90" alt="20171118_cvim_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/18/computer-chrome/">Google ChromeでcVimの設定をアップデート</a></div></li></ul>

<h2 id="気になる点">気になる点</h2>

<p>Gmailでも使える、と書きましたが
現状バグ？があるみたいで、Gmailでwasaviを立ち上げて保存終了して
反映させると全ての空白行が消えてしまいます。</p>

<blockquote>
  <p><a href="https://github.com/akahuku/wasavi/issues/134">Gmail new/blank lines bug · Issue #134 · akahuku/wasavi</a></p>
</blockquote>

<p>これは元々あった空白行も消えるので、結構書いた後にwasaviを立ち上げると
空白行が消えて面倒なことになるので気をつけたほうが良いです。
(改行コードか何かの解釈に問題があるのか、
一度wasaviを終了してまた立ち上げると消えたはずの空白行が残ってたりしました。
そこで終了してGmailに戻るとやはり空白行は消えてしまうのですが。。。a)</p>

<p>EvernoteのWeb版でもwasaviは有効に出来ましたが同様に空白行が消える問題が起こりました。</p>

<p>また、Evernoteでは<i class="key">Ctrl</i>-<i class="key">Enter</i>が効きませんでしたが、
そういった場合にも他のショートカットキーを設定するか
右クリックからのメニューで<strong>wasaviで編集</strong>を選択すると
wasaviを立ち上げられます。</p>

<p>Gmailでもインストール直後とか時々使えなかったりしました。
(ちょっとどの様な条件なのかわからなかったですが。)</p>

<h2 id="まとめ">まとめ</h2>

<p>ブラウザの入力欄でも場合によっては結構な量を書くこともあるかと思います。</p>

<p>そういった場合にやはりVimで編集できるのは嬉しいことで、
wasaviを使えばその場でVimを使えます。</p>

<p>vim-anywhereや拡張機能でも入力欄から外部のVimを呼び出して編集する様なものもありますが、
別途アプリが必要だったり立ち上げるのに時間がかかったりするのがちょっと面倒です。</p>

<p>それに比べてwasaviであればその場で出来て素早く編集できます。</p>

<p>VimそのものではないためVimの全ての機能が使えるわけではありませんが、
基本的な移動操作は勿論、コマンドモードでの<code>:sort</code>や<code>:%s/foo/bar/</code>の様な置換なども
行えてノーマルなVim動作は一通り出来る様になっています。</p>

<p>さらにはChrome/Firefox/Operaと複数のブラウザに対応してるので
自分の好きなブラウザで使えるのも嬉しい所。</p>

<p>cVimやVimiumといった(今は亡きVimperator的な)ブラウザ操作をVimライクにするものとも
共存出来るので
wasaviを加えてより一層Vim感を増すことが可能になります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim-anywhere: Mac/LinuxでどこでもVimを立ち上げてテキスト入力する]]></title>
    <link href="https://rcmdnk.com/blog/2018/02/20/computer-vim/"/>
    <updated>2018-02-20T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/02/20/computer-vim</id>
    <content type="html"><![CDATA[<p>VimmerにとってVim以外の環境で普通にテキストを書かされるのは
非常に辛いことですが、
それを解決する色々な方法が考えられています。</p>

<p>vim-anywhereはテキスト入力時にVimを立ち上げて文字を入力しクリップボードに保存、
テキスト入力エリアに貼り付けられる様にしてくれます。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#vim-anywhere" id="markdown-toc-vim-anywhere">vim-anywhere</a></li>
  <li><a href="#vim-anywhereのための準備" id="markdown-toc-vim-anywhereのための準備">vim-anywhereのための準備</a></li>
  <li><a href="#vim-anywhereのインストールアンインストール" id="markdown-toc-vim-anywhereのインストールアンインストール">vim-anywhereのインストール/アンインストール</a></li>
  <li><a href="#vim-anywhereを呼び出すショートカット設定" id="markdown-toc-vim-anywhereを呼び出すショートカット設定">vim-anywhereを呼び出すショートカット設定</a></li>
  <li><a href="#vim-anywhereを使ってみる" id="markdown-toc-vim-anywhereを使ってみる">vim-anywhereを使ってみる</a></li>
  <li><a href="#new-macvim-buffer-with-selection" id="markdown-toc-new-macvim-buffer-with-selection">New MacVim Buffer With Selection</a></li>
  <li><a href="#まとめ" id="markdown-toc-まとめ">まとめ</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="vim-anywhere">vim-anywhere</h2>

<div class="github-widget" data-repo="cknadler/vim-anywhere"></div>

<p>テキスト入力時にどこからでもVimを立ち上げてVimを使って文字入力をしよう、というソフトウェア。
対象OSはmacOSとLinuxでWindowsでは今のところ使えないようです。</p>

<h2 id="vim-anywhereのための準備">vim-anywhereのための準備</h2>

<p>実際にGUIなVimを立ち上げるためmacOSではMacVim、LinuxではgVimのインストールが必要になります。</p>

<p>Mac + HomebrewならMacVimは</p>

<pre><code>$ brew cask install macvim
</code></pre>

<p>で。MacVimはHomebrew-coreのFormulaにもCaskにも両方あるのですが、</p>

<pre><code>$ brew install macvim
</code></pre>

<p>だと<strong>/Applications/MacVim.app</strong>がインストールされません。</p>

<p>逆に以前Caskでは<strong>/usr/local/bin/mvim</strong>等がインストールされませんでしたが
現在は<strong>/Applications/MacVim.app/Contents/bin/mvim</strong>にリンクが貼られる様になっています。</p>

<p>なので現状<code>macvim</code>はCaskでインストールした方が良いです。</p>

<blockquote>
  <p><a href="https://github.com/Homebrew/homebrew-core/issues/20707">macvim does not install MacVim.app · Issue #20707 · Homebrew/homebrew-core</a></p>
</blockquote>

<h2 id="vim-anywhereのインストールアンインストール">vim-anywhereのインストール/アンインストール</h2>

<p>vim-anywhere自体のインストールはスクリプトを使って</p>

<pre><code>$ curl -fsSL https://raw.github.com/cknadler/vim-anywhere/master/install | bash
</code></pre>

<p>の様にします。</p>

<p>インストールすると<strong>~/.vim-anywhere</strong>というディレクトリができてその中に<strong>uninstall</strong>スクリプトなどが収納されています。
実際インストール時に何をやってるか見たかったら<strong>~/.vim-anywhere/install</strong>を見ると分かります。</p>

<p>アンインストールはこの<strong>~/.vim-anywhere/uninstall</strong>を実行するだけ。</p>

<pre><code>$ ~/.vim-anywhere/uninstall
</code></pre>

<h2 id="vim-anywhereを呼び出すショートカット設定">vim-anywhereを呼び出すショートカット設定</h2>

<p>インストールするとMacなら<strong>設定</strong>の<strong>キーボード</strong><i class="fa fa-arrow-right"></i><strong>ショートカット</strong>が開かれるはずです。</p>

<p><img src="https://rcmdnk.com/images/post/20180220_shortcut.jpg" alt="shortcut" class="pic" /></p>

<p>そこで<strong>サービス</strong>の一覧の下の方の<strong>一般</strong>のくくりに<strong>VimAnywhere</strong>が追加されてるので、
チェックを入れ、好きなショートカットに設定します。
(デフォルトはMacでは<i class="key">⌃</i>-<i class="key">⌘</i>-<i class="key">V</i>。)</p>

<p>LinuxではGnomeなら</p>

<pre><code>$ gconftool -t str --set /desktop/gnome/keybindings/vim-anywhere/binding '&lt;Ctrl&gt;&lt;Alt&gt;v'
</code></pre>

<p>など。</p>

<p>I3WMを使っているなら</p>

<pre><code>$ echo "bindsym Ctrl+Alt+v exec ~/.vim-anywhere/bin/run" &gt;&gt; ~/.i3/config
</code></pre>

<p>などとします。</p>

<p>ショートカットが被ると使えないことがあって、Macで
<i class="key">⌃</i>-<i class="key">⌘</i>-<i class="key">V</i>
だとMicrosoft Officeやテキストエディットで使えませんでした。</p>

<p><i class="key">⌃</i>-<i class="key">⌘</i>-<i class="key">⇧</i>-<i class="key">V</i>
とかすればそれらでも使えました。</p>

<h2 id="vim-anywhereを使ってみる">vim-anywhereを使ってみる</h2>

<p>準備が出来たら適当な入力欄に行って<i class="key">⌃</i>-<i class="key">⌘</i>-<i class="key">V</i>などを押してみます。</p>

<p>押すと空の一時ファイルを開いたMacVimやgVimが立ち上がり、そこで何か書いて保存終了すると
その内容がクリップボードに入ります。
(一時ファイルの内容をmacOSなら<code>pbcopy</code>、Linuxなら<code>xclip</code>でクリップボードに入れる。)</p>

<p>終了時に元に居たアプリケーションの入力欄にフォーカスがあたるので
そのまま<i class="key">⌘</i>-<i class="key">V</i>とか押してペーストすればVimで書いた内容が書き込めます。</p>

<p><img src="https://rcmdnk.com/images/post/20180220_vimanywhere.gif" alt="vimanywhere" class="pic" /></p>

<p>元々書き込んでいた内容などを編集することはできず、
追加したい内容をVimで編集してクリップボードに入れ、
貼り付けで追加する、といった形です。
(最初よく読まずにVimを終了したら自動で書き込まれると思っていたので、何も起こらずに上手く動作してないかと思いました。)</p>

<p>Macでvim-anywhereでMacVimを起動している間はメニューバーに
歯車が表れて実行中だということがわかります。</p>

<p><img src="https://rcmdnk.com/images/post/20180220_menu.jpg" alt="menu" class="pic" /></p>

<h2 id="new-macvim-buffer-with-selection">New MacVim Buffer With Selection</h2>

<p>MacVimをインストールすると、上の絵にもあるようにサービスに
<strong>New MacVim Buffer With Selection</strong>という項目も追加されているはずです。</p>

<p>このメニューはブラウザでもどこでも文字列を選択した状態で
<strong>右クリック</strong><i class="fa fa-arrow-right"></i><strong>サービズ</strong>のメニューの中に表れて、
これを選択すると選択した文字列が書かれたMacVimが立ち上がります。</p>

<p>このMacVimはファイルを開いてないので保存とかするにはファイルを指定したりする必要がありますが、
選択する文字列はテキスト入力エリアでなくても、
PDFの文字列でもなんでも良いので、適当なものをコピーしてすぐに編集したい、
という場合は使えます。</p>

<p>編集後はVimからコピーして他に貼り付けるか、新たなファイルとして保存したりします。</p>

<p>こちらもショートカットキーの指定も出来るので適当に割り当てても良いかもしれません。
(それほど使わないなら右クリックメニューでも十分かもしれませんが。)</p>

<h2 id="まとめ">まとめ</h2>

<p>Vimをどこでも使う、という方法の1つですが、
これは実際にVimを呼び出す、ということで実現する方法です。</p>

<p>ブラウザでは拡張機能でテキストエリアからVimを呼び出して編集、
とかをすることが出来るものがありますが、
vim-anywhereはどのアプリからでもVimを呼び出せます。</p>

<p>ただし、入力欄を<strong>Vimで編集する</strong>というよりは、
新たに入力する<strong>文字列をVimで準備する</strong>と言った感じです。</p>

<p>終了後に元のアプリの入力欄にフォーカスが戻る、というのが利点として書いてありますが、
元のアプリに戻る時、大概の場合は前にフォーカスが当たってた所に戻るので
特にこのソフトがどうこうでは無いところだと思います。</p>

<p>事前にVimのコピーをOSのクリップボードと繋げられていれば、
実際の所、これは自分でVimを立ち上げて、<i class="key">⌘</i>-<i class="key">Tab</i>で切り替えて入力、
Vim内で内容をコピー、<i class="key">⌘</i>-<i class="key">Tab</i>で元のアプリに切り替えて貼り付け、
で全く同じ事が出来ます。</p>

<p>vim-anywhereでVimを毎回立ち上げるのはちょっと時間がかかるため、
(Vimmerなら)普段から立ち上げてるVimやターミナルなどに切り替えて文字を入力してコピーして戻る、
的なことをした方が早いです。</p>

<p>個人的な感想としてはわざわざこれを使ってやることではないかな、、、という感じでした。
すでに入力してある文字列を含めて編集出来るのであれば大分使い勝手は違うと思いますが、
ユニバーサルな感じでやるにはかなり難しいのかな、と。</p>

<p>MacならVimを立ち上げる直前に<i class="key">⌘</i>-<i class="key">A</i> <i class="key">⌘</i>-<i class="key">C</i>
した上でVimを立ち上げてVimにクリップボードの内容を貼り付けて開始、
みたいなことも可能そうですが、<i class="key">⌘</i>-<i class="key">A</i>が効かないアプリも中にはあるので
完璧にはならないかな。
（でもこんな感じで結構出来そうな感じがしないでもない。)</p>

<p>もしくは
<strong>New MacVim Buffer With Selection</strong>の機能の様に、
文字列を選択してる場合にはそれを初期値として使う、という機能があれば嬉しい。
(これは簡単にできそうな感じがする。)</p>

<p>まあパッとVimを呼び出せるだけでも嬉しい人も居るはずです。</p>

<p>この様に実際にVimを呼び出してしまう、という方法も1つですが、
Vim以外の環境でそのキーバインドを使おうというのも別の方法としてあります。
別途Vimアプリを立ち上げるとかではなく、そのアプリ上でそのまま入力しながらかつVimライクな動きをする、という方法。</p>

<p>そういったことを
WindowsではAutoHotkey、MacではKarabiner-Elementsを使ってキーバインド設定して出来る様にしたものを以下では紹介しています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2013/08/03/computer-windows-autohotkey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20130723_AutoHotKey_120_90.jpg" width="120" height="90" alt="20130723_AutoHotKey_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2013/08/03/computer-windows-autohotkey/">Vim以外でVimする: Windows+AutoHotkey編</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/09/05/computer-mac-karabiner-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20170905_vimemu_120_90.jpg" width="120" height="90" alt="20170905_vimemu_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/09/05/computer-mac-karabiner-vim/">Vim以外でVimする: Mac+Karabiner-Elements編</a></div></li></ul>

<div class="postscript">
  <p><strong>追記: 2018/02/21 </strong></p>

  <p>ブラウザの入力機能に絞るならwasaviもおすすめです。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/02/21/computer-vim-firefox-chrome/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/20180221_wasavi.gif" width="120" height="90" alt="20180221_wasavi" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/02/21/computer-vim-firefox-chrome/">wasavi: ブラウザの入力領域をVim化する拡張機能</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

<div class="postscript">
  <p><strong>追記: 2018/03/04 </strong></p>

  <p>Emacs版も出来たみたいです。</p>

  <ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2018/03/04/computer-emacs/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20180304_shortcut_120_90.jpg" width="120" height="90" alt="20180304_shortcut_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2018/03/04/computer-emacs/">emacs-anywhere: Mac/LinuxでどこでもEmacsを立ち上げてテキスト入力する</a></div></li></ul>

  <p><strong>追記ここまで</strong></p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VimのプラグインUnite.vimからdenite.nvimへの移行]]></title>
    <link href="https://rcmdnk.com/blog/2018/02/16/computer-vim/"/>
    <updated>2018-02-16T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2018/02/16/computer-vim</id>
    <content type="html"><![CDATA[<p>NeoBundle<i class="fa fa-arrow-right"></i>Dein.vim、
neocomplete<i class="fa fa-arrow-right"></i>deoplete.nvim
に引き続き、Unite.vimのDark powered化が進んだdenite.nvimも
Vim 8に対応しUnite.vimの方は今後バグフィックスのみ
とする、となった様なのでdenite.nvimを導入してみました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#dark-power化" id="markdown-toc-dark-power化">Dark power化</a></li>
  <li><a href="#denitenvimの導入" id="markdown-toc-denitenvimの導入">denite.nvimの導入</a></li>
  <li><a href="#deniteの設定" id="markdown-toc-deniteの設定">deniteの設定</a></li>
  <li><a href="#残るは" id="markdown-toc-残るは">残るは</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="dark-power化">Dark power化</h2>

<p><a href="https://github.com/Shougo">Shougo</a>さんのVimプラグインがNeoVim
への対応のタイミング?で明確なDark powered化されるべく<code>D</code>な
プラグインへ移行が進んでいますが、
同時にVim 8へも対応する様になり、前に使っていた同様の
プラグインがobsolete化する様になっています。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail"><div class="amazon-img">
  <a href="//www.amazon.co.jp/gp/product/B00L8P0R6I?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00L8P0R6I&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img src="https://images-na.ssl-images-amazon.com/images/I/61AOinx9z-L._SS90_CR0,0,120,90_.jpg" alt="be quiet! 静音PC電源 80PLUS GOLD認証 DARK POWER PRO 10シリーズ 750W 国内正規代理店品" /></a>
</div></div><a class="click_box_link" href="https://rcmdnk.com/blog/2016/03/10/computer-vim/">NeoBundleからDein.vimへの移行</a></div></li></ul>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/11/16/computer-vim/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171116_deoplete_120_90.jpg" width="120" height="90" alt="20171116_deoplete_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/16/computer-vim/">Vimでの補完ツールプラグインをneocompleteからdeopleteへ</a></div></li></ul>

<p>denite.nvimもVim 8への対応が出来る様になったので
Unite.vimの方は今後バグフィックスのみになるようです。</p>

<h2 id="denitenvimの導入">denite.nvimの導入</h2>

<div class="github-widget" data-repo="Shougo/denite.nvim"></div>

<p>deniteはPython3を使うので使う環境でPython3がインストールされている必要があります。</p>

<p>Vim 8では<code>--enable-python3interp=yes</code>でコンパイルするなりして
Python3を有効にする必要があります。</p>

<p>Mac &amp; Homebrewなら</p>

<pre><code>$ brew install vim --with-python3
</code></pre>

<p>NeoVimを使っている場合には<code>pip3</code>で<code>neovim</code>をインストールしておく必要があります。</p>

<pre><code>$ pip3 install neovim
</code></pre>

<p>また、Python3.5より前の環境では</p>

<pre><code>$ pip3 install typing
</code></pre>

<p>として<code>typing</code>がインストールされている必要があります。</p>

<p>いずれの場合もVimの中で</p>

<pre><code>:echo has('python3')
</code></pre>

<p>で1が出るようになっていればPython3はOKです。</p>

<p><strong>.vimrc</strong>でプラグイン管理している場合などは、
deinなら、</p>

<figure class="code"><figcaption><span>.vimrc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="vim"><span class="line"><span></span><span class="k">if</span> has<span class="p">(</span><span class="s1">&#39;python3&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/denite.nvim&#39;</span><span class="p">)</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/unite.vim&#39;</span><span class="p">)</span>
</span><span class="line"><span class="k">endif</span>
</span></code></pre></td></tr></table></div></figure>

<p>みたいな感じで<code>python3</code>が有効かどうかでdeniteの代わりにuniteを使う様にする事もできます。</p>

<p>ただし、deniteではUniteのソースをそのまま使う事も出来る様になっていて、
deniteとUniteを両方インストールする必要がある場合もあります。</p>

<p>その場合は</p>

<figure class="code"><figcaption><span>.vimrc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="vim"><span class="line"><span></span><span class="k">if</span> has<span class="p">(</span><span class="s1">&#39;python3&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/denite.nvim&#39;</span><span class="p">)</span>
</span><span class="line"><span class="k">endif</span>
</span><span class="line"><span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/unite.vim&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じ。</p>

<p><a href="https://github.com/Shougo/neomru.vim">neomru</a>
などはUnite/denite両方に対応していて
両方から直接呼ぶことが出来ますが、
deniteに対応してないUniteのソースは<code>:Denite unite:file</code>の様に
<code>unite</code>の識別子を付けた形でソースを呼ぶことでdeniteから呼ぶことが可能になります。</p>

<p>ちなみに現在はソースとしてはneomruだけ追加しています。</p>

<figure class="code"><figcaption><span>.vimrc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="vim"><span class="line"><span></span><span class="k">if</span> has<span class="p">(</span><span class="s1">&#39;python3&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/denite.nvim&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/neomru.vim&#39;</span><span class="p">)</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/unite.vim&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="k">call</span> dein#add<span class="p">(</span><span class="s1">&#39;Shougo/neomru.vim&#39;</span><span class="p">)</span>
</span><span class="line">  ...
</span><span class="line"><span class="k">endif</span>
</span></code></pre></td></tr></table></div></figure>

<p>導入後、NeoVimの場合は最初に</p>

<pre><code>:UpdateRemotePlugins
</code></pre>

<p>を行う様に促されるのでこれを実行します。</p>

<h2 id="deniteの設定">deniteの設定</h2>

<p>実はUniteもイマイチちゃんと使いこなせて無かったので
deniteにするタイミングで上手いこと使える様になれないかな、
と思ってる感じです。</p>

<p>なのでとりあえず使える様にしたのと、
どの様なソースがあるのか忘れてしまうので
一通り<code>menu</code>機能を使って呼べる様にしました。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
</pre></td><td class="code"><pre><code class="vim"><span class="line"><span></span><span class="k">if</span> dein#tap<span class="p">(</span><span class="s1">&#39;denite.nvim&#39;</span><span class="p">)</span>
</span><span class="line"><span class="c">  &quot; Add custom menus</span>
</span><span class="line">  <span class="k">let</span> s:menus <span class="p">=</span> {}
</span><span class="line">  <span class="k">let</span> s:menus.<span class="k">file</span> <span class="p">=</span> {<span class="s1">&#39;description&#39;</span>: <span class="s1">&#39;File search (buffer, file, file_rec, file_mru&#39;</span>}
</span><span class="line">  <span class="k">let</span> s:menus.line <span class="p">=</span> {<span class="s1">&#39;description&#39;</span>: <span class="s1">&#39;Line search (change, grep, line, tag&#39;</span>}
</span><span class="line">  <span class="k">let</span> s:menus.others <span class="p">=</span> {<span class="s1">&#39;description&#39;</span>: <span class="s1">&#39;Others (command, command_history, help)&#39;</span>}
</span><span class="line">  <span class="k">let</span> s:menus.<span class="k">file</span>.command_candidates <span class="p">=</span> [
</span><span class="line">        \ [<span class="s1">&#39;buffer&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite buffer&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;file: Files in the current directory&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite file&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;file_rec: Files, recursive list under the current directory&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite file_rec&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;file_mru: Most recently used files&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite file_mru&#39;</span>]
</span><span class="line">        \ ]
</span><span class="line">  <span class="k">let</span> s:menus.line.command_candidates <span class="p">=</span> [
</span><span class="line">        \ [<span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite change&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;grep :grep&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite grep&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;line&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite line&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;tag&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite tag&#39;</span>]
</span><span class="line">        \ ]
</span><span class="line">  <span class="k">let</span> s:menus.others.command_candidates <span class="p">=</span> [
</span><span class="line">        \ [<span class="s1">&#39;command&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite command&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;command_history&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite command_history&#39;</span>]<span class="p">,</span>
</span><span class="line">        \ [<span class="s1">&#39;help&#39;</span><span class="p">,</span> <span class="s1">&#39;Denite help&#39;</span>]
</span><span class="line">        \ ]
</span><span class="line">
</span><span class="line">  <span class="k">call</span> denite#custom#var<span class="p">(</span><span class="s1">&#39;menu&#39;</span><span class="p">,</span> <span class="s1">&#39;menus&#39;</span><span class="p">,</span> s:menus<span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="nb">nnoremap</span> [denite] <span class="p">&lt;</span>Nop<span class="p">&gt;</span>
</span><span class="line">  nmap <span class="p">&lt;</span>Leader<span class="p">&gt;</span><span class="k">u</span> [denite]
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">b</span> :Denite buffer<span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">c</span> :Denite <span class="k">changes</span><span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">f</span> :Denite <span class="k">file</span><span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">g</span> :Denite <span class="k">grep</span><span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">h</span> :Denite help<span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">h</span> :Denite help<span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">l</span> :Denite line<span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">t</span> :Denite <span class="nb">tag</span><span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">m</span> :Denite file_mru<span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">  <span class="nb">nnoremap</span> <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> [denite]<span class="k">u</span> :Denite menu<span class="p">&lt;</span>CR<span class="p">&gt;</span>
</span><span class="line">
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;Down&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:move_to_next_line&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;Up&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:move_to_previous_line&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;C-N&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:move_to_next_line&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;C-P&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:move_to_previous_line&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;C-G&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:assign_next_txt&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;C-T&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:assign_previous_line&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;normal&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;/&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:enter_mode:insert&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line">  <span class="k">call</span> denite#custom#map<span class="p">(</span>
</span><span class="line">        \ <span class="s1">&#39;insert&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;Esc&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;&lt;denite:enter_mode:normal&gt;&#39;</span><span class="p">,</span>
</span><span class="line">        \ <span class="s1">&#39;noremap&#39;</span>
</span><span class="line">        \<span class="p">)</span>
</span><span class="line"><span class="k">endif</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>&lt;Leader&gt;u</code>を押した後に適当なキーを押すと各ソースが呼び出せる様になっています。
<code>u</code>なのはUniteで使ってたため。</p>

<p>後はdenite立ち上げ後のキー設定として、<code>&lt;C-N&gt;</code>/<code>&lt;C-P&gt;</code>が
履歴の呼び出しになっているを候補を選ぶ操作に変更しました。</p>

<p>最初のメニューに関しては<code>&lt;Leader&gt;uu</code>通すと出てきて、
ソースを選択することが出来る様になっています。</p>

<p><img src="https://rcmdnk.com/images/post/20180216_denite.gif" alt="denite" class="pic" /></p>

<h2 id="残るは">残るは</h2>

<p><a href="https://github.com/Shougo/neosnippet.vim">neosnippet.vim</a>
がまだ残っていて、これの後継にあたる
<a href="https://github.com/Shougo/deoppet.nvim">deoppet.nvim</a>
がこれ自体がまだ開発段階みたいです。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim_ahkでウィンドウを定期的にチェックしてトレイアイコンを変えられる様にした]]></title>
    <link href="https://rcmdnk.com/blog/2017/11/22/computer-autohotkey-vim/"/>
    <updated>2017-11-22T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/blog/2017/11/22/computer-autohotkey-vim</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rcmdnk/vim_ahk">vim_ahk</a>
の設定でアクティブウィンドウを定期的にチェックして、
もしvim_ahk対応でないウィンドウの場合には
アイコンをDisabledアイコンにアップデート出来る様にしました。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#autohotkeyで定期的なチェックを行う" id="markdown-toc-autohotkeyで定期的なチェックを行う">AutoHotkeyで定期的なチェックを行う</a></li>
  <li><a href="#ahk_vimでウィンドウチェック" id="markdown-toc-ahk_vimでウィンドウチェック">ahk_vimでウィンドウチェック</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="7116417646"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h2 id="autohotkeyで定期的なチェックを行う">AutoHotkeyで定期的なチェックを行う</h2>

<p>ToolTipを出す時に使った
<a href="https://autohotkey.com/docs/commands/SetTimer.htm">SetTimer</a>
を使います。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/11/10/computer-windows-autohotkey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171110_ahktooltip_120_90.jpg" width="120" height="90" alt="20171110_ahktooltip_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/10/computer-windows-autohotkey/">AutoHotkeyでToolTipを出す</a></div></li></ul>

<p>ToolTipのときにはどちらかと言うと無理やりSetTimerを使って時間差で消す、という作業を
行ってましたが、
本来SetTimerで時間をセットするとその時間毎にコマンドを実行する様になります。</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nb">#Persistent</span><span class="c1"> ; Keep script running</span>
</span><span class="line">
</span><span class="line"><span class="nb">SetTimer</span><span class="p">,</span> <span class="n">CheckWindow</span><span class="p">,</span> <span class="mi">10000</span><span class="c1"> ; Set timer (ms)</span>
</span><span class="line"><span class="nb">Return</span><span class="c1"> ; End of Auto-execute section</span>
</span><span class="line">
</span><span class="line"><span class="nl">CheckWindow:</span>
</span><span class="line">  <span class="nb">WinGet</span><span class="p">,</span> <span class="n">process</span><span class="p">,</span> <span class="n">PID</span><span class="p">,</span> <span class="n">A</span>
</span><span class="line">  <span class="nb">WinGet</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">ProcessName</span><span class="p">,</span> <span class="n">ahk_pid</span> <span class="nv">%process%</span>
</span><span class="line">  <span class="nb">WinGetClass</span><span class="p">,</span> <span class="n">class</span><span class="p">,</span> <span class="n">ahk_pid</span> <span class="nv">%process%</span>
</span><span class="line">  <span class="nb">WinGetTitle</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">ahk_pid</span> <span class="nv">%process%</span>
</span><span class="line">  <span class="nb">Msgbox</span><span class="p">,</span>
</span><span class="line">  <span class="g">(</span>
</span><span class="line"><span class="g">    Process name: %name%</span>
</span><span class="line"><span class="g">    Class       : %class%</span>
</span><span class="line"><span class="g">    Title       : %title%</span>
</span><span class="line"><span class="g">  )</span>
</span><span class="line"><span class="nb">Return</span>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じのスクリプトを実行すれば
10秒ごとにその時のアクティブウィンドウのタイトルとかをポップアップメッセージとして出します。</p>

<p>止めたくなったら</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ahk"><span class="line"><span></span><span class="nb">SetTimer</span><span class="p">,</span> <span class="n">CheckWindow</span><span class="p">,</span> <span class="n">OFF</span>
</span></code></pre></td></tr></table></div></figure>

<p>を実行します。</p>

<h2 id="ahk_vimでウィンドウチェック">ahk_vimでウィンドウチェック</h2>

<p>こんな感じです。</p>

<p><img src="https://rcmdnk.com/images/post/20171122_ahkvimiconcheck.gif" alt="ahkvimiconcheck" class="pic" /></p>

<p>ターミナル(putty、vim_ahk無効)とメモ帳(vim_ahk有効)の2つの
ウィンドウを行ったり来たりして、ターミナル上に行くと灰色のDisabledアイコンになってるのがわかると思います。</p>

<p>デフォルトでは1秒毎にチェックします。</p>

<p>この設定はメニューから開ける設定画面から
チェックのオンオフやチェック間隔を変更することが出来ます。</p>

<ul class="post_card"><li class="index_click_box"><div class="group"><div class="title-small-thumbnail">
  <a href="https://rcmdnk.com/blog/2017/11/11/computer-windows-autohotkey/"><img class="small-thumbnail-img" src="https://rcmdnk.com/images/post/thumbnail/20171111_vimahksettings_120_90.png" width="120" height="90" alt="20171111_vimahksettings_120_90" /></a>
</div><a class="click_box_link" href="https://rcmdnk.com/blog/2017/11/11/computer-windows-autohotkey/">vim_ahkでメニューから設定変更出来る様にした</a></div></li></ul>
]]></content>
  </entry>
  
</feed>
